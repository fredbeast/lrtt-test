webpackJsonp([1], [function(t, n, e) {
    var r = e(8),
        o = e(50),
        i = e(39),
        a = e(40),
        s = e(46),
        u = function(t, n, e) {
            var l, c, p, f, h = t & u.F,
                d = t & u.G,
                g = t & u.S,
                v = t & u.P,
                y = t & u.B,
                m = d ? r : g ? r[n] || (r[n] = {}) : (r[n] || {}).prototype,
                _ = d ? o : o[n] || (o[n] = {}),
                b = _.prototype || (_.prototype = {});
            d && (e = n);
            for (l in e) c = !h && m && void 0 !== m[l], p = (c ? m : e)[l], f = y && c ? s(p, r) : v && "function" == typeof p ? s(Function.call, p) : p, m && a(m, l, p, t & u.U), _[l] != p && i(_, l, f), v && b[l] != p && (b[l] = p)
        };
    r.core = o, u.F = 1, u.G = 2, u.S = 4, u.P = 8, u.B = 16, u.W = 32, u.U = 64, u.R = 128, t.exports = u
}, , , , , , , function(t, n, e) {
    var r = e(16);
    t.exports = function(t) {
        if (!r(t)) throw TypeError(t + " is not an object!");
        return t
    }
}, function(t, n) {
    var e = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    "number" == typeof __g && (__g = e)
}, , , , , , function(t, n) {
    t.exports = function(t) {
        try {
            return !!t()
        } catch (t) {
            return !0
        }
    }
}, , function(t, n) {
    t.exports = function(t) {
        return "object" == typeof t ? null !== t : "function" == typeof t
    }
}, , function(t, n, e) {
    var r = e(149)("wks"),
        o = e(84),
        i = e(8).Symbol,
        a = "function" == typeof i;
    (t.exports = function(t) {
        return r[t] || (r[t] = a && i[t] || (a ? i : o)("Symbol." + t))
    }).store = r
}, , , , , , function(t, n, e) {
    t.exports = !e(14)(function() {
        return 7 != Object.defineProperty({}, "a", {
            get: function() {
                return 7
            }
        }).a
    })
}, function(t, n, e) {
    var r = e(7),
        o = e(274),
        i = e(54),
        a = Object.defineProperty;
    n.f = e(24) ? Object.defineProperty : function(t, n, e) {
        if (r(t), n = i(n, !0), r(e), o) try {
            return a(t, n, e)
        } catch (t) {}
        if ("get" in e || "set" in e) throw TypeError("Accessors not supported!");
        return "value" in e && (t[n] = e.value), t
    }
}, function(t, n, e) {
    var r = e(53),
        o = Math.min;
    t.exports = function(t) {
        return t > 0 ? o(r(t), 9007199254740991) : 0
    }
}, function(t, n, e) {
    var r = e(51);
    t.exports = function(t) {
        return Object(r(t))
    }
}, , , , , , function(t, n) {
    t.exports = function(t) {
        if ("function" != typeof t) throw TypeError(t + " is not a function!");
        return t
    }
}, , , , , function(t, n) {
    var e = {}.hasOwnProperty;
    t.exports = function(t, n) {
        return e.call(t, n)
    }
}, function(t, n, e) {
    var r = e(25),
        o = e(80);
    t.exports = e(24) ? function(t, n, e) {
        return r.f(t, n, o(1, e))
    } : function(t, n, e) {
        return t[n] = e, t
    }
}, function(t, n, e) {
    var r = e(8),
        o = e(39),
        i = e(38),
        a = e(84)("src"),
        s = Function.toString,
        u = ("" + s).split("toString");
    e(50).inspectSource = function(t) {
        return s.call(t)
    }, (t.exports = function(t, n, e, s) {
        var l = "function" == typeof e;
        l && (i(e, "name") || o(e, "name", n)), t[n] !== e && (l && (i(e, a) || o(e, a, t[n] ? "" + t[n] : u.join(String(n)))), t === r ? t[n] = e : s ? t[n] ? t[n] = e : o(t, n, e) : (delete t[n], o(t, n, e)))
    })(Function.prototype, "toString", function() {
        return "function" == typeof this && this[a] || s.call(this)
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(14),
        i = e(51),
        a = /"/g,
        s = function(t, n, e, r) {
            var o = String(i(t)),
                s = "<" + n;
            return "" !== e && (s += " " + e + '="' + String(r).replace(a, "&quot;") + '"'), s + ">" + o + "</" + n + ">"
        };
    t.exports = function(t, n) {
        var e = {};
        e[t] = n(s), r(r.P + r.F * o(function() {
            var n = "" [t]('"');
            return n !== n.toLowerCase() || n.split('"').length > 3
        }), "String", e)
    }
}, function(t, n, e) {
    var r = e(105),
        o = e(80),
        i = e(44),
        a = e(54),
        s = e(38),
        u = e(274),
        l = Object.getOwnPropertyDescriptor;
    n.f = e(24) ? l : function(t, n) {
        if (t = i(t), n = a(n, !0), u) try {
            return l(t, n)
        } catch (t) {}
        if (s(t, n)) return o(!r.f.call(t, n), t[n])
    }
}, function(t, n, e) {
    var r = e(38),
        o = e(27),
        i = e(218)("IE_PROTO"),
        a = Object.prototype;
    t.exports = Object.getPrototypeOf || function(t) {
        return t = o(t), r(t, i) ? t[i] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? a : null
    }
}, function(t, n, e) {
    var r = e(104),
        o = e(51);
    t.exports = function(t) {
        return r(o(t))
    }
}, function(t, n) {
    var e = {}.toString;
    t.exports = function(t) {
        return e.call(t).slice(8, -1)
    }
}, function(t, n, e) {
    var r = e(33);
    t.exports = function(t, n, e) {
        if (r(t), void 0 === n) return t;
        switch (e) {
            case 1:
                return function(e) {
                    return t.call(n, e)
                };
            case 2:
                return function(e, r) {
                    return t.call(n, e, r)
                };
            case 3:
                return function(e, r, o) {
                    return t.call(n, e, r, o)
                }
        }
        return function() {
            return t.apply(n, arguments)
        }
    }
}, function(t, n, e) {
    "use strict";
    var r = e(14);
    t.exports = function(t, n) {
        return !!t && r(function() {
            n ? t.call(null, function() {}, 1) : t.call(null)
        })
    }
}, , function(t, n, e) {
    var r = e(46),
        o = e(104),
        i = e(27),
        a = e(26),
        s = e(203);
    t.exports = function(t, n) {
        var e = 1 == t,
            u = 2 == t,
            l = 3 == t,
            c = 4 == t,
            p = 6 == t,
            f = 5 == t || p,
            h = n || s;
        return function(n, s, d) {
            for (var g, v, y = i(n), m = o(y), _ = r(s, d, 3), b = a(m.length), w = 0, x = e ? h(n, b) : u ? h(n, 0) : void 0; b > w; w++)
                if ((f || w in m) && (g = m[w], v = _(g, w, y), t))
                    if (e) x[w] = v;
                    else if (v) switch (t) {
                case 3:
                    return !0;
                case 5:
                    return g;
                case 6:
                    return w;
                case 2:
                    x.push(g)
            } else if (c) return !1;
            return p ? -1 : l || c ? c : x
        }
    }
}, function(t, n) {
    var e = t.exports = {
        version: "2.5.3"
    };
    "number" == typeof __e && (__e = e)
}, function(t, n) {
    t.exports = function(t) {
        if (void 0 == t) throw TypeError("Can't call method on  " + t);
        return t
    }
}, function(t, n, e) {
    var r = e(0),
        o = e(50),
        i = e(14);
    t.exports = function(t, n) {
        var e = (o.Object || {})[t] || Object[t],
            a = {};
        a[t] = n(e), r(r.S + r.F * i(function() {
            e(1)
        }), "Object", a)
    }
}, function(t, n) {
    var e = Math.ceil,
        r = Math.floor;
    t.exports = function(t) {
        return isNaN(t = +t) ? 0 : (t > 0 ? r : e)(t)
    }
}, function(t, n, e) {
    var r = e(16);
    t.exports = function(t, n) {
        if (!r(t)) return t;
        var e, o;
        if (n && "function" == typeof(e = t.toString) && !r(o = e.call(t))) return o;
        if ("function" == typeof(e = t.valueOf) && !r(o = e.call(t))) return o;
        if (!n && "function" == typeof(e = t.toString) && !r(o = e.call(t))) return o;
        throw TypeError("Can't convert object to primitive value")
    }
}, , , , , , , , , function(t, n, e) {
    var r = e(295),
        o = e(0),
        i = e(149)("metadata"),
        a = i.store || (i.store = new(e(298))),
        s = function(t, n, e) {
            var o = a.get(t);
            if (!o) {
                if (!e) return;
                a.set(t, o = new r)
            }
            var i = o.get(n);
            if (!i) {
                if (!e) return;
                o.set(n, i = new r)
            }
            return i
        },
        u = function(t, n, e) {
            var r = s(n, e, !1);
            return void 0 !== r && r.has(t)
        },
        l = function(t, n, e) {
            var r = s(n, e, !1);
            return void 0 === r ? void 0 : r.get(t)
        },
        c = function(t, n, e, r) {
            s(e, r, !0).set(t, n)
        },
        p = function(t, n) {
            var e = s(t, n, !1),
                r = [];
            return e && e.forEach(function(t, n) {
                r.push(n)
            }), r
        },
        f = function(t) {
            return void 0 === t || "symbol" == typeof t ? t : String(t)
        },
        h = function(t) {
            o(o.S, "Reflect", t)
        };
    t.exports = {
        store: a,
        map: s,
        has: u,
        get: l,
        set: c,
        keys: p,
        key: f,
        exp: h
    }
}, function(t, n, e) {
    "use strict";
    if (e(24)) {
        var r = e(76),
            o = e(8),
            i = e(14),
            a = e(0),
            s = e(151),
            u = e(224),
            l = e(46),
            c = e(74),
            p = e(80),
            f = e(39),
            h = e(81),
            d = e(53),
            g = e(26),
            v = e(293),
            y = e(83),
            m = e(54),
            _ = e(38),
            b = e(103),
            w = e(16),
            x = e(27),
            T = e(210),
            S = e(77),
            M = e(43),
            k = e(78).f,
            C = e(227),
            A = e(84),
            P = e(18),
            E = e(49),
            N = e(138),
            O = e(150),
            $ = e(228),
            L = e(93),
            I = e(144),
            R = e(82),
            D = e(202),
            F = e(266),
            j = e(25),
            U = e(42),
            z = j.f,
            H = U.f,
            B = o.RangeError,
            W = o.TypeError,
            G = o.Uint8Array,
            q = Array.prototype,
            Y = u.ArrayBuffer,
            V = u.DataView,
            K = E(0),
            Z = E(2),
            X = E(3),
            J = E(4),
            Q = E(5),
            tt = E(6),
            nt = N(!0),
            et = N(!1),
            rt = $.values,
            ot = $.keys,
            it = $.entries,
            at = q.lastIndexOf,
            st = q.reduce,
            ut = q.reduceRight,
            lt = q.join,
            ct = q.sort,
            pt = q.slice,
            ft = q.toString,
            ht = q.toLocaleString,
            dt = P("iterator"),
            gt = P("toStringTag"),
            vt = A("typed_constructor"),
            yt = A("def_constructor"),
            mt = s.CONSTR,
            _t = s.TYPED,
            bt = s.VIEW,
            wt = E(1, function(t, n) {
                return kt(O(t, t[yt]), n)
            }),
            xt = i(function() {
                return 1 === new G(new Uint16Array([1]).buffer)[0]
            }),
            Tt = !!G && !!G.prototype.set && i(function() {
                new G(1).set({})
            }),
            St = function(t, n) {
                var e = d(t);
                if (e < 0 || e % n) throw B("Wrong offset!");
                return e
            },
            Mt = function(t) {
                if (w(t) && _t in t) return t;
                throw W(t + " is not a typed array!")
            },
            kt = function(t, n) {
                if (!(w(t) && vt in t)) throw W("It is not a typed array constructor!");
                return new t(n)
            },
            Ct = function(t, n) {
                return At(O(t, t[yt]), n)
            },
            At = function(t, n) {
                for (var e = 0, r = n.length, o = kt(t, r); r > e;) o[e] = n[e++];
                return o
            },
            Pt = function(t, n, e) {
                z(t, n, {
                    get: function() {
                        return this._d[e]
                    }
                })
            },
            Et = function(t) {
                var n, e, r, o, i, a, s = x(t),
                    u = arguments.length,
                    c = u > 1 ? arguments[1] : void 0,
                    p = void 0 !== c,
                    f = C(s);
                if (void 0 != f && !T(f)) {
                    for (a = f.call(s), r = [], n = 0; !(i = a.next()).done; n++) r.push(i.value);
                    s = r
                }
                for (p && u > 2 && (c = l(c, arguments[2], 2)), n = 0, e = g(s.length), o = kt(this, e); e > n; n++) o[n] = p ? c(s[n], n) : s[n];
                return o
            },
            Nt = function() {
                for (var t = 0, n = arguments.length, e = kt(this, n); n > t;) e[t] = arguments[t++];
                return e
            },
            Ot = !!G && i(function() {
                ht.call(new G(1))
            }),
            $t = function() {
                return ht.apply(Ot ? pt.call(Mt(this)) : Mt(this), arguments)
            },
            Lt = {
                copyWithin: function(t, n) {
                    return F.call(Mt(this), t, n, arguments.length > 2 ? arguments[2] : void 0)
                },
                every: function(t) {
                    return J(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0)
                },
                fill: function(t) {
                    return D.apply(Mt(this), arguments)
                },
                filter: function(t) {
                    return Ct(this, Z(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0))
                },
                find: function(t) {
                    return Q(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0)
                },
                findIndex: function(t) {
                    return tt(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0)
                },
                forEach: function(t) {
                    K(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0)
                },
                indexOf: function(t) {
                    return et(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0)
                },
                includes: function(t) {
                    return nt(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0)
                },
                join: function(t) {
                    return lt.apply(Mt(this), arguments)
                },
                lastIndexOf: function(t) {
                    return at.apply(Mt(this), arguments)
                },
                map: function(t) {
                    return wt(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0)
                },
                reduce: function(t) {
                    return st.apply(Mt(this), arguments)
                },
                reduceRight: function(t) {
                    return ut.apply(Mt(this), arguments)
                },
                reverse: function() {
                    for (var t, n = this, e = Mt(n).length, r = Math.floor(e / 2), o = 0; o < r;) t = n[o], n[o++] = n[--e], n[e] = t;
                    return n
                },
                some: function(t) {
                    return X(Mt(this), t, arguments.length > 1 ? arguments[1] : void 0)
                },
                sort: function(t) {
                    return ct.call(Mt(this), t)
                },
                subarray: function(t, n) {
                    var e = Mt(this),
                        r = e.length,
                        o = y(t, r);
                    return new(O(e, e[yt]))(e.buffer, e.byteOffset + o * e.BYTES_PER_ELEMENT, g((void 0 === n ? r : y(n, r)) - o))
                }
            },
            It = function(t, n) {
                return Ct(this, pt.call(Mt(this), t, n))
            },
            Rt = function(t) {
                Mt(this);
                var n = St(arguments[1], 1),
                    e = this.length,
                    r = x(t),
                    o = g(r.length),
                    i = 0;
                if (o + n > e) throw B("Wrong length!");
                for (; i < o;) this[n + i] = r[i++]
            },
            Dt = {
                entries: function() {
                    return it.call(Mt(this))
                },
                keys: function() {
                    return ot.call(Mt(this))
                },
                values: function() {
                    return rt.call(Mt(this))
                }
            },
            Ft = function(t, n) {
                return w(t) && t[_t] && "symbol" != typeof n && n in t && String(+n) == String(n)
            },
            jt = function(t, n) {
                return Ft(t, n = m(n, !0)) ? p(2, t[n]) : H(t, n)
            },
            Ut = function(t, n, e) {
                return !(Ft(t, n = m(n, !0)) && w(e) && _(e, "value")) || _(e, "get") || _(e, "set") || e.configurable || _(e, "writable") && !e.writable || _(e, "enumerable") && !e.enumerable ? z(t, n, e) : (t[n] = e.value, t)
            };
        mt || (U.f = jt, j.f = Ut), a(a.S + a.F * !mt, "Object", {
            getOwnPropertyDescriptor: jt,
            defineProperty: Ut
        }), i(function() {
            ft.call({})
        }) && (ft = ht = function() {
            return lt.call(this)
        });
        var zt = h({}, Lt);
        h(zt, Dt), f(zt, dt, Dt.values), h(zt, {
            slice: It,
            set: Rt,
            constructor: function() {},
            toString: ft,
            toLocaleString: $t
        }), Pt(zt, "buffer", "b"), Pt(zt, "byteOffset", "o"), Pt(zt, "byteLength", "l"), Pt(zt, "length", "e"), z(zt, gt, {
            get: function() {
                return this[_t]
            }
        }), t.exports = function(t, n, e, u) {
            u = !!u;
            var l = t + (u ? "Clamped" : "") + "Array",
                p = "get" + t,
                h = "set" + t,
                d = o[l],
                y = d || {},
                m = d && M(d),
                _ = !d || !s.ABV,
                x = {},
                T = d && d.prototype,
                C = function(t, e) {
                    var r = t._d;
                    return r.v[p](e * n + r.o, xt)
                },
                A = function(t, e, r) {
                    var o = t._d;
                    u && (r = (r = Math.round(r)) < 0 ? 0 : r > 255 ? 255 : 255 & r), o.v[h](e * n + o.o, r, xt)
                },
                P = function(t, n) {
                    z(t, n, {
                        get: function() {
                            return C(this, n)
                        },
                        set: function(t) {
                            return A(this, n, t)
                        },
                        enumerable: !0
                    })
                };
            _ ? (d = e(function(t, e, r, o) {
                c(t, d, l, "_d");
                var i, a, s, u, p = 0,
                    h = 0;
                if (w(e)) {
                    if (!(e instanceof Y || "ArrayBuffer" == (u = b(e)) || "SharedArrayBuffer" == u)) return _t in e ? At(d, e) : Et.call(d, e);
                    i = e, h = St(r, n);
                    var y = e.byteLength;
                    if (void 0 === o) {
                        if (y % n) throw B("Wrong length!");
                        if ((a = y - h) < 0) throw B("Wrong length!")
                    } else if ((a = g(o) * n) + h > y) throw B("Wrong length!");
                    s = a / n
                } else s = v(e), a = s * n, i = new Y(a);
                for (f(t, "_d", {
                        b: i,
                        o: h,
                        l: a,
                        e: s,
                        v: new V(i)
                    }); p < s;) P(t, p++)
            }), T = d.prototype = S(zt), f(T, "constructor", d)) : i(function() {
                d(1)
            }) && i(function() {
                new d(-1)
            }) && I(function(t) {
                new d, new d(null), new d(1.5), new d(t)
            }, !0) || (d = e(function(t, e, r, o) {
                c(t, d, l);
                var i;
                return w(e) ? e instanceof Y || "ArrayBuffer" == (i = b(e)) || "SharedArrayBuffer" == i ? void 0 !== o ? new y(e, St(r, n), o) : void 0 !== r ? new y(e, St(r, n)) : new y(e) : _t in e ? At(d, e) : Et.call(d, e) : new y(v(e))
            }), K(m !== Function.prototype ? k(y).concat(k(m)) : k(y), function(t) {
                t in d || f(d, t, y[t])
            }), d.prototype = T, r || (T.constructor = d));
            var E = T[dt],
                N = !!E && ("values" == E.name || void 0 == E.name),
                O = Dt.values;
            f(d, vt, !0), f(T, _t, l), f(T, bt, !0), f(T, yt, d), (u ? new d(1)[gt] == l : gt in T) || z(T, gt, {
                get: function() {
                    return l
                }
            }), x[l] = d, a(a.G + a.W + a.F * (d != y), x), a(a.S, l, {
                BYTES_PER_ELEMENT: n
            }), a(a.S + a.F * i(function() {
                y.of.call(d, 1)
            }), l, {
                from: Et,
                of: Nt
            }), "BYTES_PER_ELEMENT" in T || f(T, "BYTES_PER_ELEMENT", n), a(a.P, l, Lt), R(l), a(a.P + a.F * Tt, l, {
                set: Rt
            }), a(a.P + a.F * !N, l, Dt), r || T.toString == ft || (T.toString = ft), a(a.P + a.F * i(function() {
                new d(1).slice()
            }), l, {
                slice: It
            }), a(a.P + a.F * (i(function() {
                return [1, 2].toLocaleString() != new d([1, 2]).toLocaleString()
            }) || !i(function() {
                T.toLocaleString.call([1, 2])
            })), l, {
                toLocaleString: $t
            }), L[l] = N ? E : O, r || N || f(T, dt, O)
        }
    } else t.exports = function() {}
}, , , , , function(t, n, e) {
    var r = e(18)("unscopables"),
        o = Array.prototype;
    void 0 == o[r] && e(39)(o, r, {}), t.exports = function(t) {
        o[r][t] = !0
    }
}, function(t, n, e) {
    var r = e(84)("meta"),
        o = e(16),
        i = e(38),
        a = e(25).f,
        s = 0,
        u = Object.isExtensible || function() {
            return !0
        },
        l = !e(14)(function() {
            return u(Object.preventExtensions({}))
        }),
        c = function(t) {
            a(t, r, {
                value: {
                    i: "O" + ++s,
                    w: {}
                }
            })
        },
        p = function(t, n) {
            if (!o(t)) return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;
            if (!i(t, r)) {
                if (!u(t)) return "F";
                if (!n) return "E";
                c(t)
            }
            return t[r].i
        },
        f = function(t, n) {
            if (!i(t, r)) {
                if (!u(t)) return !0;
                if (!n) return !1;
                c(t)
            }
            return t[r].w
        },
        h = function(t) {
            return l && d.NEED && u(t) && !i(t, r) && c(t), t
        },
        d = t.exports = {
            KEY: r,
            NEED: !1,
            fastKey: p,
            getWeak: f,
            onFreeze: h
        }
}, , , , function(t, n) {
    t.exports = function(t, n, e, r) {
        if (!(t instanceof n) || void 0 !== r && r in t) throw TypeError(e + ": incorrect invocation!");
        return t
    }
}, function(t, n, e) {
    var r = e(46),
        o = e(277),
        i = e(210),
        a = e(7),
        s = e(26),
        u = e(227),
        l = {},
        c = {},
        n = t.exports = function(t, n, e, p, f) {
            var h, d, g, v, y = f ? function() {
                    return t
                } : u(t),
                m = r(e, p, n ? 2 : 1),
                _ = 0;
            if ("function" != typeof y) throw TypeError(t + " is not iterable!");
            if (i(y)) {
                for (h = s(t.length); h > _; _++)
                    if ((v = n ? m(a(d = t[_])[0], d[1]) : m(t[_])) === l || v === c) return v
            } else
                for (g = y.call(t); !(d = g.next()).done;)
                    if ((v = o(g, m, d.value, n)) === l || v === c) return v
        };
    n.BREAK = l, n.RETURN = c
}, function(t, n) {
    t.exports = !1
}, function(t, n, e) {
    var r = e(7),
        o = e(283),
        i = e(206),
        a = e(218)("IE_PROTO"),
        s = function() {},
        u = function() {
            var t, n = e(205)("iframe"),
                r = i.length;
            for (n.style.display = "none", e(208).appendChild(n), n.src = "javascript:", t = n.contentWindow.document, t.open(), t.write("<script>document.F=Object<\/script>"), t.close(), u = t.F; r--;) delete u.prototype[i[r]];
            return u()
        };
    t.exports = Object.create || function(t, n) {
        var e;
        return null !== t ? (s.prototype = r(t), e = new s, s.prototype = null, e[a] = t) : e = u(), void 0 === n ? e : o(e, n)
    }
}, function(t, n, e) {
    var r = e(285),
        o = e(206).concat("length", "prototype");
    n.f = Object.getOwnPropertyNames || function(t) {
        return r(t, o)
    }
}, function(t, n, e) {
    var r = e(285),
        o = e(206);
    t.exports = Object.keys || function(t) {
        return r(t, o)
    }
}, function(t, n) {
    t.exports = function(t, n) {
        return {
            enumerable: !(1 & t),
            configurable: !(2 & t),
            writable: !(4 & t),
            value: n
        }
    }
}, function(t, n, e) {
    var r = e(40);
    t.exports = function(t, n, e) {
        for (var o in n) r(t, o, n[o], e);
        return t
    }
}, function(t, n, e) {
    "use strict";
    var r = e(8),
        o = e(25),
        i = e(24),
        a = e(18)("species");
    t.exports = function(t) {
        var n = r[t];
        i && n && !n[a] && o.f(n, a, {
            configurable: !0,
            get: function() {
                return this
            }
        })
    }
}, function(t, n, e) {
    var r = e(53),
        o = Math.max,
        i = Math.min;
    t.exports = function(t, n) {
        return t = r(t), t < 0 ? o(t + n, 0) : i(t, n)
    }
}, function(t, n) {
    var e = 0,
        r = Math.random();
    t.exports = function(t) {
        return "Symbol(".concat(void 0 === t ? "" : t, ")_", (++e + r).toString(36))
    }
}, , , , , , , , , function(t, n) {
    t.exports = {}
}, function(t, n, e) {
    var r = e(25).f,
        o = e(38),
        i = e(18)("toStringTag");
    t.exports = function(t, n, e) {
        t && !o(t = e ? t : t.prototype, i) && r(t, i, {
            configurable: !0,
            value: n
        })
    }
}, function(t, n, e) {
    var r = e(0),
        o = e(51),
        i = e(14),
        a = e(222),
        s = "[" + a + "]",
        u = "​",
        l = RegExp("^" + s + s + "*"),
        c = RegExp(s + s + "*$"),
        p = function(t, n, e) {
            var o = {},
                s = i(function() {
                    return !!a[t]() || u[t]() != u
                }),
                l = o[t] = s ? n(f) : a[t];
            e && (o[e] = l), r(r.P + r.F * s, "String", o)
        },
        f = p.trim = function(t, n) {
            return t = String(o(t)), 1 & n && (t = t.replace(l, "")), 2 & n && (t = t.replace(c, "")), t
        };
    t.exports = p
}, function(t, n, e) {
    var r = e(16);
    t.exports = function(t, n) {
        if (!r(t) || t._t !== n) throw TypeError("Incompatible receiver, " + n + " required!");
        return t
    }
}, , , , , , , function(t, n, e) {
    var r = e(45),
        o = e(18)("toStringTag"),
        i = "Arguments" == r(function() {
            return arguments
        }()),
        a = function(t, n) {
            try {
                return t[n]
            } catch (t) {}
        };
    t.exports = function(t) {
        var n, e, s;
        return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof(e = a(n = Object(t), o)) ? e : i ? r(n) : "Object" == (s = r(n)) && "function" == typeof n.callee ? "Arguments" : s
    }
}, function(t, n, e) {
    var r = e(45);
    t.exports = Object("z").propertyIsEnumerable(0) ? Object : function(t) {
        return "String" == r(t) ? t.split("") : Object(t)
    }
}, function(t, n) {
    n.f = {}.propertyIsEnumerable
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    var r = e(44),
        o = e(26),
        i = e(83);
    t.exports = function(t) {
        return function(n, e, a) {
            var s, u = r(n),
                l = o(u.length),
                c = i(a, l);
            if (t && e != e) {
                for (; l > c;)
                    if ((s = u[c++]) != s) return !0
            } else
                for (; l > c; c++)
                    if ((t || c in u) && u[c] === e) return t || c || 0;
            return !t && -1
        }
    }
}, function(t, n, e) {
    "use strict";
    var r = e(8),
        o = e(0),
        i = e(40),
        a = e(81),
        s = e(70),
        u = e(75),
        l = e(74),
        c = e(16),
        p = e(14),
        f = e(144),
        h = e(94),
        d = e(209);
    t.exports = function(t, n, e, g, v, y) {
        var m = r[t],
            _ = m,
            b = v ? "set" : "add",
            w = _ && _.prototype,
            x = {},
            T = function(t) {
                var n = w[t];
                i(w, t, "delete" == t ? function(t) {
                    return !(y && !c(t)) && n.call(this, 0 === t ? 0 : t)
                } : "has" == t ? function(t) {
                    return !(y && !c(t)) && n.call(this, 0 === t ? 0 : t)
                } : "get" == t ? function(t) {
                    return y && !c(t) ? void 0 : n.call(this, 0 === t ? 0 : t)
                } : "add" == t ? function(t) {
                    return n.call(this, 0 === t ? 0 : t), this
                } : function(t, e) {
                    return n.call(this, 0 === t ? 0 : t, e), this
                })
            };
        if ("function" == typeof _ && (y || w.forEach && !p(function() {
                (new _).entries().next()
            }))) {
            var S = new _,
                M = S[b](y ? {} : -0, 1) != S,
                k = p(function() {
                    S.has(1)
                }),
                C = f(function(t) {
                    new _(t)
                }),
                A = !y && p(function() {
                    for (var t = new _, n = 5; n--;) t[b](n, n);
                    return !t.has(-0)
                });
            C || (_ = n(function(n, e) {
                l(n, _, t);
                var r = d(new m, n, _);
                return void 0 != e && u(e, v, r[b], r), r
            }), _.prototype = w, w.constructor = _), (k || A) && (T("delete"), T("has"), v && T("get")), (A || M) && T(b), y && w.clear && delete w.clear
        } else _ = g.getConstructor(n, t, v, b), a(_.prototype, e), s.NEED = !0;
        return h(_, t), x[t] = _, o(o.G + o.W + o.F * (_ != m), x), y || g.setStrong(_, t, v), _
    }
}, function(t, n, e) {
    "use strict";
    var r = e(39),
        o = e(40),
        i = e(14),
        a = e(51),
        s = e(18);
    t.exports = function(t, n, e) {
        var u = s(t),
            l = e(a, u, "" [t]),
            c = l[0],
            p = l[1];
        i(function() {
            var n = {};
            return n[u] = function() {
                return 7
            }, 7 != "" [t](n)
        }) && (o(String.prototype, t, c), r(RegExp.prototype, u, 2 == n ? function(t, n) {
            return p.call(t, this, n)
        } : function(t) {
            return p.call(t, this)
        }))
    }
}, function(t, n, e) {
    "use strict";
    var r = e(7);
    t.exports = function() {
        var t = r(this),
            n = "";
        return t.global && (n += "g"), t.ignoreCase && (n += "i"), t.multiline && (n += "m"), t.unicode && (n += "u"), t.sticky && (n += "y"), n
    }
}, function(t, n, e) {
    var r = e(45);
    t.exports = Array.isArray || function(t) {
        return "Array" == r(t)
    }
}, function(t, n, e) {
    var r = e(16),
        o = e(45),
        i = e(18)("match");
    t.exports = function(t) {
        var n;
        return r(t) && (void 0 !== (n = t[i]) ? !!n : "RegExp" == o(t))
    }
}, function(t, n, e) {
    var r = e(18)("iterator"),
        o = !1;
    try {
        var i = [7][r]();
        i.return = function() {
            o = !0
        }, Array.from(i, function() {
            throw 2
        })
    } catch (t) {}
    t.exports = function(t, n) {
        if (!n && !o) return !1;
        var e = !1;
        try {
            var i = [7],
                a = i[r]();
            a.next = function() {
                return {
                    done: e = !0
                }
            }, i[r] = function() {
                return a
            }, t(i)
        } catch (t) {}
        return e
    }
}, function(t, n, e) {
    "use strict";
    t.exports = e(76) || !e(14)(function() {
        var t = Math.random();
        __defineSetter__.call(null, t, function() {}), delete e(8)[t]
    })
}, function(t, n) {
    n.f = Object.getOwnPropertySymbols
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(33),
        i = e(46),
        a = e(75);
    t.exports = function(t) {
        r(r.S, t, {
            from: function(t) {
                var n, e, r, s, u = arguments[1];
                return o(this), n = void 0 !== u, n && o(u), void 0 == t ? new this : (e = [], n ? (r = 0, s = i(u, arguments[2], 2), a(t, !1, function(t) {
                    e.push(s(t, r++))
                })) : a(t, !1, e.push, e), new this(e))
            }
        })
    }
}, function(t, n, e) {
    "use strict";
    var r = e(0);
    t.exports = function(t) {
        r(r.S, t, { of: function() {
                for (var t = arguments.length, n = new Array(t); t--;) n[t] = arguments[t];
                return new this(n)
            }
        })
    }
}, function(t, n, e) {
    var r = e(8),
        o = r["__core-js_shared__"] || (r["__core-js_shared__"] = {});
    t.exports = function(t) {
        return o[t] || (o[t] = {})
    }
}, function(t, n, e) {
    var r = e(7),
        o = e(33),
        i = e(18)("species");
    t.exports = function(t, n) {
        var e, a = r(t).constructor;
        return void 0 === a || void 0 == (e = r(a)[i]) ? n : o(e)
    }
}, function(t, n, e) {
    for (var r, o = e(8), i = e(39), a = e(84), s = a("typed_array"), u = a("view"), l = !(!o.ArrayBuffer || !o.DataView), c = l, p = 0, f = "Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(","); p < 9;)(r = o[f[p++]]) ? (i(r.prototype, s, !0), i(r.prototype, u, !0)) : c = !1;
    t.exports = {
        ABV: l,
        CONSTR: c,
        TYPED: s,
        VIEW: u
    }
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    "use strict";
    var r = e(27),
        o = e(83),
        i = e(26);
    t.exports = function(t) {
        for (var n = r(this), e = i(n.length), a = arguments.length, s = o(a > 1 ? arguments[1] : void 0, e), u = a > 2 ? arguments[2] : void 0, l = void 0 === u ? e : o(u, e); l > s;) n[s++] = t;
        return n
    }
}, function(t, n, e) {
    var r = e(486);
    t.exports = function(t, n) {
        return new(r(t))(n)
    }
}, function(t, n, e) {
    "use strict";
    var r = e(25),
        o = e(80);
    t.exports = function(t, n, e) {
        n in t ? r.f(t, n, o(0, e)) : t[n] = e
    }
}, function(t, n, e) {
    var r = e(16),
        o = e(8).document,
        i = r(o) && r(o.createElement);
    t.exports = function(t) {
        return i ? o.createElement(t) : {}
    }
}, function(t, n) {
    t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
}, function(t, n, e) {
    var r = e(18)("match");
    t.exports = function(t) {
        var n = /./;
        try {
            "/./" [t](n)
        } catch (e) {
            try {
                return n[r] = !1, !"/./" [t](n)
            } catch (t) {}
        }
        return !0
    }
}, function(t, n, e) {
    var r = e(8).document;
    t.exports = r && r.documentElement
}, function(t, n, e) {
    var r = e(16),
        o = e(217).set;
    t.exports = function(t, n, e) {
        var i, a = n.constructor;
        return a !== e && "function" == typeof a && (i = a.prototype) !== e.prototype && r(i) && o && o(t, i), t
    }
}, function(t, n, e) {
    var r = e(93),
        o = e(18)("iterator"),
        i = Array.prototype;
    t.exports = function(t) {
        return void 0 !== t && (r.Array === t || i[o] === t)
    }
}, function(t, n, e) {
    "use strict";
    var r = e(77),
        o = e(80),
        i = e(94),
        a = {};
    e(39)(a, e(18)("iterator"), function() {
        return this
    }), t.exports = function(t, n, e) {
        t.prototype = r(a, {
            next: o(1, e)
        }), i(t, n + " Iterator")
    }
}, function(t, n, e) {
    "use strict";
    var r = e(76),
        o = e(0),
        i = e(40),
        a = e(39),
        s = e(38),
        u = e(93),
        l = e(211),
        c = e(94),
        p = e(43),
        f = e(18)("iterator"),
        h = !([].keys && "next" in [].keys()),
        d = function() {
            return this
        };
    t.exports = function(t, n, e, g, v, y, m) {
        l(e, n, g);
        var _, b, w, x = function(t) {
                if (!h && t in k) return k[t];
                switch (t) {
                    case "keys":
                    case "values":
                        return function() {
                            return new e(this, t)
                        }
                }
                return function() {
                    return new e(this, t)
                }
            },
            T = n + " Iterator",
            S = "values" == v,
            M = !1,
            k = t.prototype,
            C = k[f] || k["@@iterator"] || v && k[v],
            A = !h && C || x(v),
            P = v ? S ? x("entries") : A : void 0,
            E = "Array" == n ? k.entries || C : C;
        if (E && (w = p(E.call(new t))) !== Object.prototype && w.next && (c(w, T, !0), r || s(w, f) || a(w, f, d)), S && C && "values" !== C.name && (M = !0, A = function() {
                return C.call(this)
            }), r && !m || !h && !M && k[f] || a(k, f, A), u[n] = A, u[T] = d, v)
            if (_ = {
                    values: S ? A : x("values"),
                    keys: y ? A : x("keys"),
                    entries: P
                }, m)
                for (b in _) b in k || i(k, b, _[b]);
            else o(o.P + o.F * (h || M), n, _);
        return _
    }
}, function(t, n) {
    var e = Math.expm1;
    t.exports = !e || e(10) > 22025.465794806718 || e(10) < 22025.465794806718 || -2e-17 != e(-2e-17) ? function(t) {
        return 0 == (t = +t) ? t : t > -1e-6 && t < 1e-6 ? t + t * t / 2 : Math.exp(t) - 1
    } : e
}, function(t, n) {
    t.exports = Math.sign || function(t) {
        return 0 == (t = +t) || t != t ? t : t < 0 ? -1 : 1
    }
}, function(t, n, e) {
    var r = e(8),
        o = e(223).set,
        i = r.MutationObserver || r.WebKitMutationObserver,
        a = r.process,
        s = r.Promise,
        u = "process" == e(45)(a);
    t.exports = function() {
        var t, n, e, l = function() {
            var r, o;
            for (u && (r = a.domain) && r.exit(); t;) {
                o = t.fn, t = t.next;
                try {
                    o()
                } catch (r) {
                    throw t ? e() : n = void 0, r
                }
            }
            n = void 0, r && r.enter()
        };
        if (u) e = function() {
            a.nextTick(l)
        };
        else if (!i || r.navigator && r.navigator.standalone)
            if (s && s.resolve) {
                var c = s.resolve();
                e = function() {
                    c.then(l)
                }
            } else e = function() {
                o.call(r, l)
            };
        else {
            var p = !0,
                f = document.createTextNode("");
            new i(l).observe(f, {
                characterData: !0
            }), e = function() {
                f.data = p = !p
            }
        }
        return function(r) {
            var o = {
                fn: r,
                next: void 0
            };
            n && (n.next = o), t || (t = o, e()), n = o
        }
    }
}, function(t, n, e) {
    "use strict";

    function r(t) {
        var n, e;
        this.promise = new t(function(t, r) {
            if (void 0 !== n || void 0 !== e) throw TypeError("Bad Promise constructor");
            n = t, e = r
        }), this.resolve = o(n), this.reject = o(e)
    }
    var o = e(33);
    t.exports.f = function(t) {
        return new r(t)
    }
}, function(t, n, e) {
    var r = e(16),
        o = e(7),
        i = function(t, n) {
            if (o(t), !r(n) && null !== n) throw TypeError(n + ": can't set as prototype!")
        };
    t.exports = {
        set: Object.setPrototypeOf || ("__proto__" in {} ? function(t, n, r) {
            try {
                r = e(46)(Function.call, e(42).f(Object.prototype, "__proto__").set, 2), r(t, []), n = !(t instanceof Array)
            } catch (t) {
                n = !0
            }
            return function(t, e) {
                return i(t, e), n ? t.__proto__ = e : r(t, e), t
            }
        }({}, !1) : void 0),
        check: i
    }
}, function(t, n, e) {
    var r = e(149)("keys"),
        o = e(84);
    t.exports = function(t) {
        return r[t] || (r[t] = o(t))
    }
}, function(t, n, e) {
    var r = e(53),
        o = e(51);
    t.exports = function(t) {
        return function(n, e) {
            var i, a, s = String(o(n)),
                u = r(e),
                l = s.length;
            return u < 0 || u >= l ? t ? "" : void 0 : (i = s.charCodeAt(u), i < 55296 || i > 56319 || u + 1 === l || (a = s.charCodeAt(u + 1)) < 56320 || a > 57343 ? t ? s.charAt(u) : i : t ? s.slice(u, u + 2) : a - 56320 + (i - 55296 << 10) + 65536)
        }
    }
}, function(t, n, e) {
    var r = e(143),
        o = e(51);
    t.exports = function(t, n, e) {
        if (r(n)) throw TypeError("String#" + e + " doesn't accept regex!");
        return String(o(t))
    }
}, function(t, n, e) {
    "use strict";
    var r = e(53),
        o = e(51);
    t.exports = function(t) {
        var n = String(o(this)),
            e = "",
            i = r(t);
        if (i < 0 || i == 1 / 0) throw RangeError("Count can't be negative");
        for (; i > 0;
            (i >>>= 1) && (n += n)) 1 & i && (e += n);
        return e
    }
}, function(t, n) {
    t.exports = "\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"
}, function(t, n, e) {
    var r, o, i, a = e(46),
        s = e(275),
        u = e(208),
        l = e(205),
        c = e(8),
        p = c.process,
        f = c.setImmediate,
        h = c.clearImmediate,
        d = c.MessageChannel,
        g = c.Dispatch,
        v = 0,
        y = {},
        m = function() {
            var t = +this;
            if (y.hasOwnProperty(t)) {
                var n = y[t];
                delete y[t], n()
            }
        },
        _ = function(t) {
            m.call(t.data)
        };
    f && h || (f = function(t) {
        for (var n = [], e = 1; arguments.length > e;) n.push(arguments[e++]);
        return y[++v] = function() {
            s("function" == typeof t ? t : Function(t), n)
        }, r(v), v
    }, h = function(t) {
        delete y[t]
    }, "process" == e(45)(p) ? r = function(t) {
        p.nextTick(a(m, t, 1))
    } : g && g.now ? r = function(t) {
        g.now(a(m, t, 1))
    } : d ? (o = new d, i = o.port2, o.port1.onmessage = _, r = a(i.postMessage, i, 1)) : c.addEventListener && "function" == typeof postMessage && !c.importScripts ? (r = function(t) {
        c.postMessage(t + "", "*")
    }, c.addEventListener("message", _, !1)) : r = "onreadystatechange" in l("script") ? function(t) {
        u.appendChild(l("script")).onreadystatechange = function() {
            u.removeChild(this), m.call(t)
        }
    } : function(t) {
        setTimeout(a(m, t, 1), 0)
    }), t.exports = {
        set: f,
        clear: h
    }
}, function(t, n, e) {
    "use strict";

    function r(t, n, e) {
        var r, o, i, a = new Array(e),
            s = 8 * e - n - 1,
            u = (1 << s) - 1,
            l = u >> 1,
            c = 23 === n ? F(2, -24) - F(2, -77) : 0,
            p = 0,
            f = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
        for (t = D(t), t != t || t === I ? (o = t != t ? 1 : 0, r = u) : (r = j(U(t) / z), t * (i = F(2, -r)) < 1 && (r--, i *= 2), t += r + l >= 1 ? c / i : c * F(2, 1 - l), t * i >= 2 && (r++, i /= 2), r + l >= u ? (o = 0, r = u) : r + l >= 1 ? (o = (t * i - 1) * F(2, n), r += l) : (o = t * F(2, l - 1) * F(2, n), r = 0)); n >= 8; a[p++] = 255 & o, o /= 256, n -= 8);
        for (r = r << n | o, s += n; s > 0; a[p++] = 255 & r, r /= 256, s -= 8);
        return a[--p] |= 128 * f, a
    }

    function o(t, n, e) {
        var r, o = 8 * e - n - 1,
            i = (1 << o) - 1,
            a = i >> 1,
            s = o - 7,
            u = e - 1,
            l = t[u--],
            c = 127 & l;
        for (l >>= 7; s > 0; c = 256 * c + t[u], u--, s -= 8);
        for (r = c & (1 << -s) - 1, c >>= -s, s += n; s > 0; r = 256 * r + t[u], u--, s -= 8);
        if (0 === c) c = 1 - a;
        else {
            if (c === i) return r ? NaN : l ? -I : I;
            r += F(2, n), c -= a
        }
        return (l ? -1 : 1) * r * F(2, c - n)
    }

    function i(t) {
        return t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0]
    }

    function a(t) {
        return [255 & t]
    }

    function s(t) {
        return [255 & t, t >> 8 & 255]
    }

    function u(t) {
        return [255 & t, t >> 8 & 255, t >> 16 & 255, t >> 24 & 255]
    }

    function l(t) {
        return r(t, 52, 8)
    }

    function c(t) {
        return r(t, 23, 4)
    }

    function p(t, n, e) {
        k(t[P], n, {
            get: function() {
                return this[e]
            }
        })
    }

    function f(t, n, e, r) {
        var o = +e,
            i = S(o);
        if (i + n > t[B]) throw L(E);
        var a = t[H]._b,
            s = i + t[W],
            u = a.slice(s, s + n);
        return r ? u : u.reverse()
    }

    function h(t, n, e, r, o, i) {
        var a = +e,
            s = S(a);
        if (s + n > t[B]) throw L(E);
        for (var u = t[H]._b, l = s + t[W], c = r(+o), p = 0; p < n; p++) u[l + p] = c[i ? p : n - p - 1]
    }
    var d = e(8),
        g = e(24),
        v = e(76),
        y = e(151),
        m = e(39),
        _ = e(81),
        b = e(14),
        w = e(74),
        x = e(53),
        T = e(26),
        S = e(293),
        M = e(78).f,
        k = e(25).f,
        C = e(202),
        A = e(94),
        P = "prototype",
        E = "Wrong index!",
        N = d.ArrayBuffer,
        O = d.DataView,
        $ = d.Math,
        L = d.RangeError,
        I = d.Infinity,
        R = N,
        D = $.abs,
        F = $.pow,
        j = $.floor,
        U = $.log,
        z = $.LN2,
        H = g ? "_b" : "buffer",
        B = g ? "_l" : "byteLength",
        W = g ? "_o" : "byteOffset";
    if (y.ABV) {
        if (!b(function() {
                N(1)
            }) || !b(function() {
                new N(-1)
            }) || b(function() {
                return new N, new N(1.5), new N(NaN), "ArrayBuffer" != N.name
            })) {
            N = function(t) {
                return w(this, N), new R(S(t))
            };
            for (var G, q = N[P] = R[P], Y = M(R), V = 0; Y.length > V;)(G = Y[V++]) in N || m(N, G, R[G]);
            v || (q.constructor = N)
        }
        var K = new O(new N(2)),
            Z = O[P].setInt8;
        K.setInt8(0, 2147483648), K.setInt8(1, 2147483649), !K.getInt8(0) && K.getInt8(1) || _(O[P], {
            setInt8: function(t, n) {
                Z.call(this, t, n << 24 >> 24)
            },
            setUint8: function(t, n) {
                Z.call(this, t, n << 24 >> 24)
            }
        }, !0)
    } else N = function(t) {
        w(this, N, "ArrayBuffer");
        var n = S(t);
        this._b = C.call(new Array(n), 0), this[B] = n
    }, O = function(t, n, e) {
        w(this, O, "DataView"), w(t, N, "DataView");
        var r = t[B],
            o = x(n);
        if (o < 0 || o > r) throw L("Wrong offset!");
        if (e = void 0 === e ? r - o : T(e), o + e > r) throw L("Wrong length!");
        this[H] = t, this[W] = o, this[B] = e
    }, g && (p(N, "byteLength", "_l"), p(O, "buffer", "_b"), p(O, "byteLength", "_l"), p(O, "byteOffset", "_o")), _(O[P], {
        getInt8: function(t) {
            return f(this, 1, t)[0] << 24 >> 24
        },
        getUint8: function(t) {
            return f(this, 1, t)[0]
        },
        getInt16: function(t) {
            var n = f(this, 2, t, arguments[1]);
            return (n[1] << 8 | n[0]) << 16 >> 16
        },
        getUint16: function(t) {
            var n = f(this, 2, t, arguments[1]);
            return n[1] << 8 | n[0]
        },
        getInt32: function(t) {
            return i(f(this, 4, t, arguments[1]))
        },
        getUint32: function(t) {
            return i(f(this, 4, t, arguments[1])) >>> 0
        },
        getFloat32: function(t) {
            return o(f(this, 4, t, arguments[1]), 23, 4)
        },
        getFloat64: function(t) {
            return o(f(this, 8, t, arguments[1]), 52, 8)
        },
        setInt8: function(t, n) {
            h(this, 1, t, a, n)
        },
        setUint8: function(t, n) {
            h(this, 1, t, a, n)
        },
        setInt16: function(t, n) {
            h(this, 2, t, s, n, arguments[2])
        },
        setUint16: function(t, n) {
            h(this, 2, t, s, n, arguments[2])
        },
        setInt32: function(t, n) {
            h(this, 4, t, u, n, arguments[2])
        },
        setUint32: function(t, n) {
            h(this, 4, t, u, n, arguments[2])
        },
        setFloat32: function(t, n) {
            h(this, 4, t, c, n, arguments[2])
        },
        setFloat64: function(t, n) {
            h(this, 8, t, l, n, arguments[2])
        }
    });
    A(N, "ArrayBuffer"), A(O, "DataView"), m(O[P], y.VIEW, !0), n.ArrayBuffer = N, n.DataView = O
}, function(t, n, e) {
    var r = e(8),
        o = r.navigator;
    t.exports = o && o.userAgent || ""
}, function(t, n, e) {
    var r = e(8),
        o = e(50),
        i = e(76),
        a = e(294),
        s = e(25).f;
    t.exports = function(t) {
        var n = o.Symbol || (o.Symbol = i ? {} : r.Symbol || {});
        "_" == t.charAt(0) || t in n || s(n, t, {
            value: a.f(t)
        })
    }
}, function(t, n, e) {
    var r = e(103),
        o = e(18)("iterator"),
        i = e(93);
    t.exports = e(50).getIteratorMethod = function(t) {
        if (void 0 != t) return t[o] || t["@@iterator"] || i[r(t)]
    }
}, function(t, n, e) {
    "use strict";
    var r = e(69),
        o = e(278),
        i = e(93),
        a = e(44);
    t.exports = e(212)(Array, "Array", function(t, n) {
        this._t = a(t), this._i = 0, this._k = n
    }, function() {
        var t = this._t,
            n = this._k,
            e = this._i++;
        return !t || e >= t.length ? (this._t = void 0, o(1)) : "keys" == n ? o(0, e) : "values" == n ? o(0, t[e]) : o(0, [e, t[e]])
    }, "values"), i.Arguments = i.Array, r("keys"), r("values"), r("entries")
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    var r = e(45);
    t.exports = function(t, n) {
        if ("number" != typeof t && "Number" != r(t)) throw TypeError(n);
        return +t
    }
}, function(t, n, e) {
    "use strict";
    var r = e(27),
        o = e(83),
        i = e(26);
    t.exports = [].copyWithin || function(t, n) {
        var e = r(this),
            a = i(e.length),
            s = o(t, a),
            u = o(n, a),
            l = arguments.length > 2 ? arguments[2] : void 0,
            c = Math.min((void 0 === l ? a : o(l, a)) - u, a - s),
            p = 1;
        for (u < s && s < u + c && (p = -1, u += c - 1, s += c - 1); c-- > 0;) u in e ? e[s] = e[u] : delete e[s], s += p, u += p;
        return e
    }
}, function(t, n, e) {
    var r = e(75);
    t.exports = function(t, n) {
        var e = [];
        return r(t, !1, e.push, e, n), e
    }
}, function(t, n, e) {
    var r = e(33),
        o = e(27),
        i = e(104),
        a = e(26);
    t.exports = function(t, n, e, s, u) {
        r(n);
        var l = o(t),
            c = i(l),
            p = a(l.length),
            f = u ? p - 1 : 0,
            h = u ? -1 : 1;
        if (e < 2)
            for (;;) {
                if (f in c) {
                    s = c[f], f += h;
                    break
                }
                if (f += h, u ? f < 0 : p <= f) throw TypeError("Reduce of empty array with no initial value")
            }
        for (; u ? f >= 0 : p > f; f += h) f in c && (s = n(s, c[f], f, l));
        return s
    }
}, function(t, n, e) {
    "use strict";
    var r = e(33),
        o = e(16),
        i = e(275),
        a = [].slice,
        s = {},
        u = function(t, n, e) {
            if (!(n in s)) {
                for (var r = [], o = 0; o < n; o++) r[o] = "a[" + o + "]";
                s[n] = Function("F,a", "return new F(" + r.join(",") + ")")
            }
            return s[n](t, e)
        };
    t.exports = Function.bind || function(t) {
        var n = r(this),
            e = a.call(arguments, 1),
            s = function() {
                var r = e.concat(a.call(arguments));
                return this instanceof s ? u(n, r.length, r) : i(n, r, t)
            };
        return o(n.prototype) && (s.prototype = n.prototype), s
    }
}, function(t, n, e) {
    "use strict";
    var r = e(25).f,
        o = e(77),
        i = e(81),
        a = e(46),
        s = e(74),
        u = e(75),
        l = e(212),
        c = e(278),
        p = e(82),
        f = e(24),
        h = e(70).fastKey,
        d = e(96),
        g = f ? "_s" : "size",
        v = function(t, n) {
            var e, r = h(n);
            if ("F" !== r) return t._i[r];
            for (e = t._f; e; e = e.n)
                if (e.k == n) return e
        };
    t.exports = {
        getConstructor: function(t, n, e, l) {
            var c = t(function(t, r) {
                s(t, c, n, "_i"), t._t = n, t._i = o(null), t._f = void 0, t._l = void 0, t[g] = 0, void 0 != r && u(r, e, t[l], t)
            });
            return i(c.prototype, {
                clear: function() {
                    for (var t = d(this, n), e = t._i, r = t._f; r; r = r.n) r.r = !0, r.p && (r.p = r.p.n = void 0), delete e[r.i];
                    t._f = t._l = void 0, t[g] = 0
                },
                delete: function(t) {
                    var e = d(this, n),
                        r = v(e, t);
                    if (r) {
                        var o = r.n,
                            i = r.p;
                        delete e._i[r.i], r.r = !0, i && (i.n = o), o && (o.p = i), e._f == r && (e._f = o), e._l == r && (e._l = i), e[g]--
                    }
                    return !!r
                },
                forEach: function(t) {
                    d(this, n);
                    for (var e, r = a(t, arguments.length > 1 ? arguments[1] : void 0, 3); e = e ? e.n : this._f;)
                        for (r(e.v, e.k, this); e && e.r;) e = e.p
                },
                has: function(t) {
                    return !!v(d(this, n), t)
                }
            }), f && r(c.prototype, "size", {
                get: function() {
                    return d(this, n)[g]
                }
            }), c
        },
        def: function(t, n, e) {
            var r, o, i = v(t, n);
            return i ? i.v = e : (t._l = i = {
                i: o = h(n, !0),
                k: n,
                v: e,
                p: r = t._l,
                n: void 0,
                r: !1
            }, t._f || (t._f = i), r && (r.n = i), t[g]++, "F" !== o && (t._i[o] = i)), t
        },
        getEntry: v,
        setStrong: function(t, n, e) {
            l(t, n, function(t, e) {
                this._t = d(t, n), this._k = e, this._l = void 0
            }, function() {
                for (var t = this, n = t._k, e = t._l; e && e.r;) e = e.p;
                return t._t && (t._l = e = e ? e.n : t._t._f) ? "keys" == n ? c(0, e.k) : "values" == n ? c(0, e.v) : c(0, [e.k, e.v]) : (t._t = void 0, c(1))
            }, e ? "entries" : "values", !e, !0), p(n)
        }
    }
}, function(t, n, e) {
    var r = e(103),
        o = e(267);
    t.exports = function(t) {
        return function() {
            if (r(this) != t) throw TypeError(t + "#toJSON isn't generic");
            return o(this)
        }
    }
}, function(t, n, e) {
    "use strict";
    var r = e(81),
        o = e(70).getWeak,
        i = e(7),
        a = e(16),
        s = e(74),
        u = e(75),
        l = e(49),
        c = e(38),
        p = e(96),
        f = l(5),
        h = l(6),
        d = 0,
        g = function(t) {
            return t._l || (t._l = new v)
        },
        v = function() {
            this.a = []
        },
        y = function(t, n) {
            return f(t.a, function(t) {
                return t[0] === n
            })
        };
    v.prototype = {
        get: function(t) {
            var n = y(this, t);
            if (n) return n[1]
        },
        has: function(t) {
            return !!y(this, t)
        },
        set: function(t, n) {
            var e = y(this, t);
            e ? e[1] = n : this.a.push([t, n])
        },
        delete: function(t) {
            var n = h(this.a, function(n) {
                return n[0] === t
            });
            return ~n && this.a.splice(n, 1), !!~n
        }
    }, t.exports = {
        getConstructor: function(t, n, e, i) {
            var l = t(function(t, r) {
                s(t, l, n, "_i"), t._t = n, t._i = d++, t._l = void 0, void 0 != r && u(r, e, t[i], t)
            });
            return r(l.prototype, {
                delete: function(t) {
                    if (!a(t)) return !1;
                    var e = o(t);
                    return !0 === e ? g(p(this, n)).delete(t) : e && c(e, this._i) && delete e[this._i]
                },
                has: function(t) {
                    if (!a(t)) return !1;
                    var e = o(t);
                    return !0 === e ? g(p(this, n)).has(t) : e && c(e, this._i)
                }
            }), l
        },
        def: function(t, n, e) {
            var r = o(i(n), !0);
            return !0 === r ? g(t).set(n, e) : r[t._i] = e, t
        },
        ufstore: g
    }
}, function(t, n, e) {
    "use strict";

    function r(t, n, e, l, c, p, f, h) {
        for (var d, g, v = c, y = 0, m = !!f && s(f, h, 3); y < l;) {
            if (y in e) {
                if (d = m ? m(e[y], y, n) : e[y], g = !1, i(d) && (g = d[u], g = void 0 !== g ? !!g : o(d)), g && p > 0) v = r(t, n, d, a(d.length), v, p - 1) - 1;
                else {
                    if (v >= 9007199254740991) throw TypeError();
                    t[v] = d
                }
                v++
            }
            y++
        }
        return v
    }
    var o = e(142),
        i = e(16),
        a = e(26),
        s = e(46),
        u = e(18)("isConcatSpreadable");
    t.exports = r
}, function(t, n, e) {
    t.exports = !e(24) && !e(14)(function() {
        return 7 != Object.defineProperty(e(205)("div"), "a", {
            get: function() {
                return 7
            }
        }).a
    })
}, function(t, n) {
    t.exports = function(t, n, e) {
        var r = void 0 === e;
        switch (n.length) {
            case 0:
                return r ? t() : t.call(e);
            case 1:
                return r ? t(n[0]) : t.call(e, n[0]);
            case 2:
                return r ? t(n[0], n[1]) : t.call(e, n[0], n[1]);
            case 3:
                return r ? t(n[0], n[1], n[2]) : t.call(e, n[0], n[1], n[2]);
            case 4:
                return r ? t(n[0], n[1], n[2], n[3]) : t.call(e, n[0], n[1], n[2], n[3])
        }
        return t.apply(e, n)
    }
}, function(t, n, e) {
    var r = e(16),
        o = Math.floor;
    t.exports = function(t) {
        return !r(t) && isFinite(t) && o(t) === t
    }
}, function(t, n, e) {
    var r = e(7);
    t.exports = function(t, n, e, o) {
        try {
            return o ? n(r(e)[0], e[1]) : n(e)
        } catch (n) {
            var i = t.return;
            throw void 0 !== i && r(i.call(t)), n
        }
    }
}, function(t, n) {
    t.exports = function(t, n) {
        return {
            value: n,
            done: !!t
        }
    }
}, function(t, n, e) {
    var r = e(214),
        o = Math.pow,
        i = o(2, -52),
        a = o(2, -23),
        s = o(2, 127) * (2 - a),
        u = o(2, -126),
        l = function(t) {
            return t + 1 / i - 1 / i
        };
    t.exports = Math.fround || function(t) {
        var n, e, o = Math.abs(t),
            c = r(t);
        return o < u ? c * l(o / u / a) * u * a : (n = (1 + a / i) * o, e = n - (n - o), e > s || e != e ? c * (1 / 0) : c * e)
    }
}, function(t, n) {
    t.exports = Math.log1p || function(t) {
        return (t = +t) > -1e-8 && t < 1e-8 ? t - t * t / 2 : Math.log(1 + t)
    }
}, function(t, n) {
    t.exports = Math.scale || function(t, n, e, r, o) {
        return 0 === arguments.length || t != t || n != n || e != e || r != r || o != o ? NaN : t === 1 / 0 || t === -1 / 0 ? t : (t - n) * (o - r) / (e - n) + r
    }
}, function(t, n, e) {
    "use strict";
    var r = e(79),
        o = e(146),
        i = e(105),
        a = e(27),
        s = e(104),
        u = Object.assign;
    t.exports = !u || e(14)(function() {
        var t = {},
            n = {},
            e = Symbol(),
            r = "abcdefghijklmnopqrst";
        return t[e] = 7, r.split("").forEach(function(t) {
            n[t] = t
        }), 7 != u({}, t)[e] || Object.keys(u({}, n)).join("") != r
    }) ? function(t, n) {
        for (var e = a(t), u = arguments.length, l = 1, c = o.f, p = i.f; u > l;)
            for (var f, h = s(arguments[l++]), d = c ? r(h).concat(c(h)) : r(h), g = d.length, v = 0; g > v;) p.call(h, f = d[v++]) && (e[f] = h[f]);
        return e
    } : u
}, function(t, n, e) {
    var r = e(25),
        o = e(7),
        i = e(79);
    t.exports = e(24) ? Object.defineProperties : function(t, n) {
        o(t);
        for (var e, a = i(n), s = a.length, u = 0; s > u;) r.f(t, e = a[u++], n[e]);
        return t
    }
}, function(t, n, e) {
    var r = e(44),
        o = e(78).f,
        i = {}.toString,
        a = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],
        s = function(t) {
            try {
                return o(t)
            } catch (t) {
                return a.slice()
            }
        };
    t.exports.f = function(t) {
        return a && "[object Window]" == i.call(t) ? s(t) : o(r(t))
    }
}, function(t, n, e) {
    var r = e(38),
        o = e(44),
        i = e(138)(!1),
        a = e(218)("IE_PROTO");
    t.exports = function(t, n) {
        var e, s = o(t),
            u = 0,
            l = [];
        for (e in s) e != a && r(s, e) && l.push(e);
        for (; n.length > u;) r(s, e = n[u++]) && (~i(l, e) || l.push(e));
        return l
    }
}, function(t, n, e) {
    var r = e(79),
        o = e(44),
        i = e(105).f;
    t.exports = function(t) {
        return function(n) {
            for (var e, a = o(n), s = r(a), u = s.length, l = 0, c = []; u > l;) i.call(a, e = s[l++]) && c.push(t ? [e, a[e]] : a[e]);
            return c
        }
    }
}, function(t, n, e) {
    var r = e(78),
        o = e(146),
        i = e(7),
        a = e(8).Reflect;
    t.exports = a && a.ownKeys || function(t) {
        var n = r.f(i(t)),
            e = o.f;
        return e ? n.concat(e(t)) : n
    }
}, function(t, n, e) {
    var r = e(8).parseFloat,
        o = e(95).trim;
    t.exports = 1 / r(e(222) + "-0") != -1 / 0 ? function(t) {
        var n = o(String(t), 3),
            e = r(n);
        return 0 === e && "-" == n.charAt(0) ? -0 : e
    } : r
}, function(t, n, e) {
    var r = e(8).parseInt,
        o = e(95).trim,
        i = e(222),
        a = /^[-+]?0[xX]/;
    t.exports = 8 !== r(i + "08") || 22 !== r(i + "0x16") ? function(t, n) {
        var e = o(String(t), 3);
        return r(e, n >>> 0 || (a.test(e) ? 16 : 10))
    } : r
}, function(t, n) {
    t.exports = function(t) {
        try {
            return {
                e: !1,
                v: t()
            }
        } catch (t) {
            return {
                e: !0,
                v: t
            }
        }
    }
}, function(t, n, e) {
    var r = e(7),
        o = e(16),
        i = e(216);
    t.exports = function(t, n) {
        if (r(t), o(n) && n.constructor === t) return n;
        var e = i.f(t);
        return (0, e.resolve)(n), e.promise
    }
}, function(t, n, e) {
    var r = e(26),
        o = e(221),
        i = e(51);
    t.exports = function(t, n, e, a) {
        var s = String(i(t)),
            u = s.length,
            l = void 0 === e ? " " : String(e),
            c = r(n);
        if (c <= u || "" == l) return s;
        var p = c - u,
            f = o.call(l, Math.ceil(p / l.length));
        return f.length > p && (f = f.slice(0, p)), a ? f + s : s + f
    }
}, function(t, n, e) {
    var r = e(53),
        o = e(26);
    t.exports = function(t) {
        if (void 0 === t) return 0;
        var n = r(t),
            e = o(n);
        if (n !== e) throw RangeError("Wrong length!");
        return e
    }
}, function(t, n, e) {
    n.f = e(18)
}, function(t, n, e) {
    "use strict";
    var r = e(270),
        o = e(96);
    t.exports = e(139)("Map", function(t) {
        return function() {
            return t(this, arguments.length > 0 ? arguments[0] : void 0)
        }
    }, {
        get: function(t) {
            var n = r.getEntry(o(this, "Map"), t);
            return n && n.v
        },
        set: function(t, n) {
            return r.def(o(this, "Map"), 0 === t ? 0 : t, n)
        }
    }, r, !0)
}, function(t, n, e) {
    e(24) && "g" != /./g.flags && e(25).f(RegExp.prototype, "flags", {
        configurable: !0,
        get: e(141)
    })
}, function(t, n, e) {
    "use strict";
    var r = e(270),
        o = e(96);
    t.exports = e(139)("Set", function(t) {
        return function() {
            return t(this, arguments.length > 0 ? arguments[0] : void 0)
        }
    }, {
        add: function(t) {
            return r.def(o(this, "Set"), t = 0 === t ? 0 : t, t)
        }
    }, r)
}, function(t, n, e) {
    "use strict";
    var r, o = e(49)(0),
        i = e(40),
        a = e(70),
        s = e(282),
        u = e(272),
        l = e(16),
        c = e(14),
        p = e(96),
        f = a.getWeak,
        h = Object.isExtensible,
        d = u.ufstore,
        g = {},
        v = function(t) {
            return function() {
                return t(this, arguments.length > 0 ? arguments[0] : void 0)
            }
        },
        y = {
            get: function(t) {
                if (l(t)) {
                    var n = f(t);
                    return !0 === n ? d(p(this, "WeakMap")).get(t) : n ? n[this._i] : void 0
                }
            },
            set: function(t, n) {
                return u.def(p(this, "WeakMap"), t, n)
            }
        },
        m = t.exports = e(139)("WeakMap", v, y, u, !0, !0);
    c(function() {
        return 7 != (new m).set((Object.freeze || Object)(g), 7).get(g)
    }) && (r = u.getConstructor(v, "WeakMap"), s(r.prototype, y), a.NEED = !0, o(["delete", "has", "get", "set"], function(t) {
        var n = m.prototype,
            e = n[t];
        i(n, t, function(n, o) {
            if (l(n) && !h(n)) {
                this._f || (this._f = new r);
                var i = this._f[t](n, o);
                return "set" == t ? this : i
            }
            return e.call(this, n, o)
        })
    }))
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    "use strict";
    (function(t) {
        function n(t, n, e) {
            t[n] || Object[r](t, n, {
                writable: !0,
                configurable: !0,
                value: e
            })
        }
        if (e(684), e(724), e(470), t._babelPolyfill) throw new Error("only one instance of babel-polyfill is allowed");
        t._babelPolyfill = !0;
        var r = "defineProperty";
        n(String.prototype, "padLeft", "".padStart), n(String.prototype, "padRight", "".padEnd), "pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function(t) {
            [][t] && n(Array, t, Function.call.bind([][t]))
        })
    }).call(n, e(62))
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    e(465), e(455), e(456), e(457), e(458), e(459), e(460), e(464), e(461), e(462), e(463), e(454)
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                return this.each(function() {
                    var r = t(this),
                        o = r.data("bs.affix"),
                        i = "object" == typeof n && n;
                    o || r.data("bs.affix", o = new e(this, i)), "string" == typeof n && o[n]()
                })
            }
            var e = function(n, r) {
                this.options = t.extend({}, e.DEFAULTS, r), this.$target = t(this.options.target).on("scroll.bs.affix.data-api", t.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", t.proxy(this.checkPositionWithEventLoop, this)), this.$element = t(n), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition()
            };
            e.VERSION = "3.3.7", e.RESET = "affix affix-top affix-bottom", e.DEFAULTS = {
                offset: 0,
                target: window
            }, e.prototype.getState = function(t, n, e, r) {
                var o = this.$target.scrollTop(),
                    i = this.$element.offset(),
                    a = this.$target.height();
                if (null != e && "top" == this.affixed) return o < e && "top";
                if ("bottom" == this.affixed) return null != e ? !(o + this.unpin <= i.top) && "bottom" : !(o + a <= t - r) && "bottom";
                var s = null == this.affixed,
                    u = s ? o : i.top,
                    l = s ? a : n;
                return null != e && o <= e ? "top" : null != r && u + l >= t - r && "bottom"
            }, e.prototype.getPinnedOffset = function() {
                if (this.pinnedOffset) return this.pinnedOffset;
                this.$element.removeClass(e.RESET).addClass("affix");
                var t = this.$target.scrollTop(),
                    n = this.$element.offset();
                return this.pinnedOffset = n.top - t
            }, e.prototype.checkPositionWithEventLoop = function() {
                setTimeout(t.proxy(this.checkPosition, this), 1)
            }, e.prototype.checkPosition = function() {
                if (this.$element.is(":visible")) {
                    var n = this.$element.height(),
                        r = this.options.offset,
                        o = r.top,
                        i = r.bottom,
                        a = Math.max(t(document).height(), t(document.body).height());
                    "object" != typeof r && (i = o = r), "function" == typeof o && (o = r.top(this.$element)), "function" == typeof i && (i = r.bottom(this.$element));
                    var s = this.getState(a, n, o, i);
                    if (this.affixed != s) {
                        null != this.unpin && this.$element.css("top", "");
                        var u = "affix" + (s ? "-" + s : ""),
                            l = t.Event(u + ".bs.affix");
                        if (this.$element.trigger(l), l.isDefaultPrevented()) return;
                        this.affixed = s, this.unpin = "bottom" == s ? this.getPinnedOffset() : null, this.$element.removeClass(e.RESET).addClass(u).trigger(u.replace("affix", "affixed") + ".bs.affix")
                    }
                    "bottom" == s && this.$element.offset({
                        top: a - n - i
                    })
                }
            };
            var r = t.fn.affix;
            t.fn.affix = n, t.fn.affix.Constructor = e, t.fn.affix.noConflict = function() {
                return t.fn.affix = r, this
            }, t(window).on("load", function() {
                t('[data-spy="affix"]').each(function() {
                    var e = t(this),
                        r = e.data();
                    r.offset = r.offset || {}, null != r.offsetBottom && (r.offset.bottom = r.offsetBottom), null != r.offsetTop && (r.offset.top = r.offsetTop), n.call(e, r)
                })
            })
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                return this.each(function() {
                    var e = t(this),
                        o = e.data("bs.alert");
                    o || e.data("bs.alert", o = new r(this)), "string" == typeof n && o[n].call(e)
                })
            }
            var e = '[data-dismiss="alert"]',
                r = function(n) {
                    t(n).on("click", e, this.close)
                };
            r.VERSION = "3.3.7", r.TRANSITION_DURATION = 150, r.prototype.close = function(n) {
                function e() {
                    a.detach().trigger("closed.bs.alert").remove()
                }
                var o = t(this),
                    i = o.attr("data-target");
                i || (i = o.attr("href"), i = i && i.replace(/.*(?=#[^\s]*$)/, ""));
                var a = t("#" === i ? [] : i);
                n && n.preventDefault(), a.length || (a = o.closest(".alert")), a.trigger(n = t.Event("close.bs.alert")), n.isDefaultPrevented() || (a.removeClass("in"), t.support.transition && a.hasClass("fade") ? a.one("bsTransitionEnd", e).emulateTransitionEnd(r.TRANSITION_DURATION) : e())
            };
            var o = t.fn.alert;
            t.fn.alert = n, t.fn.alert.Constructor = r, t.fn.alert.noConflict = function() {
                return t.fn.alert = o, this
            }, t(document).on("click.bs.alert.data-api", e, r.prototype.close)
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                return this.each(function() {
                    var r = t(this),
                        o = r.data("bs.button"),
                        i = "object" == typeof n && n;
                    o || r.data("bs.button", o = new e(this, i)), "toggle" == n ? o.toggle() : n && o.setState(n)
                })
            }
            var e = function(n, r) {
                this.$element = t(n), this.options = t.extend({}, e.DEFAULTS, r), this.isLoading = !1
            };
            e.VERSION = "3.3.7", e.DEFAULTS = {
                loadingText: "loading..."
            }, e.prototype.setState = function(n) {
                var e = "disabled",
                    r = this.$element,
                    o = r.is("input") ? "val" : "html",
                    i = r.data();
                n += "Text", null == i.resetText && r.data("resetText", r[o]()), setTimeout(t.proxy(function() {
                    r[o](null == i[n] ? this.options[n] : i[n]), "loadingText" == n ? (this.isLoading = !0, r.addClass(e).attr(e, e).prop(e, !0)) : this.isLoading && (this.isLoading = !1, r.removeClass(e).removeAttr(e).prop(e, !1))
                }, this), 0)
            }, e.prototype.toggle = function() {
                var t = !0,
                    n = this.$element.closest('[data-toggle="buttons"]');
                if (n.length) {
                    var e = this.$element.find("input");
                    "radio" == e.prop("type") ? (e.prop("checked") && (t = !1), n.find(".active").removeClass("active"), this.$element.addClass("active")) : "checkbox" == e.prop("type") && (e.prop("checked") !== this.$element.hasClass("active") && (t = !1), this.$element.toggleClass("active")), e.prop("checked", this.$element.hasClass("active")), t && e.trigger("change")
                } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active")
            };
            var r = t.fn.button;
            t.fn.button = n, t.fn.button.Constructor = e, t.fn.button.noConflict = function() {
                return t.fn.button = r, this
            }, t(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function(e) {
                var r = t(e.target).closest(".btn");
                n.call(r, "toggle"), t(e.target).is('input[type="radio"], input[type="checkbox"]') || (e.preventDefault(), r.is("input,button") ? r.trigger("focus") : r.find("input:visible,button:visible").first().trigger("focus"))
            }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function(n) {
                t(n.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(n.type))
            })
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                return this.each(function() {
                    var r = t(this),
                        o = r.data("bs.carousel"),
                        i = t.extend({}, e.DEFAULTS, r.data(), "object" == typeof n && n),
                        a = "string" == typeof n ? n : i.slide;
                    o || r.data("bs.carousel", o = new e(this, i)), "number" == typeof n ? o.to(n) : a ? o[a]() : i.interval && o.pause().cycle()
                })
            }
            var e = function(n, e) {
                this.$element = t(n), this.$indicators = this.$element.find(".carousel-indicators"), this.options = e, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on("keydown.bs.carousel", t.proxy(this.keydown, this)), "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", t.proxy(this.pause, this)).on("mouseleave.bs.carousel", t.proxy(this.cycle, this))
            };
            e.VERSION = "3.3.7", e.TRANSITION_DURATION = 600, e.DEFAULTS = {
                interval: 5e3,
                pause: "hover",
                wrap: !0,
                keyboard: !0
            }, e.prototype.keydown = function(t) {
                if (!/input|textarea/i.test(t.target.tagName)) {
                    switch (t.which) {
                        case 37:
                            this.prev();
                            break;
                        case 39:
                            this.next();
                            break;
                        default:
                            return
                    }
                    t.preventDefault()
                }
            }, e.prototype.cycle = function(n) {
                return n || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(t.proxy(this.next, this), this.options.interval)), this
            }, e.prototype.getItemIndex = function(t) {
                return this.$items = t.parent().children(".item"), this.$items.index(t || this.$active)
            }, e.prototype.getItemForDirection = function(t, n) {
                var e = this.getItemIndex(n);
                if (("prev" == t && 0 === e || "next" == t && e == this.$items.length - 1) && !this.options.wrap) return n;
                var r = "prev" == t ? -1 : 1,
                    o = (e + r) % this.$items.length;
                return this.$items.eq(o)
            }, e.prototype.to = function(t) {
                var n = this,
                    e = this.getItemIndex(this.$active = this.$element.find(".item.active"));
                if (!(t > this.$items.length - 1 || t < 0)) return this.sliding ? this.$element.one("slid.bs.carousel", function() {
                    n.to(t)
                }) : e == t ? this.pause().cycle() : this.slide(t > e ? "next" : "prev", this.$items.eq(t))
            }, e.prototype.pause = function(n) {
                return n || (this.paused = !0), this.$element.find(".next, .prev").length && t.support.transition && (this.$element.trigger(t.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this
            }, e.prototype.next = function() {
                if (!this.sliding) return this.slide("next")
            }, e.prototype.prev = function() {
                if (!this.sliding) return this.slide("prev")
            }, e.prototype.slide = function(n, r) {
                var o = this.$element.find(".item.active"),
                    i = r || this.getItemForDirection(n, o),
                    a = this.interval,
                    s = "next" == n ? "left" : "right",
                    u = this;
                if (i.hasClass("active")) return this.sliding = !1;
                var l = i[0],
                    c = t.Event("slide.bs.carousel", {
                        relatedTarget: l,
                        direction: s
                    });
                if (this.$element.trigger(c), !c.isDefaultPrevented()) {
                    if (this.sliding = !0, a && this.pause(), this.$indicators.length) {
                        this.$indicators.find(".active").removeClass("active");
                        var p = t(this.$indicators.children()[this.getItemIndex(i)]);
                        p && p.addClass("active")
                    }
                    var f = t.Event("slid.bs.carousel", {
                        relatedTarget: l,
                        direction: s
                    });
                    return t.support.transition && this.$element.hasClass("slide") ? (i.addClass(n), i[0].offsetWidth, o.addClass(s), i.addClass(s), o.one("bsTransitionEnd", function() {
                        i.removeClass([n, s].join(" ")).addClass("active"), o.removeClass(["active", s].join(" ")), u.sliding = !1, setTimeout(function() {
                            u.$element.trigger(f)
                        }, 0)
                    }).emulateTransitionEnd(e.TRANSITION_DURATION)) : (o.removeClass("active"), i.addClass("active"), this.sliding = !1, this.$element.trigger(f)), a && this.cycle(), this
                }
            };
            var r = t.fn.carousel;
            t.fn.carousel = n, t.fn.carousel.Constructor = e, t.fn.carousel.noConflict = function() {
                return t.fn.carousel = r, this
            };
            var o = function(e) {
                var r, o = t(this),
                    i = t(o.attr("data-target") || (r = o.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, ""));
                if (i.hasClass("carousel")) {
                    var a = t.extend({}, i.data(), o.data()),
                        s = o.attr("data-slide-to");
                    s && (a.interval = !1), n.call(i, a), s && i.data("bs.carousel").to(s), e.preventDefault()
                }
            };
            t(document).on("click.bs.carousel.data-api", "[data-slide]", o).on("click.bs.carousel.data-api", "[data-slide-to]", o), t(window).on("load", function() {
                t('[data-ride="carousel"]').each(function() {
                    var e = t(this);
                    n.call(e, e.data())
                })
            })
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                var e, r = n.attr("data-target") || (e = n.attr("href")) && e.replace(/.*(?=#[^\s]+$)/, "");
                return t(r)
            }

            function e(n) {
                return this.each(function() {
                    var e = t(this),
                        o = e.data("bs.collapse"),
                        i = t.extend({}, r.DEFAULTS, e.data(), "object" == typeof n && n);
                    !o && i.toggle && /show|hide/.test(n) && (i.toggle = !1), o || e.data("bs.collapse", o = new r(this, i)), "string" == typeof n && o[n]()
                })
            }
            var r = function(n, e) {
                this.$element = t(n), this.options = t.extend({}, r.DEFAULTS, e), this.$trigger = t('[data-toggle="collapse"][href="#' + n.id + '"],[data-toggle="collapse"][data-target="#' + n.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle()
            };
            r.VERSION = "3.3.7", r.TRANSITION_DURATION = 350, r.DEFAULTS = {
                toggle: !0
            }, r.prototype.dimension = function() {
                return this.$element.hasClass("width") ? "width" : "height"
            }, r.prototype.show = function() {
                if (!this.transitioning && !this.$element.hasClass("in")) {
                    var n, o = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
                    if (!(o && o.length && (n = o.data("bs.collapse")) && n.transitioning)) {
                        var i = t.Event("show.bs.collapse");
                        if (this.$element.trigger(i), !i.isDefaultPrevented()) {
                            o && o.length && (e.call(o, "hide"), n || o.data("bs.collapse", null));
                            var a = this.dimension();
                            this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), this.transitioning = 1;
                            var s = function() {
                                this.$element.removeClass("collapsing").addClass("collapse in")[a](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse")
                            };
                            if (!t.support.transition) return s.call(this);
                            var u = t.camelCase(["scroll", a].join("-"));
                            this.$element.one("bsTransitionEnd", t.proxy(s, this)).emulateTransitionEnd(r.TRANSITION_DURATION)[a](this.$element[0][u])
                        }
                    }
                }
            }, r.prototype.hide = function() {
                if (!this.transitioning && this.$element.hasClass("in")) {
                    var n = t.Event("hide.bs.collapse");
                    if (this.$element.trigger(n), !n.isDefaultPrevented()) {
                        var e = this.dimension();
                        this.$element[e](this.$element[e]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1), this.$trigger.addClass("collapsed").attr("aria-expanded", !1), this.transitioning = 1;
                        var o = function() {
                            this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")
                        };
                        if (!t.support.transition) return o.call(this);
                        this.$element[e](0).one("bsTransitionEnd", t.proxy(o, this)).emulateTransitionEnd(r.TRANSITION_DURATION)
                    }
                }
            }, r.prototype.toggle = function() {
                this[this.$element.hasClass("in") ? "hide" : "show"]()
            }, r.prototype.getParent = function() {
                return t(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(t.proxy(function(e, r) {
                    var o = t(r);
                    this.addAriaAndCollapsedClass(n(o), o)
                }, this)).end()
            }, r.prototype.addAriaAndCollapsedClass = function(t, n) {
                var e = t.hasClass("in");
                t.attr("aria-expanded", e), n.toggleClass("collapsed", !e).attr("aria-expanded", e)
            };
            var o = t.fn.collapse;
            t.fn.collapse = e, t.fn.collapse.Constructor = r, t.fn.collapse.noConflict = function() {
                return t.fn.collapse = o, this
            }, t(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function(r) {
                var o = t(this);
                o.attr("data-target") || r.preventDefault();
                var i = n(o),
                    a = i.data("bs.collapse"),
                    s = a ? "toggle" : o.data();
                e.call(i, s)
            })
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                var e = n.attr("data-target");
                e || (e = n.attr("href"), e = e && /#[A-Za-z]/.test(e) && e.replace(/.*(?=#[^\s]*$)/, ""));
                var r = e && t(e);
                return r && r.length ? r : n.parent()
            }

            function e(e) {
                e && 3 === e.which || (t(o).remove(), t(i).each(function() {
                    var r = t(this),
                        o = n(r),
                        i = {
                            relatedTarget: this
                        };
                    o.hasClass("open") && (e && "click" == e.type && /input|textarea/i.test(e.target.tagName) && t.contains(o[0], e.target) || (o.trigger(e = t.Event("hide.bs.dropdown", i)), e.isDefaultPrevented() || (r.attr("aria-expanded", "false"), o.removeClass("open").trigger(t.Event("hidden.bs.dropdown", i)))))
                }))
            }

            function r(n) {
                return this.each(function() {
                    var e = t(this),
                        r = e.data("bs.dropdown");
                    r || e.data("bs.dropdown", r = new a(this)), "string" == typeof n && r[n].call(e)
                })
            }
            var o = ".dropdown-backdrop",
                i = '[data-toggle="dropdown"]',
                a = function(n) {
                    t(n).on("click.bs.dropdown", this.toggle)
                };
            a.VERSION = "3.3.7", a.prototype.toggle = function(r) {
                var o = t(this);
                if (!o.is(".disabled, :disabled")) {
                    var i = n(o),
                        a = i.hasClass("open");
                    if (e(), !a) {
                        "ontouchstart" in document.documentElement && !i.closest(".navbar-nav").length && t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click", e);
                        var s = {
                            relatedTarget: this
                        };
                        if (i.trigger(r = t.Event("show.bs.dropdown", s)), r.isDefaultPrevented()) return;
                        o.trigger("focus").attr("aria-expanded", "true"), i.toggleClass("open").trigger(t.Event("shown.bs.dropdown", s))
                    }
                    return !1
                }
            }, a.prototype.keydown = function(e) {
                if (/(38|40|27|32)/.test(e.which) && !/input|textarea/i.test(e.target.tagName)) {
                    var r = t(this);
                    if (e.preventDefault(), e.stopPropagation(), !r.is(".disabled, :disabled")) {
                        var o = n(r),
                            a = o.hasClass("open");
                        if (!a && 27 != e.which || a && 27 == e.which) return 27 == e.which && o.find(i).trigger("focus"), r.trigger("click");
                        var s = o.find(".dropdown-menu li:not(.disabled):visible a");
                        if (s.length) {
                            var u = s.index(e.target);
                            38 == e.which && u > 0 && u--, 40 == e.which && u < s.length - 1 && u++, ~u || (u = 0), s.eq(u).trigger("focus")
                        }
                    }
                }
            };
            var s = t.fn.dropdown;
            t.fn.dropdown = r, t.fn.dropdown.Constructor = a, t.fn.dropdown.noConflict = function() {
                return t.fn.dropdown = s, this
            }, t(document).on("click.bs.dropdown.data-api", e).on("click.bs.dropdown.data-api", ".dropdown form", function(t) {
                t.stopPropagation()
            }).on("click.bs.dropdown.data-api", i, a.prototype.toggle).on("keydown.bs.dropdown.data-api", i, a.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", a.prototype.keydown)
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n, r) {
                return this.each(function() {
                    var o = t(this),
                        i = o.data("bs.modal"),
                        a = t.extend({}, e.DEFAULTS, o.data(), "object" == typeof n && n);
                    i || o.data("bs.modal", i = new e(this, a)), "string" == typeof n ? i[n](r) : a.show && i.show(r)
                })
            }
            var e = function(n, e) {
                this.options = e, this.$body = t(document.body), this.$element = t(n), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, t.proxy(function() {
                    this.$element.trigger("loaded.bs.modal")
                }, this))
            };
            e.VERSION = "3.3.7", e.TRANSITION_DURATION = 300, e.BACKDROP_TRANSITION_DURATION = 150, e.DEFAULTS = {
                backdrop: !0,
                keyboard: !0,
                show: !0
            }, e.prototype.toggle = function(t) {
                return this.isShown ? this.hide() : this.show(t)
            }, e.prototype.show = function(n) {
                var r = this,
                    o = t.Event("show.bs.modal", {
                        relatedTarget: n
                    });
                this.$element.trigger(o), this.isShown || o.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', t.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function() {
                    r.$element.one("mouseup.dismiss.bs.modal", function(n) {
                        t(n.target).is(r.$element) && (r.ignoreBackdropClick = !0)
                    })
                }), this.backdrop(function() {
                    var o = t.support.transition && r.$element.hasClass("fade");
                    r.$element.parent().length || r.$element.appendTo(r.$body), r.$element.show().scrollTop(0), r.adjustDialog(), o && r.$element[0].offsetWidth, r.$element.addClass("in"), r.enforceFocus();
                    var i = t.Event("shown.bs.modal", {
                        relatedTarget: n
                    });
                    o ? r.$dialog.one("bsTransitionEnd", function() {
                        r.$element.trigger("focus").trigger(i)
                    }).emulateTransitionEnd(e.TRANSITION_DURATION) : r.$element.trigger("focus").trigger(i)
                }))
            }, e.prototype.hide = function(n) {
                n && n.preventDefault(), n = t.Event("hide.bs.modal"), this.$element.trigger(n), this.isShown && !n.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), t(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), t.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", t.proxy(this.hideModal, this)).emulateTransitionEnd(e.TRANSITION_DURATION) : this.hideModal())
            }, e.prototype.enforceFocus = function() {
                t(document).off("focusin.bs.modal").on("focusin.bs.modal", t.proxy(function(t) {
                    document === t.target || this.$element[0] === t.target || this.$element.has(t.target).length || this.$element.trigger("focus")
                }, this))
            }, e.prototype.escape = function() {
                this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", t.proxy(function(t) {
                    27 == t.which && this.hide()
                }, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal")
            }, e.prototype.resize = function() {
                this.isShown ? t(window).on("resize.bs.modal", t.proxy(this.handleUpdate, this)) : t(window).off("resize.bs.modal")
            }, e.prototype.hideModal = function() {
                var t = this;
                this.$element.hide(), this.backdrop(function() {
                    t.$body.removeClass("modal-open"), t.resetAdjustments(), t.resetScrollbar(), t.$element.trigger("hidden.bs.modal")
                })
            }, e.prototype.removeBackdrop = function() {
                this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
            }, e.prototype.backdrop = function(n) {
                var r = this,
                    o = this.$element.hasClass("fade") ? "fade" : "";
                if (this.isShown && this.options.backdrop) {
                    var i = t.support.transition && o;
                    if (this.$backdrop = t(document.createElement("div")).addClass("modal-backdrop " + o).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", t.proxy(function(t) {
                            if (this.ignoreBackdropClick) return void(this.ignoreBackdropClick = !1);
                            t.target === t.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide())
                        }, this)), i && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !n) return;
                    i ? this.$backdrop.one("bsTransitionEnd", n).emulateTransitionEnd(e.BACKDROP_TRANSITION_DURATION) : n()
                } else if (!this.isShown && this.$backdrop) {
                    this.$backdrop.removeClass("in");
                    var a = function() {
                        r.removeBackdrop(), n && n()
                    };
                    t.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", a).emulateTransitionEnd(e.BACKDROP_TRANSITION_DURATION) : a()
                } else n && n()
            }, e.prototype.handleUpdate = function() {
                this.adjustDialog()
            }, e.prototype.adjustDialog = function() {
                var t = this.$element[0].scrollHeight > document.documentElement.clientHeight;
                this.$element.css({
                    paddingLeft: !this.bodyIsOverflowing && t ? this.scrollbarWidth : "",
                    paddingRight: this.bodyIsOverflowing && !t ? this.scrollbarWidth : ""
                })
            }, e.prototype.resetAdjustments = function() {
                this.$element.css({
                    paddingLeft: "",
                    paddingRight: ""
                })
            }, e.prototype.checkScrollbar = function() {
                var t = window.innerWidth;
                if (!t) {
                    var n = document.documentElement.getBoundingClientRect();
                    t = n.right - Math.abs(n.left)
                }
                this.bodyIsOverflowing = document.body.clientWidth < t, this.scrollbarWidth = this.measureScrollbar()
            }, e.prototype.setScrollbar = function() {
                var t = parseInt(this.$body.css("padding-right") || 0, 10);
                this.originalBodyPad = document.body.style.paddingRight || "", this.bodyIsOverflowing && this.$body.css("padding-right", t + this.scrollbarWidth)
            }, e.prototype.resetScrollbar = function() {
                this.$body.css("padding-right", this.originalBodyPad)
            }, e.prototype.measureScrollbar = function() {
                var t = document.createElement("div");
                t.className = "modal-scrollbar-measure", this.$body.append(t);
                var n = t.offsetWidth - t.clientWidth;
                return this.$body[0].removeChild(t), n
            };
            var r = t.fn.modal;
            t.fn.modal = n, t.fn.modal.Constructor = e, t.fn.modal.noConflict = function() {
                return t.fn.modal = r, this
            }, t(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(e) {
                var r = t(this),
                    o = r.attr("href"),
                    i = t(r.attr("data-target") || o && o.replace(/.*(?=#[^\s]+$)/, "")),
                    a = i.data("bs.modal") ? "toggle" : t.extend({
                        remote: !/#/.test(o) && o
                    }, i.data(), r.data());
                r.is("a") && e.preventDefault(), i.one("show.bs.modal", function(t) {
                    t.isDefaultPrevented() || i.one("hidden.bs.modal", function() {
                        r.is(":visible") && r.trigger("focus")
                    })
                }), n.call(i, a, this)
            })
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                return this.each(function() {
                    var r = t(this),
                        o = r.data("bs.popover"),
                        i = "object" == typeof n && n;
                    !o && /destroy|hide/.test(n) || (o || r.data("bs.popover", o = new e(this, i)), "string" == typeof n && o[n]())
                })
            }
            var e = function(t, n) {
                this.init("popover", t, n)
            };
            if (!t.fn.tooltip) throw new Error("Popover requires tooltip.js");
            e.VERSION = "3.3.7", e.DEFAULTS = t.extend({}, t.fn.tooltip.Constructor.DEFAULTS, {
                placement: "right",
                trigger: "click",
                content: "",
                template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
            }), e.prototype = t.extend({}, t.fn.tooltip.Constructor.prototype), e.prototype.constructor = e, e.prototype.getDefaults = function() {
                return e.DEFAULTS
            }, e.prototype.setContent = function() {
                var t = this.tip(),
                    n = this.getTitle(),
                    e = this.getContent();
                t.find(".popover-title")[this.options.html ? "html" : "text"](n), t.find(".popover-content").children().detach().end()[this.options.html ? "string" == typeof e ? "html" : "append" : "text"](e), t.removeClass("fade top bottom left right in"), t.find(".popover-title").html() || t.find(".popover-title").hide()
            }, e.prototype.hasContent = function() {
                return this.getTitle() || this.getContent()
            }, e.prototype.getContent = function() {
                var t = this.$element,
                    n = this.options;
                return t.attr("data-content") || ("function" == typeof n.content ? n.content.call(t[0]) : n.content)
            }, e.prototype.arrow = function() {
                return this.$arrow = this.$arrow || this.tip().find(".arrow")
            };
            var r = t.fn.popover;
            t.fn.popover = n, t.fn.popover.Constructor = e, t.fn.popover.noConflict = function() {
                return t.fn.popover = r, this
            }
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(e, r) {
                this.$body = t(document.body), this.$scrollElement = t(t(e).is(document.body) ? window : e), this.options = t.extend({}, n.DEFAULTS, r), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", t.proxy(this.process, this)), this.refresh(), this.process()
            }

            function e(e) {
                return this.each(function() {
                    var r = t(this),
                        o = r.data("bs.scrollspy"),
                        i = "object" == typeof e && e;
                    o || r.data("bs.scrollspy", o = new n(this, i)), "string" == typeof e && o[e]()
                })
            }
            n.VERSION = "3.3.7", n.DEFAULTS = {
                offset: 10
            }, n.prototype.getScrollHeight = function() {
                return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
            }, n.prototype.refresh = function() {
                var n = this,
                    e = "offset",
                    r = 0;
                this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), t.isWindow(this.$scrollElement[0]) || (e = "position", r = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function() {
                    var n = t(this),
                        o = n.data("target") || n.attr("href"),
                        i = /^#./.test(o) && t(o);
                    return i && i.length && i.is(":visible") && [
                        [i[e]().top + r, o]
                    ] || null
                }).sort(function(t, n) {
                    return t[0] - n[0]
                }).each(function() {
                    n.offsets.push(this[0]), n.targets.push(this[1])
                })
            }, n.prototype.process = function() {
                var t, n = this.$scrollElement.scrollTop() + this.options.offset,
                    e = this.getScrollHeight(),
                    r = this.options.offset + e - this.$scrollElement.height(),
                    o = this.offsets,
                    i = this.targets,
                    a = this.activeTarget;
                if (this.scrollHeight != e && this.refresh(), n >= r) return a != (t = i[i.length - 1]) && this.activate(t);
                if (a && n < o[0]) return this.activeTarget = null, this.clear();
                for (t = o.length; t--;) a != i[t] && n >= o[t] && (void 0 === o[t + 1] || n < o[t + 1]) && this.activate(i[t])
            }, n.prototype.activate = function(n) {
                this.activeTarget = n, this.clear();
                var e = this.selector + '[data-target="' + n + '"],' + this.selector + '[href="' + n + '"]',
                    r = t(e).parents("li").addClass("active");
                r.parent(".dropdown-menu").length && (r = r.closest("li.dropdown").addClass("active")), r.trigger("activate.bs.scrollspy")
            }, n.prototype.clear = function() {
                t(this.selector).parentsUntil(this.options.target, ".active").removeClass("active")
            };
            var r = t.fn.scrollspy;
            t.fn.scrollspy = e, t.fn.scrollspy.Constructor = n, t.fn.scrollspy.noConflict = function() {
                return t.fn.scrollspy = r, this
            }, t(window).on("load.bs.scrollspy.data-api", function() {
                t('[data-spy="scroll"]').each(function() {
                    var n = t(this);
                    e.call(n, n.data())
                })
            })
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                return this.each(function() {
                    var r = t(this),
                        o = r.data("bs.tab");
                    o || r.data("bs.tab", o = new e(this)), "string" == typeof n && o[n]()
                })
            }
            var e = function(n) {
                this.element = t(n)
            };
            e.VERSION = "3.3.7", e.TRANSITION_DURATION = 150, e.prototype.show = function() {
                var n = this.element,
                    e = n.closest("ul:not(.dropdown-menu)"),
                    r = n.data("target");
                if (r || (r = n.attr("href"), r = r && r.replace(/.*(?=#[^\s]*$)/, "")), !n.parent("li").hasClass("active")) {
                    var o = e.find(".active:last a"),
                        i = t.Event("hide.bs.tab", {
                            relatedTarget: n[0]
                        }),
                        a = t.Event("show.bs.tab", {
                            relatedTarget: o[0]
                        });
                    if (o.trigger(i), n.trigger(a), !a.isDefaultPrevented() && !i.isDefaultPrevented()) {
                        var s = t(r);
                        this.activate(n.closest("li"), e), this.activate(s, s.parent(), function() {
                            o.trigger({
                                type: "hidden.bs.tab",
                                relatedTarget: n[0]
                            }), n.trigger({
                                type: "shown.bs.tab",
                                relatedTarget: o[0]
                            })
                        })
                    }
                }
            }, e.prototype.activate = function(n, r, o) {
                function i() {
                    a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1), n.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0), s ? (n[0].offsetWidth, n.addClass("in")) : n.removeClass("fade"), n.parent(".dropdown-menu").length && n.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0), o && o()
                }
                var a = r.find("> .active"),
                    s = o && t.support.transition && (a.length && a.hasClass("fade") || !!r.find("> .fade").length);
                a.length && s ? a.one("bsTransitionEnd", i).emulateTransitionEnd(e.TRANSITION_DURATION) : i(), a.removeClass("in")
            };
            var r = t.fn.tab;
            t.fn.tab = n, t.fn.tab.Constructor = e, t.fn.tab.noConflict = function() {
                return t.fn.tab = r, this
            };
            var o = function(e) {
                e.preventDefault(), n.call(t(this), "show")
            };
            t(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', o).on("click.bs.tab.data-api", '[data-toggle="pill"]', o)
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n(n) {
                return this.each(function() {
                    var r = t(this),
                        o = r.data("bs.tooltip"),
                        i = "object" == typeof n && n;
                    !o && /destroy|hide/.test(n) || (o || r.data("bs.tooltip", o = new e(this, i)), "string" == typeof n && o[n]())
                })
            }
            var e = function(t, n) {
                this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", t, n)
            };
            e.VERSION = "3.3.7", e.TRANSITION_DURATION = 150, e.DEFAULTS = {
                animation: !0,
                placement: "top",
                selector: !1,
                template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                trigger: "hover focus",
                title: "",
                delay: 0,
                html: !1,
                container: !1,
                viewport: {
                    selector: "body",
                    padding: 0
                }
            }, e.prototype.init = function(n, e, r) {
                if (this.enabled = !0, this.type = n, this.$element = t(e), this.options = this.getOptions(r), this.$viewport = this.options.viewport && t(t.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = {
                        click: !1,
                        hover: !1,
                        focus: !1
                    }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
                for (var o = this.options.trigger.split(" "), i = o.length; i--;) {
                    var a = o[i];
                    if ("click" == a) this.$element.on("click." + this.type, this.options.selector, t.proxy(this.toggle, this));
                    else if ("manual" != a) {
                        var s = "hover" == a ? "mouseenter" : "focusin",
                            u = "hover" == a ? "mouseleave" : "focusout";
                        this.$element.on(s + "." + this.type, this.options.selector, t.proxy(this.enter, this)), this.$element.on(u + "." + this.type, this.options.selector, t.proxy(this.leave, this))
                    }
                }
                this.options.selector ? this._options = t.extend({}, this.options, {
                    trigger: "manual",
                    selector: ""
                }) : this.fixTitle()
            }, e.prototype.getDefaults = function() {
                return e.DEFAULTS
            }, e.prototype.getOptions = function(n) {
                return n = t.extend({}, this.getDefaults(), this.$element.data(), n), n.delay && "number" == typeof n.delay && (n.delay = {
                    show: n.delay,
                    hide: n.delay
                }), n
            }, e.prototype.getDelegateOptions = function() {
                var n = {},
                    e = this.getDefaults();
                return this._options && t.each(this._options, function(t, r) {
                    e[t] != r && (n[t] = r)
                }), n
            }, e.prototype.enter = function(n) {
                var e = n instanceof this.constructor ? n : t(n.currentTarget).data("bs." + this.type);
                return e || (e = new this.constructor(n.currentTarget, this.getDelegateOptions()), t(n.currentTarget).data("bs." + this.type, e)), n instanceof t.Event && (e.inState["focusin" == n.type ? "focus" : "hover"] = !0), e.tip().hasClass("in") || "in" == e.hoverState ? void(e.hoverState = "in") : (clearTimeout(e.timeout), e.hoverState = "in", e.options.delay && e.options.delay.show ? void(e.timeout = setTimeout(function() {
                    "in" == e.hoverState && e.show()
                }, e.options.delay.show)) : e.show())
            }, e.prototype.isInStateTrue = function() {
                for (var t in this.inState)
                    if (this.inState[t]) return !0;
                return !1
            }, e.prototype.leave = function(n) {
                var e = n instanceof this.constructor ? n : t(n.currentTarget).data("bs." + this.type);
                if (e || (e = new this.constructor(n.currentTarget, this.getDelegateOptions()), t(n.currentTarget).data("bs." + this.type, e)), n instanceof t.Event && (e.inState["focusout" == n.type ? "focus" : "hover"] = !1), !e.isInStateTrue()) {
                    if (clearTimeout(e.timeout), e.hoverState = "out", !e.options.delay || !e.options.delay.hide) return e.hide();
                    e.timeout = setTimeout(function() {
                        "out" == e.hoverState && e.hide()
                    }, e.options.delay.hide)
                }
            }, e.prototype.show = function() {
                var n = t.Event("show.bs." + this.type);
                if (this.hasContent() && this.enabled) {
                    this.$element.trigger(n);
                    var r = t.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
                    if (n.isDefaultPrevented() || !r) return;
                    var o = this,
                        i = this.tip(),
                        a = this.getUID(this.type);
                    this.setContent(), i.attr("id", a), this.$element.attr("aria-describedby", a), this.options.animation && i.addClass("fade");
                    var s = "function" == typeof this.options.placement ? this.options.placement.call(this, i[0], this.$element[0]) : this.options.placement,
                        u = /\s?auto?\s?/i,
                        l = u.test(s);
                    l && (s = s.replace(u, "") || "top"), i.detach().css({
                        top: 0,
                        left: 0,
                        display: "block"
                    }).addClass(s).data("bs." + this.type, this), this.options.container ? i.appendTo(this.options.container) : i.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type);
                    var c = this.getPosition(),
                        p = i[0].offsetWidth,
                        f = i[0].offsetHeight;
                    if (l) {
                        var h = s,
                            d = this.getPosition(this.$viewport);
                        s = "bottom" == s && c.bottom + f > d.bottom ? "top" : "top" == s && c.top - f < d.top ? "bottom" : "right" == s && c.right + p > d.width ? "left" : "left" == s && c.left - p < d.left ? "right" : s, i.removeClass(h).addClass(s)
                    }
                    var g = this.getCalculatedOffset(s, c, p, f);
                    this.applyPlacement(g, s);
                    var v = function() {
                        var t = o.hoverState;
                        o.$element.trigger("shown.bs." + o.type), o.hoverState = null, "out" == t && o.leave(o)
                    };
                    t.support.transition && this.$tip.hasClass("fade") ? i.one("bsTransitionEnd", v).emulateTransitionEnd(e.TRANSITION_DURATION) : v()
                }
            }, e.prototype.applyPlacement = function(n, e) {
                var r = this.tip(),
                    o = r[0].offsetWidth,
                    i = r[0].offsetHeight,
                    a = parseInt(r.css("margin-top"), 10),
                    s = parseInt(r.css("margin-left"), 10);
                isNaN(a) && (a = 0), isNaN(s) && (s = 0), n.top += a, n.left += s, t.offset.setOffset(r[0], t.extend({
                    using: function(t) {
                        r.css({
                            top: Math.round(t.top),
                            left: Math.round(t.left)
                        })
                    }
                }, n), 0), r.addClass("in");
                var u = r[0].offsetWidth,
                    l = r[0].offsetHeight;
                "top" == e && l != i && (n.top = n.top + i - l);
                var c = this.getViewportAdjustedDelta(e, n, u, l);
                c.left ? n.left += c.left : n.top += c.top;
                var p = /top|bottom/.test(e),
                    f = p ? 2 * c.left - o + u : 2 * c.top - i + l,
                    h = p ? "offsetWidth" : "offsetHeight";
                r.offset(n), this.replaceArrow(f, r[0][h], p)
            }, e.prototype.replaceArrow = function(t, n, e) {
                this.arrow().css(e ? "left" : "top", 50 * (1 - t / n) + "%").css(e ? "top" : "left", "")
            }, e.prototype.setContent = function() {
                var t = this.tip(),
                    n = this.getTitle();
                t.find(".tooltip-inner")[this.options.html ? "html" : "text"](n), t.removeClass("fade in top bottom left right")
            }, e.prototype.hide = function(n) {
                function r() {
                    "in" != o.hoverState && i.detach(), o.$element && o.$element.removeAttr("aria-describedby").trigger("hidden.bs." + o.type), n && n()
                }
                var o = this,
                    i = t(this.$tip),
                    a = t.Event("hide.bs." + this.type);
                if (this.$element.trigger(a), !a.isDefaultPrevented()) return i.removeClass("in"), t.support.transition && i.hasClass("fade") ? i.one("bsTransitionEnd", r).emulateTransitionEnd(e.TRANSITION_DURATION) : r(), this.hoverState = null, this
            }, e.prototype.fixTitle = function() {
                var t = this.$element;
                (t.attr("title") || "string" != typeof t.attr("data-original-title")) && t.attr("data-original-title", t.attr("title") || "").attr("title", "")
            }, e.prototype.hasContent = function() {
                return this.getTitle()
            }, e.prototype.getPosition = function(n) {
                n = n || this.$element;
                var e = n[0],
                    r = "BODY" == e.tagName,
                    o = e.getBoundingClientRect();
                null == o.width && (o = t.extend({}, o, {
                    width: o.right - o.left,
                    height: o.bottom - o.top
                }));
                var i = window.SVGElement && e instanceof window.SVGElement,
                    a = r ? {
                        top: 0,
                        left: 0
                    } : i ? null : n.offset(),
                    s = {
                        scroll: r ? document.documentElement.scrollTop || document.body.scrollTop : n.scrollTop()
                    },
                    u = r ? {
                        width: t(window).width(),
                        height: t(window).height()
                    } : null;
                return t.extend({}, o, s, u, a)
            }, e.prototype.getCalculatedOffset = function(t, n, e, r) {
                return "bottom" == t ? {
                    top: n.top + n.height,
                    left: n.left + n.width / 2 - e / 2
                } : "top" == t ? {
                    top: n.top - r,
                    left: n.left + n.width / 2 - e / 2
                } : "left" == t ? {
                    top: n.top + n.height / 2 - r / 2,
                    left: n.left - e
                } : {
                    top: n.top + n.height / 2 - r / 2,
                    left: n.left + n.width
                }
            }, e.prototype.getViewportAdjustedDelta = function(t, n, e, r) {
                var o = {
                    top: 0,
                    left: 0
                };
                if (!this.$viewport) return o;
                var i = this.options.viewport && this.options.viewport.padding || 0,
                    a = this.getPosition(this.$viewport);
                if (/right|left/.test(t)) {
                    var s = n.top - i - a.scroll,
                        u = n.top + i - a.scroll + r;
                    s < a.top ? o.top = a.top - s : u > a.top + a.height && (o.top = a.top + a.height - u)
                } else {
                    var l = n.left - i,
                        c = n.left + i + e;
                    l < a.left ? o.left = a.left - l : c > a.right && (o.left = a.left + a.width - c)
                }
                return o
            }, e.prototype.getTitle = function() {
                var t = this.$element,
                    n = this.options;
                return t.attr("data-original-title") || ("function" == typeof n.title ? n.title.call(t[0]) : n.title)
            }, e.prototype.getUID = function(t) {
                do {
                    t += ~~(1e6 * Math.random())
                } while (document.getElementById(t));
                return t
            }, e.prototype.tip = function() {
                if (!this.$tip && (this.$tip = t(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
                return this.$tip
            }, e.prototype.arrow = function() {
                return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
            }, e.prototype.enable = function() {
                this.enabled = !0
            }, e.prototype.disable = function() {
                this.enabled = !1
            }, e.prototype.toggleEnabled = function() {
                this.enabled = !this.enabled
            }, e.prototype.toggle = function(n) {
                var e = this;
                n && ((e = t(n.currentTarget).data("bs." + this.type)) || (e = new this.constructor(n.currentTarget, this.getDelegateOptions()), t(n.currentTarget).data("bs." + this.type, e))), n ? (e.inState.click = !e.inState.click, e.isInStateTrue() ? e.enter(e) : e.leave(e)) : e.tip().hasClass("in") ? e.leave(e) : e.enter(e)
            }, e.prototype.destroy = function() {
                var t = this;
                clearTimeout(this.timeout), this.hide(function() {
                    t.$element.off("." + t.type).removeData("bs." + t.type), t.$tip && t.$tip.detach(), t.$tip = null, t.$arrow = null, t.$viewport = null, t.$element = null
                })
            };
            var r = t.fn.tooltip;
            t.fn.tooltip = n, t.fn.tooltip.Constructor = e, t.fn.tooltip.noConflict = function() {
                return t.fn.tooltip = r, this
            }
        }(t)
    }).call(n, e(22))
}, function(t, n, e) {
    (function(t) {
        + function(t) {
            "use strict";

            function n() {
                var t = document.createElement("bootstrap"),
                    n = {
                        WebkitTransition: "webkitTransitionEnd",
                        MozTransition: "transitionend",
                        OTransition: "oTransitionEnd otransitionend",
                        transition: "transitionend"
                    };
                for (var e in n)
                    if (void 0 !== t.style[e]) return {
                        end: n[e]
                    };
                return !1
            }
            t.fn.emulateTransitionEnd = function(n) {
                var e = !1,
                    r = this;
                t(this).one("bsTransitionEnd", function() {
                    e = !0
                });
                var o = function() {
                    e || t(r).trigger(t.support.transition.end)
                };
                return setTimeout(o, n), this
            }, t(function() {
                t.support.transition = n(), t.support.transition && (t.event.special.bsTransitionEnd = {
                    bindType: t.support.transition.end,
                    delegateType: t.support.transition.end,
                    handle: function(n) {
                        if (t(n.target).is(this)) return n.handleObj.handler.apply(this, arguments)
                    }
                })
            })
        }(t)
    }).call(n, e(22))
}, , , , , function(t, n, e) {
    e(492), t.exports = e(50).RegExp.escape
}, , , , , , , , , , , , , , , , function(t, n, e) {
    var r = e(16),
        o = e(142),
        i = e(18)("species");
    t.exports = function(t) {
        var n;
        return o(t) && (n = t.constructor, "function" != typeof n || n !== Array && !o(n.prototype) || (n = void 0), r(n) && null === (n = n[i]) && (n = void 0)), void 0 === n ? Array : n
    }
}, function(t, n, e) {
    "use strict";
    var r = e(14),
        o = Date.prototype.getTime,
        i = Date.prototype.toISOString,
        a = function(t) {
            return t > 9 ? t : "0" + t
        };
    t.exports = r(function() {
        return "0385-07-25T07:06:39.999Z" != i.call(new Date(-5e13 - 1))
    }) || !r(function() {
        i.call(new Date(NaN))
    }) ? function() {
        if (!isFinite(o.call(this))) throw RangeError("Invalid time value");
        var t = this,
            n = t.getUTCFullYear(),
            e = t.getUTCMilliseconds(),
            r = n < 0 ? "-" : n > 9999 ? "+" : "";
        return r + ("00000" + Math.abs(n)).slice(r ? -6 : -4) + "-" + a(t.getUTCMonth() + 1) + "-" + a(t.getUTCDate()) + "T" + a(t.getUTCHours()) + ":" + a(t.getUTCMinutes()) + ":" + a(t.getUTCSeconds()) + "." + (e > 99 ? e : "0" + a(e)) + "Z"
    } : i
}, function(t, n, e) {
    "use strict";
    var r = e(7),
        o = e(54);
    t.exports = function(t) {
        if ("string" !== t && "number" !== t && "default" !== t) throw TypeError("Incorrect hint");
        return o(r(this), "number" != t)
    }
}, function(t, n, e) {
    var r = e(79),
        o = e(146),
        i = e(105);
    t.exports = function(t) {
        var n = r(t),
            e = o.f;
        if (e)
            for (var a, s = e(t), u = i.f, l = 0; s.length > l;) u.call(t, a = s[l++]) && n.push(a);
        return n
    }
}, function(t, n) {
    t.exports = function(t, n) {
        var e = n === Object(n) ? function(t) {
            return n[t]
        } : n;
        return function(n) {
            return String(n).replace(t, e)
        }
    }
}, function(t, n) {
    t.exports = Object.is || function(t, n) {
        return t === n ? 0 !== t || 1 / t == 1 / n : t != t && n != n
    }
}, function(t, n, e) {
    var r = e(0),
        o = e(490)(/[\\^$*+?.()|[\]{}]/g, "\\$&");
    r(r.S, "RegExp", {
        escape: function(t) {
            return o(t)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.P, "Array", {
        copyWithin: e(266)
    }), e(69)("copyWithin")
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(49)(4);
    r(r.P + r.F * !e(47)([].every, !0), "Array", {
        every: function(t) {
            return o(this, t, arguments[1])
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.P, "Array", {
        fill: e(202)
    }), e(69)("fill")
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(49)(2);
    r(r.P + r.F * !e(47)([].filter, !0), "Array", {
        filter: function(t) {
            return o(this, t, arguments[1])
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(49)(6),
        i = "findIndex",
        a = !0;
    i in [] && Array(1)[i](function() {
        a = !1
    }), r(r.P + r.F * a, "Array", {
        findIndex: function(t) {
            return o(this, t, arguments.length > 1 ? arguments[1] : void 0)
        }
    }), e(69)(i)
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(49)(5),
        i = !0;
    "find" in [] && Array(1).find(function() {
        i = !1
    }), r(r.P + r.F * i, "Array", {
        find: function(t) {
            return o(this, t, arguments.length > 1 ? arguments[1] : void 0)
        }
    }), e(69)("find")
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(49)(0),
        i = e(47)([].forEach, !0);
    r(r.P + r.F * !i, "Array", {
        forEach: function(t) {
            return o(this, t, arguments[1])
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(46),
        o = e(0),
        i = e(27),
        a = e(277),
        s = e(210),
        u = e(26),
        l = e(204),
        c = e(227);
    o(o.S + o.F * !e(144)(function(t) {
        Array.from(t)
    }), "Array", {
        from: function(t) {
            var n, e, o, p, f = i(t),
                h = "function" == typeof this ? this : Array,
                d = arguments.length,
                g = d > 1 ? arguments[1] : void 0,
                v = void 0 !== g,
                y = 0,
                m = c(f);
            if (v && (g = r(g, d > 2 ? arguments[2] : void 0, 2)), void 0 == m || h == Array && s(m))
                for (n = u(f.length), e = new h(n); n > y; y++) l(e, y, v ? g(f[y], y) : f[y]);
            else
                for (p = m.call(f), e = new h; !(o = p.next()).done; y++) l(e, y, v ? a(p, g, [o.value, y], !0) : o.value);
            return e.length = y, e
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(138)(!1),
        i = [].indexOf,
        a = !!i && 1 / [1].indexOf(1, -0) < 0;
    r(r.P + r.F * (a || !e(47)(i)), "Array", {
        indexOf: function(t) {
            return a ? i.apply(this, arguments) || 0 : o(this, t, arguments[1])
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Array", {
        isArray: e(142)
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(44),
        i = [].join;
    r(r.P + r.F * (e(104) != Object || !e(47)(i)), "Array", {
        join: function(t) {
            return i.call(o(this), void 0 === t ? "," : t)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(44),
        i = e(53),
        a = e(26),
        s = [].lastIndexOf,
        u = !!s && 1 / [1].lastIndexOf(1, -0) < 0;
    r(r.P + r.F * (u || !e(47)(s)), "Array", {
        lastIndexOf: function(t) {
            if (u) return s.apply(this, arguments) || 0;
            var n = o(this),
                e = a(n.length),
                r = e - 1;
            for (arguments.length > 1 && (r = Math.min(r, i(arguments[1]))), r < 0 && (r = e + r); r >= 0; r--)
                if (r in n && n[r] === t) return r || 0;
            return -1
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(49)(1);
    r(r.P + r.F * !e(47)([].map, !0), "Array", {
        map: function(t) {
            return o(this, t, arguments[1])
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(204);
    r(r.S + r.F * e(14)(function() {
        function t() {}
        return !(Array.of.call(t) instanceof t)
    }), "Array", { of: function() {
            for (var t = 0, n = arguments.length, e = new("function" == typeof this ? this : Array)(n); n > t;) o(e, t, arguments[t++]);
            return e.length = n, e
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(268);
    r(r.P + r.F * !e(47)([].reduceRight, !0), "Array", {
        reduceRight: function(t) {
            return o(this, t, arguments.length, arguments[1], !0)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(268);
    r(r.P + r.F * !e(47)([].reduce, !0), "Array", {
        reduce: function(t) {
            return o(this, t, arguments.length, arguments[1], !1)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(208),
        i = e(45),
        a = e(83),
        s = e(26),
        u = [].slice;
    r(r.P + r.F * e(14)(function() {
        o && u.call(o)
    }), "Array", {
        slice: function(t, n) {
            var e = s(this.length),
                r = i(this);
            if (n = void 0 === n ? e : n, "Array" == r) return u.call(this, t, n);
            for (var o = a(t, e), l = a(n, e), c = s(l - o), p = new Array(c), f = 0; f < c; f++) p[f] = "String" == r ? this.charAt(o + f) : this[o + f];
            return p
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(49)(3);
    r(r.P + r.F * !e(47)([].some, !0), "Array", {
        some: function(t) {
            return o(this, t, arguments[1])
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(33),
        i = e(27),
        a = e(14),
        s = [].sort,
        u = [1, 2, 3];
    r(r.P + r.F * (a(function() {
        u.sort(void 0)
    }) || !a(function() {
        u.sort(null)
    }) || !e(47)(s)), "Array", {
        sort: function(t) {
            return void 0 === t ? s.call(i(this)) : s.call(i(this), o(t))
        }
    })
}, function(t, n, e) {
    e(82)("Array")
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Date", {
        now: function() {
            return (new Date).getTime()
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(487);
    r(r.P + r.F * (Date.prototype.toISOString !== o), "Date", {
        toISOString: o
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(27),
        i = e(54);
    r(r.P + r.F * e(14)(function() {
        return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({
            toISOString: function() {
                return 1
            }
        })
    }), "Date", {
        toJSON: function(t) {
            var n = o(this),
                e = i(n);
            return "number" != typeof e || isFinite(e) ? n.toISOString() : null
        }
    })
}, function(t, n, e) {
    var r = e(18)("toPrimitive"),
        o = Date.prototype;
    r in o || e(39)(o, r, e(488))
}, function(t, n, e) {
    var r = Date.prototype,
        o = r.toString,
        i = r.getTime;
    new Date(NaN) + "" != "Invalid Date" && e(40)(r, "toString", function() {
        var t = i.call(this);
        return t === t ? o.call(this) : "Invalid Date"
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.P, "Function", {
        bind: e(269)
    })
}, function(t, n, e) {
    "use strict";
    var r = e(16),
        o = e(43),
        i = e(18)("hasInstance"),
        a = Function.prototype;
    i in a || e(25).f(a, i, {
        value: function(t) {
            if ("function" != typeof this || !r(t)) return !1;
            if (!r(this.prototype)) return t instanceof this;
            for (; t = o(t);)
                if (this.prototype === t) return !0;
            return !1
        }
    })
}, function(t, n, e) {
    var r = e(25).f,
        o = Function.prototype,
        i = /^\s*function ([^ (]*)/;
    "name" in o || e(24) && r(o, "name", {
        configurable: !0,
        get: function() {
            try {
                return ("" + this).match(i)[1]
            } catch (t) {
                return ""
            }
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(280),
        i = Math.sqrt,
        a = Math.acosh;
    r(r.S + r.F * !(a && 710 == Math.floor(a(Number.MAX_VALUE)) && a(1 / 0) == 1 / 0), "Math", {
        acosh: function(t) {
            return (t = +t) < 1 ? NaN : t > 94906265.62425156 ? Math.log(t) + Math.LN2 : o(t - 1 + i(t - 1) * i(t + 1))
        }
    })
}, function(t, n, e) {
    function r(t) {
        return isFinite(t = +t) && 0 != t ? t < 0 ? -r(-t) : Math.log(t + Math.sqrt(t * t + 1)) : t
    }
    var o = e(0),
        i = Math.asinh;
    o(o.S + o.F * !(i && 1 / i(0) > 0), "Math", {
        asinh: r
    })
}, function(t, n, e) {
    var r = e(0),
        o = Math.atanh;
    r(r.S + r.F * !(o && 1 / o(-0) < 0), "Math", {
        atanh: function(t) {
            return 0 == (t = +t) ? t : Math.log((1 + t) / (1 - t)) / 2
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(214);
    r(r.S, "Math", {
        cbrt: function(t) {
            return o(t = +t) * Math.pow(Math.abs(t), 1 / 3)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        clz32: function(t) {
            return (t >>>= 0) ? 31 - Math.floor(Math.log(t + .5) * Math.LOG2E) : 32
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = Math.exp;
    r(r.S, "Math", {
        cosh: function(t) {
            return (o(t = +t) + o(-t)) / 2
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(213);
    r(r.S + r.F * (o != Math.expm1), "Math", {
        expm1: o
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        fround: e(279)
    })
}, function(t, n, e) {
    var r = e(0),
        o = Math.abs;
    r(r.S, "Math", {
        hypot: function(t, n) {
            for (var e, r, i = 0, a = 0, s = arguments.length, u = 0; a < s;) e = o(arguments[a++]), u < e ? (r = u / e, i = i * r * r + 1, u = e) : e > 0 ? (r = e / u, i += r * r) : i += e;
            return u === 1 / 0 ? 1 / 0 : u * Math.sqrt(i)
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = Math.imul;
    r(r.S + r.F * e(14)(function() {
        return -5 != o(4294967295, 5) || 2 != o.length
    }), "Math", {
        imul: function(t, n) {
            var e = +t,
                r = +n,
                o = 65535 & e,
                i = 65535 & r;
            return 0 | o * i + ((65535 & e >>> 16) * i + o * (65535 & r >>> 16) << 16 >>> 0)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        log10: function(t) {
            return Math.log(t) * Math.LOG10E
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        log1p: e(280)
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        log2: function(t) {
            return Math.log(t) / Math.LN2
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        sign: e(214)
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(213),
        i = Math.exp;
    r(r.S + r.F * e(14)(function() {
        return -2e-17 != !Math.sinh(-2e-17)
    }), "Math", {
        sinh: function(t) {
            return Math.abs(t = +t) < 1 ? (o(t) - o(-t)) / 2 : (i(t - 1) - i(-t - 1)) * (Math.E / 2)
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(213),
        i = Math.exp;
    r(r.S, "Math", {
        tanh: function(t) {
            var n = o(t = +t),
                e = o(-t);
            return n == 1 / 0 ? 1 : e == 1 / 0 ? -1 : (n - e) / (i(t) + i(-t))
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        trunc: function(t) {
            return (t > 0 ? Math.floor : Math.ceil)(t)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(8),
        o = e(38),
        i = e(45),
        a = e(209),
        s = e(54),
        u = e(14),
        l = e(78).f,
        c = e(42).f,
        p = e(25).f,
        f = e(95).trim,
        h = r.Number,
        d = h,
        g = h.prototype,
        v = "Number" == i(e(77)(g)),
        y = "trim" in String.prototype,
        m = function(t) {
            var n = s(t, !1);
            if ("string" == typeof n && n.length > 2) {
                n = y ? n.trim() : f(n, 3);
                var e, r, o, i = n.charCodeAt(0);
                if (43 === i || 45 === i) {
                    if (88 === (e = n.charCodeAt(2)) || 120 === e) return NaN
                } else if (48 === i) {
                    switch (n.charCodeAt(1)) {
                        case 66:
                        case 98:
                            r = 2, o = 49;
                            break;
                        case 79:
                        case 111:
                            r = 8, o = 55;
                            break;
                        default:
                            return +n
                    }
                    for (var a, u = n.slice(2), l = 0, c = u.length; l < c; l++)
                        if ((a = u.charCodeAt(l)) < 48 || a > o) return NaN;
                    return parseInt(u, r)
                }
            }
            return +n
        };
    if (!h(" 0o1") || !h("0b1") || h("+0x1")) {
        h = function(t) {
            var n = arguments.length < 1 ? 0 : t,
                e = this;
            return e instanceof h && (v ? u(function() {
                g.valueOf.call(e)
            }) : "Number" != i(e)) ? a(new d(m(n)), e, h) : m(n)
        };
        for (var _, b = e(24) ? l(d) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), w = 0; b.length > w; w++) o(d, _ = b[w]) && !o(h, _) && p(h, _, c(d, _));
        h.prototype = g, g.constructor = h, e(40)(r, "Number", h)
    }
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Number", {
        EPSILON: Math.pow(2, -52)
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(8).isFinite;
    r(r.S, "Number", {
        isFinite: function(t) {
            return "number" == typeof t && o(t)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Number", {
        isInteger: e(276)
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Number", {
        isNaN: function(t) {
            return t != t
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(276),
        i = Math.abs;
    r(r.S, "Number", {
        isSafeInteger: function(t) {
            return o(t) && i(t) <= 9007199254740991
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Number", {
        MAX_SAFE_INTEGER: 9007199254740991
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Number", {
        MIN_SAFE_INTEGER: -9007199254740991
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(288);
    r(r.S + r.F * (Number.parseFloat != o), "Number", {
        parseFloat: o
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(289);
    r(r.S + r.F * (Number.parseInt != o), "Number", {
        parseInt: o
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(53),
        i = e(265),
        a = e(221),
        s = 1..toFixed,
        u = Math.floor,
        l = [0, 0, 0, 0, 0, 0],
        c = "Number.toFixed: incorrect invocation!",
        p = function(t, n) {
            for (var e = -1, r = n; ++e < 6;) r += t * l[e], l[e] = r % 1e7, r = u(r / 1e7)
        },
        f = function(t) {
            for (var n = 6, e = 0; --n >= 0;) e += l[n], l[n] = u(e / t), e = e % t * 1e7
        },
        h = function() {
            for (var t = 6, n = ""; --t >= 0;)
                if ("" !== n || 0 === t || 0 !== l[t]) {
                    var e = String(l[t]);
                    n = "" === n ? e : n + a.call("0", 7 - e.length) + e
                }
            return n
        },
        d = function(t, n, e) {
            return 0 === n ? e : n % 2 == 1 ? d(t, n - 1, e * t) : d(t * t, n / 2, e)
        },
        g = function(t) {
            for (var n = 0, e = t; e >= 4096;) n += 12, e /= 4096;
            for (; e >= 2;) n += 1, e /= 2;
            return n
        };
    r(r.P + r.F * (!!s && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== (0xde0b6b3a7640080).toFixed(0)) || !e(14)(function() {
        s.call({})
    })), "Number", {
        toFixed: function(t) {
            var n, e, r, s, u = i(this, c),
                l = o(t),
                v = "",
                y = "0";
            if (l < 0 || l > 20) throw RangeError(c);
            if (u != u) return "NaN";
            if (u <= -1e21 || u >= 1e21) return String(u);
            if (u < 0 && (v = "-", u = -u), u > 1e-21)
                if (n = g(u * d(2, 69, 1)) - 69, e = n < 0 ? u * d(2, -n, 1) : u / d(2, n, 1), e *= 4503599627370496, (n = 52 - n) > 0) {
                    for (p(0, e), r = l; r >= 7;) p(1e7, 0), r -= 7;
                    for (p(d(10, r, 1), 0), r = n - 1; r >= 23;) f(1 << 23), r -= 23;
                    f(1 << r), p(1, 1), f(2), y = h()
                } else p(0, e), p(1 << -n, 0), y = h() + a.call("0", l);
            return l > 0 ? (s = y.length, y = v + (s <= l ? "0." + a.call("0", l - s) + y : y.slice(0, s - l) + "." + y.slice(s - l))) : y = v + y, y
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(14),
        i = e(265),
        a = 1..toPrecision;
    r(r.P + r.F * (o(function() {
        return "1" !== a.call(1, void 0)
    }) || !o(function() {
        a.call({})
    })), "Number", {
        toPrecision: function(t) {
            var n = i(this, "Number#toPrecision: incorrect invocation!");
            return void 0 === t ? a.call(n) : a.call(n, t)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S + r.F, "Object", {
        assign: e(282)
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Object", {
        create: e(77)
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S + r.F * !e(24), "Object", {
        defineProperties: e(283)
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S + r.F * !e(24), "Object", {
        defineProperty: e(25).f
    })
}, function(t, n, e) {
    var r = e(16),
        o = e(70).onFreeze;
    e(52)("freeze", function(t) {
        return function(n) {
            return t && r(n) ? t(o(n)) : n
        }
    })
}, function(t, n, e) {
    var r = e(44),
        o = e(42).f;
    e(52)("getOwnPropertyDescriptor", function() {
        return function(t, n) {
            return o(r(t), n)
        }
    })
}, function(t, n, e) {
    e(52)("getOwnPropertyNames", function() {
        return e(284).f
    })
}, function(t, n, e) {
    var r = e(27),
        o = e(43);
    e(52)("getPrototypeOf", function() {
        return function(t) {
            return o(r(t))
        }
    })
}, function(t, n, e) {
    var r = e(16);
    e(52)("isExtensible", function(t) {
        return function(n) {
            return !!r(n) && (!t || t(n))
        }
    })
}, function(t, n, e) {
    var r = e(16);
    e(52)("isFrozen", function(t) {
        return function(n) {
            return !r(n) || !!t && t(n)
        }
    })
}, function(t, n, e) {
    var r = e(16);
    e(52)("isSealed", function(t) {
        return function(n) {
            return !r(n) || !!t && t(n)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Object", {
        is: e(491)
    })
}, function(t, n, e) {
    var r = e(27),
        o = e(79);
    e(52)("keys", function() {
        return function(t) {
            return o(r(t))
        }
    })
}, function(t, n, e) {
    var r = e(16),
        o = e(70).onFreeze;
    e(52)("preventExtensions", function(t) {
        return function(n) {
            return t && r(n) ? t(o(n)) : n
        }
    })
}, function(t, n, e) {
    var r = e(16),
        o = e(70).onFreeze;
    e(52)("seal", function(t) {
        return function(n) {
            return t && r(n) ? t(o(n)) : n
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Object", {
        setPrototypeOf: e(217).set
    })
}, function(t, n, e) {
    "use strict";
    var r = e(103),
        o = {};
    o[e(18)("toStringTag")] = "z", o + "" != "[object z]" && e(40)(Object.prototype, "toString", function() {
        return "[object " + r(this) + "]"
    }, !0)
}, function(t, n, e) {
    var r = e(0),
        o = e(288);
    r(r.G + r.F * (parseFloat != o), {
        parseFloat: o
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(289);
    r(r.G + r.F * (parseInt != o), {
        parseInt: o
    })
}, function(t, n, e) {
    "use strict";
    var r, o, i, a, s = e(76),
        u = e(8),
        l = e(46),
        c = e(103),
        p = e(0),
        f = e(16),
        h = e(33),
        d = e(74),
        g = e(75),
        v = e(150),
        y = e(223).set,
        m = e(215)(),
        _ = e(216),
        b = e(290),
        w = e(291),
        x = u.TypeError,
        T = u.process,
        S = u.Promise,
        M = "process" == c(T),
        k = function() {},
        C = o = _.f,
        A = !! function() {
            try {
                var t = S.resolve(1),
                    n = (t.constructor = {})[e(18)("species")] = function(t) {
                        t(k, k)
                    };
                return (M || "function" == typeof PromiseRejectionEvent) && t.then(k) instanceof n
            } catch (t) {}
        }(),
        P = function(t) {
            var n;
            return !(!f(t) || "function" != typeof(n = t.then)) && n
        },
        E = function(t, n) {
            if (!t._n) {
                t._n = !0;
                var e = t._c;
                m(function() {
                    for (var r = t._v, o = 1 == t._s, i = 0; e.length > i;) ! function(n) {
                        var e, i, a = o ? n.ok : n.fail,
                            s = n.resolve,
                            u = n.reject,
                            l = n.domain;
                        try {
                            a ? (o || (2 == t._h && $(t), t._h = 1), !0 === a ? e = r : (l && l.enter(), e = a(r), l && l.exit()), e === n.promise ? u(x("Promise-chain cycle")) : (i = P(e)) ? i.call(e, s, u) : s(e)) : u(r)
                        } catch (t) {
                            u(t)
                        }
                    }(e[i++]);
                    t._c = [], t._n = !1, n && !t._h && N(t)
                })
            }
        },
        N = function(t) {
            y.call(u, function() {
                var n, e, r, o = t._v,
                    i = O(t);
                if (i && (n = b(function() {
                        M ? T.emit("unhandledRejection", o, t) : (e = u.onunhandledrejection) ? e({
                            promise: t,
                            reason: o
                        }) : (r = u.console) && r.error && r.error("Unhandled promise rejection", o)
                    }), t._h = M || O(t) ? 2 : 1), t._a = void 0, i && n.e) throw n.v
            })
        },
        O = function(t) {
            return 1 !== t._h && 0 === (t._a || t._c).length
        },
        $ = function(t) {
            y.call(u, function() {
                var n;
                M ? T.emit("rejectionHandled", t) : (n = u.onrejectionhandled) && n({
                    promise: t,
                    reason: t._v
                })
            })
        },
        L = function(t) {
            var n = this;
            n._d || (n._d = !0, n = n._w || n, n._v = t, n._s = 2, n._a || (n._a = n._c.slice()), E(n, !0))
        },
        I = function(t) {
            var n, e = this;
            if (!e._d) {
                e._d = !0, e = e._w || e;
                try {
                    if (e === t) throw x("Promise can't be resolved itself");
                    (n = P(t)) ? m(function() {
                        var r = {
                            _w: e,
                            _d: !1
                        };
                        try {
                            n.call(t, l(I, r, 1), l(L, r, 1))
                        } catch (t) {
                            L.call(r, t)
                        }
                    }): (e._v = t, e._s = 1, E(e, !1))
                } catch (t) {
                    L.call({
                        _w: e,
                        _d: !1
                    }, t)
                }
            }
        };
    A || (S = function(t) {
        d(this, S, "Promise", "_h"), h(t), r.call(this);
        try {
            t(l(I, this, 1), l(L, this, 1))
        } catch (t) {
            L.call(this, t)
        }
    }, r = function(t) {
        this._c = [], this._a = void 0, this._s = 0, this._d = !1, this._v = void 0, this._h = 0, this._n = !1
    }, r.prototype = e(81)(S.prototype, {
        then: function(t, n) {
            var e = C(v(this, S));
            return e.ok = "function" != typeof t || t, e.fail = "function" == typeof n && n, e.domain = M ? T.domain : void 0, this._c.push(e), this._a && this._a.push(e), this._s && E(this, !1), e.promise
        },
        catch: function(t) {
            return this.then(void 0, t)
        }
    }), i = function() {
        var t = new r;
        this.promise = t, this.resolve = l(I, t, 1), this.reject = l(L, t, 1)
    }, _.f = C = function(t) {
        return t === S || t === a ? new i(t) : o(t)
    }), p(p.G + p.W + p.F * !A, {
        Promise: S
    }), e(94)(S, "Promise"), e(82)("Promise"), a = e(50).Promise, p(p.S + p.F * !A, "Promise", {
        reject: function(t) {
            var n = C(this);
            return (0, n.reject)(t), n.promise
        }
    }), p(p.S + p.F * (s || !A), "Promise", {
        resolve: function(t) {
            return w(s && this === a ? S : this, t)
        }
    }), p(p.S + p.F * !(A && e(144)(function(t) {
        S.all(t).catch(k)
    })), "Promise", {
        all: function(t) {
            var n = this,
                e = C(n),
                r = e.resolve,
                o = e.reject,
                i = b(function() {
                    var e = [],
                        i = 0,
                        a = 1;
                    g(t, !1, function(t) {
                        var s = i++,
                            u = !1;
                        e.push(void 0), a++, n.resolve(t).then(function(t) {
                            u || (u = !0, e[s] = t, --a || r(e))
                        }, o)
                    }), --a || r(e)
                });
            return i.e && o(i.v), e.promise
        },
        race: function(t) {
            var n = this,
                e = C(n),
                r = e.reject,
                o = b(function() {
                    g(t, !1, function(t) {
                        n.resolve(t).then(e.resolve, r)
                    })
                });
            return o.e && r(o.v), e.promise
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(33),
        i = e(7),
        a = (e(8).Reflect || {}).apply,
        s = Function.apply;
    r(r.S + r.F * !e(14)(function() {
        a(function() {})
    }), "Reflect", {
        apply: function(t, n, e) {
            var r = o(t),
                u = i(e);
            return a ? a(r, n, u) : s.call(r, n, u)
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(77),
        i = e(33),
        a = e(7),
        s = e(16),
        u = e(14),
        l = e(269),
        c = (e(8).Reflect || {}).construct,
        p = u(function() {
            function t() {}
            return !(c(function() {}, [], t) instanceof t)
        }),
        f = !u(function() {
            c(function() {})
        });
    r(r.S + r.F * (p || f), "Reflect", {
        construct: function(t, n) {
            i(t), a(n);
            var e = arguments.length < 3 ? t : i(arguments[2]);
            if (f && !p) return c(t, n, e);
            if (t == e) {
                switch (n.length) {
                    case 0:
                        return new t;
                    case 1:
                        return new t(n[0]);
                    case 2:
                        return new t(n[0], n[1]);
                    case 3:
                        return new t(n[0], n[1], n[2]);
                    case 4:
                        return new t(n[0], n[1], n[2], n[3])
                }
                var r = [null];
                return r.push.apply(r, n), new(l.apply(t, r))
            }
            var u = e.prototype,
                h = o(s(u) ? u : Object.prototype),
                d = Function.apply.call(t, h, n);
            return s(d) ? d : h
        }
    })
}, function(t, n, e) {
    var r = e(25),
        o = e(0),
        i = e(7),
        a = e(54);
    o(o.S + o.F * e(14)(function() {
        Reflect.defineProperty(r.f({}, 1, {
            value: 1
        }), 1, {
            value: 2
        })
    }), "Reflect", {
        defineProperty: function(t, n, e) {
            i(t), n = a(n, !0), i(e);
            try {
                return r.f(t, n, e), !0
            } catch (t) {
                return !1
            }
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(42).f,
        i = e(7);
    r(r.S, "Reflect", {
        deleteProperty: function(t, n) {
            var e = o(i(t), n);
            return !(e && !e.configurable) && delete t[n]
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(7),
        i = function(t) {
            this._t = o(t), this._i = 0;
            var n, e = this._k = [];
            for (n in t) e.push(n)
        };
    e(211)(i, "Object", function() {
        var t, n = this,
            e = n._k;
        do {
            if (n._i >= e.length) return {
                value: void 0,
                done: !0
            }
        } while (!((t = e[n._i++]) in n._t));
        return {
            value: t,
            done: !1
        }
    }), r(r.S, "Reflect", {
        enumerate: function(t) {
            return new i(t)
        }
    })
}, function(t, n, e) {
    var r = e(42),
        o = e(0),
        i = e(7);
    o(o.S, "Reflect", {
        getOwnPropertyDescriptor: function(t, n) {
            return r.f(i(t), n)
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(43),
        i = e(7);
    r(r.S, "Reflect", {
        getPrototypeOf: function(t) {
            return o(i(t))
        }
    })
}, function(t, n, e) {
    function r(t, n) {
        var e, s, c = arguments.length < 3 ? t : arguments[2];
        return l(t) === c ? t[n] : (e = o.f(t, n)) ? a(e, "value") ? e.value : void 0 !== e.get ? e.get.call(c) : void 0 : u(s = i(t)) ? r(s, n, c) : void 0
    }
    var o = e(42),
        i = e(43),
        a = e(38),
        s = e(0),
        u = e(16),
        l = e(7);
    s(s.S, "Reflect", {
        get: r
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Reflect", {
        has: function(t, n) {
            return n in t
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(7),
        i = Object.isExtensible;
    r(r.S, "Reflect", {
        isExtensible: function(t) {
            return o(t), !i || i(t)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Reflect", {
        ownKeys: e(287)
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(7),
        i = Object.preventExtensions;
    r(r.S, "Reflect", {
        preventExtensions: function(t) {
            o(t);
            try {
                return i && i(t), !0
            } catch (t) {
                return !1
            }
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(217);
    o && r(r.S, "Reflect", {
        setPrototypeOf: function(t, n) {
            o.check(t, n);
            try {
                return o.set(t, n), !0
            } catch (t) {
                return !1
            }
        }
    })
}, function(t, n, e) {
    function r(t, n, e) {
        var u, f, h = arguments.length < 4 ? t : arguments[3],
            d = i.f(c(t), n);
        if (!d) {
            if (p(f = a(t))) return r(f, n, e, h);
            d = l(0)
        }
        return s(d, "value") ? !(!1 === d.writable || !p(h)) && (u = i.f(h, n) || l(0), u.value = e, o.f(h, n, u), !0) : void 0 !== d.set && (d.set.call(h, e), !0)
    }
    var o = e(25),
        i = e(42),
        a = e(43),
        s = e(38),
        u = e(0),
        l = e(80),
        c = e(7),
        p = e(16);
    u(u.S, "Reflect", {
        set: r
    })
}, function(t, n, e) {
    var r = e(8),
        o = e(209),
        i = e(25).f,
        a = e(78).f,
        s = e(143),
        u = e(141),
        l = r.RegExp,
        c = l,
        p = l.prototype,
        f = /a/g,
        h = /a/g,
        d = new l(f) !== f;
    if (e(24) && (!d || e(14)(function() {
            return h[e(18)("match")] = !1, l(f) != f || l(h) == h || "/a/i" != l(f, "i")
        }))) {
        l = function(t, n) {
            var e = this instanceof l,
                r = s(t),
                i = void 0 === n;
            return !e && r && t.constructor === l && i ? t : o(d ? new c(r && !i ? t.source : t, n) : c((r = t instanceof l) ? t.source : t, r && i ? u.call(t) : n), e ? this : p, l)
        };
        for (var g = a(c), v = 0; g.length > v;) ! function(t) {
            t in l || i(l, t, {
                configurable: !0,
                get: function() {
                    return c[t]
                },
                set: function(n) {
                    c[t] = n
                }
            })
        }(g[v++]);
        p.constructor = l, l.prototype = p, e(40)(r, "RegExp", l)
    }
    e(82)("RegExp")
}, function(t, n, e) {
    e(140)("match", 1, function(t, n, e) {
        return [function(e) {
            "use strict";
            var r = t(this),
                o = void 0 == e ? void 0 : e[n];
            return void 0 !== o ? o.call(e, r) : new RegExp(e)[n](String(r))
        }, e]
    })
}, function(t, n, e) {
    e(140)("replace", 2, function(t, n, e) {
        return [function(r, o) {
            "use strict";
            var i = t(this),
                a = void 0 == r ? void 0 : r[n];
            return void 0 !== a ? a.call(r, i, o) : e.call(String(i), r, o)
        }, e]
    })
}, function(t, n, e) {
    e(140)("search", 1, function(t, n, e) {
        return [function(e) {
            "use strict";
            var r = t(this),
                o = void 0 == e ? void 0 : e[n];
            return void 0 !== o ? o.call(e, r) : new RegExp(e)[n](String(r))
        }, e]
    })
}, function(t, n, e) {
    e(140)("split", 2, function(t, n, r) {
        "use strict";
        var o = e(143),
            i = r,
            a = [].push,
            s = "length";
        if ("c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1)[s] || 2 != "ab".split(/(?:ab)*/)[s] || 4 != ".".split(/(.?)(.?)/)[s] || ".".split(/()()/)[s] > 1 || "".split(/.?/)[s]) {
            var u = void 0 === /()??/.exec("")[1];
            r = function(t, n) {
                var e = String(this);
                if (void 0 === t && 0 === n) return [];
                if (!o(t)) return i.call(e, t, n);
                var r, l, c, p, f, h = [],
                    d = (t.ignoreCase ? "i" : "") + (t.multiline ? "m" : "") + (t.unicode ? "u" : "") + (t.sticky ? "y" : ""),
                    g = 0,
                    v = void 0 === n ? 4294967295 : n >>> 0,
                    y = new RegExp(t.source, d + "g");
                for (u || (r = new RegExp("^" + y.source + "$(?!\\s)", d));
                    (l = y.exec(e)) && !((c = l.index + l[0][s]) > g && (h.push(e.slice(g, l.index)), !u && l[s] > 1 && l[0].replace(r, function() {
                        for (f = 1; f < arguments[s] - 2; f++) void 0 === arguments[f] && (l[f] = void 0)
                    }), l[s] > 1 && l.index < e[s] && a.apply(h, l.slice(1)), p = l[0][s], g = c, h[s] >= v));) y.lastIndex === l.index && y.lastIndex++;
                return g === e[s] ? !p && y.test("") || h.push("") : h.push(e.slice(g)), h[s] > v ? h.slice(0, v) : h
            }
        } else "0".split(void 0, 0)[s] && (r = function(t, n) {
            return void 0 === t && 0 === n ? [] : i.call(this, t, n)
        });
        return [function(e, o) {
            var i = t(this),
                a = void 0 == e ? void 0 : e[n];
            return void 0 !== a ? a.call(e, i, o) : r.call(String(i), e, o)
        }, r]
    })
}, function(t, n, e) {
    "use strict";
    e(296);
    var r = e(7),
        o = e(141),
        i = e(24),
        a = /./.toString,
        s = function(t) {
            e(40)(RegExp.prototype, "toString", t, !0)
        };
    e(14)(function() {
        return "/a/b" != a.call({
            source: "a",
            flags: "b"
        })
    }) ? s(function() {
        var t = r(this);
        return "/".concat(t.source, "/", "flags" in t ? t.flags : !i && t instanceof RegExp ? o.call(t) : void 0)
    }) : "toString" != a.name && s(function() {
        return a.call(this)
    })
}, function(t, n, e) {
    "use strict";
    e(41)("anchor", function(t) {
        return function(n) {
            return t(this, "a", "name", n)
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("big", function(t) {
        return function() {
            return t(this, "big", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("blink", function(t) {
        return function() {
            return t(this, "blink", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("bold", function(t) {
        return function() {
            return t(this, "b", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(219)(!1);
    r(r.P, "String", {
        codePointAt: function(t) {
            return o(this, t)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(26),
        i = e(220),
        a = "".endsWith;
    r(r.P + r.F * e(207)("endsWith"), "String", {
        endsWith: function(t) {
            var n = i(this, t, "endsWith"),
                e = arguments.length > 1 ? arguments[1] : void 0,
                r = o(n.length),
                s = void 0 === e ? r : Math.min(o(e), r),
                u = String(t);
            return a ? a.call(n, u, s) : n.slice(s - u.length, s) === u
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("fixed", function(t) {
        return function() {
            return t(this, "tt", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("fontcolor", function(t) {
        return function(n) {
            return t(this, "font", "color", n)
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("fontsize", function(t) {
        return function(n) {
            return t(this, "font", "size", n)
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(83),
        i = String.fromCharCode,
        a = String.fromCodePoint;
    r(r.S + r.F * (!!a && 1 != a.length), "String", {
        fromCodePoint: function(t) {
            for (var n, e = [], r = arguments.length, a = 0; r > a;) {
                if (n = +arguments[a++], o(n, 1114111) !== n) throw RangeError(n + " is not a valid code point");
                e.push(n < 65536 ? i(n) : i(55296 + ((n -= 65536) >> 10), n % 1024 + 56320))
            }
            return e.join("")
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(220);
    r(r.P + r.F * e(207)("includes"), "String", {
        includes: function(t) {
            return !!~o(this, t, "includes").indexOf(t, arguments.length > 1 ? arguments[1] : void 0)
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("italics", function(t) {
        return function() {
            return t(this, "i", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(219)(!0);
    e(212)(String, "String", function(t) {
        this._t = String(t), this._i = 0
    }, function() {
        var t, n = this._t,
            e = this._i;
        return e >= n.length ? {
            value: void 0,
            done: !0
        } : (t = r(n, e), this._i += t.length, {
            value: t,
            done: !1
        })
    })
}, function(t, n, e) {
    "use strict";
    e(41)("link", function(t) {
        return function(n) {
            return t(this, "a", "href", n)
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(44),
        i = e(26);
    r(r.S, "String", {
        raw: function(t) {
            for (var n = o(t.raw), e = i(n.length), r = arguments.length, a = [], s = 0; e > s;) a.push(String(n[s++])), s < r && a.push(String(arguments[s]));
            return a.join("")
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.P, "String", {
        repeat: e(221)
    })
}, function(t, n, e) {
    "use strict";
    e(41)("small", function(t) {
        return function() {
            return t(this, "small", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(26),
        i = e(220),
        a = "".startsWith;
    r(r.P + r.F * e(207)("startsWith"), "String", {
        startsWith: function(t) {
            var n = i(this, t, "startsWith"),
                e = o(Math.min(arguments.length > 1 ? arguments[1] : void 0, n.length)),
                r = String(t);
            return a ? a.call(n, r, e) : n.slice(e, e + r.length) === r
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("strike", function(t) {
        return function() {
            return t(this, "strike", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("sub", function(t) {
        return function() {
            return t(this, "sub", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    e(41)("sup", function(t) {
        return function() {
            return t(this, "sup", "", "")
        }
    })
}, function(t, n, e) {
    "use strict";
    e(95)("trim", function(t) {
        return function() {
            return t(this, 3)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(8),
        o = e(38),
        i = e(24),
        a = e(0),
        s = e(40),
        u = e(70).KEY,
        l = e(14),
        c = e(149),
        p = e(94),
        f = e(84),
        h = e(18),
        d = e(294),
        g = e(226),
        v = e(489),
        y = e(142),
        m = e(7),
        _ = e(16),
        b = e(44),
        w = e(54),
        x = e(80),
        T = e(77),
        S = e(284),
        M = e(42),
        k = e(25),
        C = e(79),
        A = M.f,
        P = k.f,
        E = S.f,
        N = r.Symbol,
        O = r.JSON,
        $ = O && O.stringify,
        L = h("_hidden"),
        I = h("toPrimitive"),
        R = {}.propertyIsEnumerable,
        D = c("symbol-registry"),
        F = c("symbols"),
        j = c("op-symbols"),
        U = Object.prototype,
        z = "function" == typeof N,
        H = r.QObject,
        B = !H || !H.prototype || !H.prototype.findChild,
        W = i && l(function() {
            return 7 != T(P({}, "a", {
                get: function() {
                    return P(this, "a", {
                        value: 7
                    }).a
                }
            })).a
        }) ? function(t, n, e) {
            var r = A(U, n);
            r && delete U[n], P(t, n, e), r && t !== U && P(U, n, r)
        } : P,
        G = function(t) {
            var n = F[t] = T(N.prototype);
            return n._k = t, n
        },
        q = z && "symbol" == typeof N.iterator ? function(t) {
            return "symbol" == typeof t
        } : function(t) {
            return t instanceof N
        },
        Y = function(t, n, e) {
            return t === U && Y(j, n, e), m(t), n = w(n, !0), m(e), o(F, n) ? (e.enumerable ? (o(t, L) && t[L][n] && (t[L][n] = !1), e = T(e, {
                enumerable: x(0, !1)
            })) : (o(t, L) || P(t, L, x(1, {})), t[L][n] = !0), W(t, n, e)) : P(t, n, e)
        },
        V = function(t, n) {
            m(t);
            for (var e, r = v(n = b(n)), o = 0, i = r.length; i > o;) Y(t, e = r[o++], n[e]);
            return t
        },
        K = function(t, n) {
            return void 0 === n ? T(t) : V(T(t), n)
        },
        Z = function(t) {
            var n = R.call(this, t = w(t, !0));
            return !(this === U && o(F, t) && !o(j, t)) && (!(n || !o(this, t) || !o(F, t) || o(this, L) && this[L][t]) || n)
        },
        X = function(t, n) {
            if (t = b(t), n = w(n, !0), t !== U || !o(F, n) || o(j, n)) {
                var e = A(t, n);
                return !e || !o(F, n) || o(t, L) && t[L][n] || (e.enumerable = !0), e
            }
        },
        J = function(t) {
            for (var n, e = E(b(t)), r = [], i = 0; e.length > i;) o(F, n = e[i++]) || n == L || n == u || r.push(n);
            return r
        },
        Q = function(t) {
            for (var n, e = t === U, r = E(e ? j : b(t)), i = [], a = 0; r.length > a;) !o(F, n = r[a++]) || e && !o(U, n) || i.push(F[n]);
            return i
        };
    z || (N = function() {
        if (this instanceof N) throw TypeError("Symbol is not a constructor!");
        var t = f(arguments.length > 0 ? arguments[0] : void 0),
            n = function(e) {
                this === U && n.call(j, e), o(this, L) && o(this[L], t) && (this[L][t] = !1), W(this, t, x(1, e))
            };
        return i && B && W(U, t, {
            configurable: !0,
            set: n
        }), G(t)
    }, s(N.prototype, "toString", function() {
        return this._k
    }), M.f = X, k.f = Y, e(78).f = S.f = J, e(105).f = Z, e(146).f = Q, i && !e(76) && s(U, "propertyIsEnumerable", Z, !0), d.f = function(t) {
        return G(h(t))
    }), a(a.G + a.W + a.F * !z, {
        Symbol: N
    });
    for (var tt = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), nt = 0; tt.length > nt;) h(tt[nt++]);
    for (var et = C(h.store), rt = 0; et.length > rt;) g(et[rt++]);
    a(a.S + a.F * !z, "Symbol", {
        for: function(t) {
            return o(D, t += "") ? D[t] : D[t] = N(t)
        },
        keyFor: function(t) {
            if (!q(t)) throw TypeError(t + " is not a symbol!");
            for (var n in D)
                if (D[n] === t) return n
        },
        useSetter: function() {
            B = !0
        },
        useSimple: function() {
            B = !1
        }
    }), a(a.S + a.F * !z, "Object", {
        create: K,
        defineProperty: Y,
        defineProperties: V,
        getOwnPropertyDescriptor: X,
        getOwnPropertyNames: J,
        getOwnPropertySymbols: Q
    }), O && a(a.S + a.F * (!z || l(function() {
        var t = N();
        return "[null]" != $([t]) || "{}" != $({
            a: t
        }) || "{}" != $(Object(t))
    })), "JSON", {
        stringify: function(t) {
            for (var n, e, r = [t], o = 1; arguments.length > o;) r.push(arguments[o++]);
            if (e = n = r[1], (_(n) || void 0 !== t) && !q(t)) return y(n) || (n = function(t, n) {
                if ("function" == typeof e && (n = e.call(this, t, n)), !q(n)) return n
            }), r[1] = n, $.apply(O, r)
        }
    }), N.prototype[I] || e(39)(N.prototype, I, N.prototype.valueOf), p(N, "Symbol"), p(Math, "Math", !0), p(r.JSON, "JSON", !0)
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(151),
        i = e(224),
        a = e(7),
        s = e(83),
        u = e(26),
        l = e(16),
        c = e(8).ArrayBuffer,
        p = e(150),
        f = i.ArrayBuffer,
        h = i.DataView,
        d = o.ABV && c.isView,
        g = f.prototype.slice,
        v = o.VIEW;
    r(r.G + r.W + r.F * (c !== f), {
        ArrayBuffer: f
    }), r(r.S + r.F * !o.CONSTR, "ArrayBuffer", {
        isView: function(t) {
            return d && d(t) || l(t) && v in t
        }
    }), r(r.P + r.U + r.F * e(14)(function() {
        return !new f(2).slice(1, void 0).byteLength
    }), "ArrayBuffer", {
        slice: function(t, n) {
            if (void 0 !== g && void 0 === n) return g.call(a(this), t);
            for (var e = a(this).byteLength, r = s(t, e), o = s(void 0 === n ? e : n, e), i = new(p(this, f))(u(o - r)), l = new h(this), c = new h(i), d = 0; r < o;) c.setUint8(d++, l.getUint8(r++));
            return i
        }
    }), e(82)("ArrayBuffer")
}, function(t, n, e) {
    var r = e(0);
    r(r.G + r.W + r.F * !e(151).ABV, {
        DataView: e(224).DataView
    })
}, function(t, n, e) {
    e(64)("Float32", 4, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    })
}, function(t, n, e) {
    e(64)("Float64", 8, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    })
}, function(t, n, e) {
    e(64)("Int16", 2, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    })
}, function(t, n, e) {
    e(64)("Int32", 4, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    })
}, function(t, n, e) {
    e(64)("Int8", 1, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    })
}, function(t, n, e) {
    e(64)("Uint16", 2, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    })
}, function(t, n, e) {
    e(64)("Uint32", 4, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    })
}, function(t, n, e) {
    e(64)("Uint8", 1, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    })
}, function(t, n, e) {
    e(64)("Uint8", 1, function(t) {
        return function(n, e, r) {
            return t(this, n, e, r)
        }
    }, !0)
}, function(t, n, e) {
    "use strict";
    var r = e(272),
        o = e(96);
    e(139)("WeakSet", function(t) {
        return function() {
            return t(this, arguments.length > 0 ? arguments[0] : void 0)
        }
    }, {
        add: function(t) {
            return r.def(o(this, "WeakSet"), t, !0)
        }
    }, r, !1, !0)
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(273),
        i = e(27),
        a = e(26),
        s = e(33),
        u = e(203);
    r(r.P, "Array", {
        flatMap: function(t) {
            var n, e, r = i(this);
            return s(t), n = a(r.length), e = u(r, 0), o(e, r, r, n, 0, 1, t, arguments[1]), e
        }
    }), e(69)("flatMap")
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(273),
        i = e(27),
        a = e(26),
        s = e(53),
        u = e(203);
    r(r.P, "Array", {
        flatten: function() {
            var t = arguments[0],
                n = i(this),
                e = a(n.length),
                r = u(n, 0);
            return o(r, n, n, e, 0, void 0 === t ? 1 : s(t)), r
        }
    }), e(69)("flatten")
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(138)(!0);
    r(r.P, "Array", {
        includes: function(t) {
            return o(this, t, arguments.length > 1 ? arguments[1] : void 0)
        }
    }), e(69)("includes")
}, function(t, n, e) {
    var r = e(0),
        o = e(215)(),
        i = e(8).process,
        a = "process" == e(45)(i);
    r(r.G, {
        asap: function(t) {
            var n = a && i.domain;
            o(n ? n.bind(t) : t)
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(45);
    r(r.S, "Error", {
        isError: function(t) {
            return "Error" === o(t)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.G, {
        global: e(8)
    })
}, function(t, n, e) {
    e(147)("Map")
}, function(t, n, e) {
    e(148)("Map")
}, function(t, n, e) {
    var r = e(0);
    r(r.P + r.R, "Map", {
        toJSON: e(271)("Map")
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        clamp: function(t, n, e) {
            return Math.min(e, Math.max(n, t))
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        DEG_PER_RAD: Math.PI / 180
    })
}, function(t, n, e) {
    var r = e(0),
        o = 180 / Math.PI;
    r(r.S, "Math", {
        degrees: function(t) {
            return t * o
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(281),
        i = e(279);
    r(r.S, "Math", {
        fscale: function(t, n, e, r, a) {
            return i(o(t, n, e, r, a))
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        iaddh: function(t, n, e, r) {
            var o = t >>> 0,
                i = n >>> 0,
                a = e >>> 0;
            return i + (r >>> 0) + ((o & a | (o | a) & ~(o + a >>> 0)) >>> 31) | 0
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        imulh: function(t, n) {
            var e = +t,
                r = +n,
                o = 65535 & e,
                i = 65535 & r,
                a = e >> 16,
                s = r >> 16,
                u = (a * i >>> 0) + (o * i >>> 16);
            return a * s + (u >> 16) + ((o * s >>> 0) + (65535 & u) >> 16)
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        isubh: function(t, n, e, r) {
            var o = t >>> 0,
                i = n >>> 0,
                a = e >>> 0;
            return i - (r >>> 0) - ((~o & a | ~(o ^ a) & o - a >>> 0) >>> 31) | 0
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        RAD_PER_DEG: 180 / Math.PI
    })
}, function(t, n, e) {
    var r = e(0),
        o = Math.PI / 180;
    r(r.S, "Math", {
        radians: function(t) {
            return t * o
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        scale: e(281)
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        signbit: function(t) {
            return (t = +t) != t ? t : 0 == t ? 1 / t == 1 / 0 : t > 0
        }
    })
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "Math", {
        umulh: function(t, n) {
            var e = +t,
                r = +n,
                o = 65535 & e,
                i = 65535 & r,
                a = e >>> 16,
                s = r >>> 16,
                u = (a * i >>> 0) + (o * i >>> 16);
            return a * s + (u >>> 16) + ((o * s >>> 0) + (65535 & u) >>> 16)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(27),
        i = e(33),
        a = e(25);
    e(24) && r(r.P + e(145), "Object", {
        __defineGetter__: function(t, n) {
            a.f(o(this), t, {
                get: i(n),
                enumerable: !0,
                configurable: !0
            })
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(27),
        i = e(33),
        a = e(25);
    e(24) && r(r.P + e(145), "Object", {
        __defineSetter__: function(t, n) {
            a.f(o(this), t, {
                set: i(n),
                enumerable: !0,
                configurable: !0
            })
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(286)(!0);
    r(r.S, "Object", {
        entries: function(t) {
            return o(t)
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(287),
        i = e(44),
        a = e(42),
        s = e(204);
    r(r.S, "Object", {
        getOwnPropertyDescriptors: function(t) {
            for (var n, e, r = i(t), u = a.f, l = o(r), c = {}, p = 0; l.length > p;) void 0 !== (e = u(r, n = l[p++])) && s(c, n, e);
            return c
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(27),
        i = e(54),
        a = e(43),
        s = e(42).f;
    e(24) && r(r.P + e(145), "Object", {
        __lookupGetter__: function(t) {
            var n, e = o(this),
                r = i(t, !0);
            do {
                if (n = s(e, r)) return n.get
            } while (e = a(e))
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(27),
        i = e(54),
        a = e(43),
        s = e(42).f;
    e(24) && r(r.P + e(145), "Object", {
        __lookupSetter__: function(t) {
            var n, e = o(this),
                r = i(t, !0);
            do {
                if (n = s(e, r)) return n.set
            } while (e = a(e))
        }
    })
}, function(t, n, e) {
    var r = e(0),
        o = e(286)(!1);
    r(r.S, "Object", {
        values: function(t) {
            return o(t)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(8),
        i = e(50),
        a = e(215)(),
        s = e(18)("observable"),
        u = e(33),
        l = e(7),
        c = e(74),
        p = e(81),
        f = e(39),
        h = e(75),
        d = h.RETURN,
        g = function(t) {
            return null == t ? void 0 : u(t)
        },
        v = function(t) {
            var n = t._c;
            n && (t._c = void 0, n())
        },
        y = function(t) {
            return void 0 === t._o
        },
        m = function(t) {
            y(t) || (t._o = void 0, v(t))
        },
        _ = function(t, n) {
            l(t), this._c = void 0, this._o = t, t = new b(this);
            try {
                var e = n(t),
                    r = e;
                null != e && ("function" == typeof e.unsubscribe ? e = function() {
                    r.unsubscribe()
                } : u(e), this._c = e)
            } catch (n) {
                return void t.error(n)
            }
            y(this) && v(this)
        };
    _.prototype = p({}, {
        unsubscribe: function() {
            m(this)
        }
    });
    var b = function(t) {
        this._s = t
    };
    b.prototype = p({}, {
        next: function(t) {
            var n = this._s;
            if (!y(n)) {
                var e = n._o;
                try {
                    var r = g(e.next);
                    if (r) return r.call(e, t)
                } catch (t) {
                    try {
                        m(n)
                    } finally {
                        throw t
                    }
                }
            }
        },
        error: function(t) {
            var n = this._s;
            if (y(n)) throw t;
            var e = n._o;
            n._o = void 0;
            try {
                var r = g(e.error);
                if (!r) throw t;
                t = r.call(e, t)
            } catch (t) {
                try {
                    v(n)
                } finally {
                    throw t
                }
            }
            return v(n), t
        },
        complete: function(t) {
            var n = this._s;
            if (!y(n)) {
                var e = n._o;
                n._o = void 0;
                try {
                    var r = g(e.complete);
                    t = r ? r.call(e, t) : void 0
                } catch (t) {
                    try {
                        v(n)
                    } finally {
                        throw t
                    }
                }
                return v(n), t
            }
        }
    });
    var w = function(t) {
        c(this, w, "Observable", "_f")._f = u(t)
    };
    p(w.prototype, {
        subscribe: function(t) {
            return new _(t, this._f)
        },
        forEach: function(t) {
            var n = this;
            return new(i.Promise || o.Promise)(function(e, r) {
                u(t);
                var o = n.subscribe({
                    next: function(n) {
                        try {
                            return t(n)
                        } catch (t) {
                            r(t), o.unsubscribe()
                        }
                    },
                    error: r,
                    complete: e
                })
            })
        }
    }), p(w, {
        from: function(t) {
            var n = "function" == typeof this ? this : w,
                e = g(l(t)[s]);
            if (e) {
                var r = l(e.call(t));
                return r.constructor === n ? r : new n(function(t) {
                    return r.subscribe(t)
                })
            }
            return new n(function(n) {
                var e = !1;
                return a(function() {
                        if (!e) {
                            try {
                                if (h(t, !1, function(t) {
                                        if (n.next(t), e) return d
                                    }) === d) return
                            } catch (t) {
                                if (e) throw t;
                                return void n.error(t)
                            }
                            n.complete()
                        }
                    }),
                    function() {
                        e = !0
                    }
            })
        },
        of: function() {
            for (var t = 0, n = arguments.length, e = new Array(n); t < n;) e[t] = arguments[t++];
            return new("function" == typeof this ? this : w)(function(t) {
                var n = !1;
                return a(function() {
                        if (!n) {
                            for (var r = 0; r < e.length; ++r)
                                if (t.next(e[r]), n) return;
                            t.complete()
                        }
                    }),
                    function() {
                        n = !0
                    }
            })
        }
    }), f(w.prototype, s, function() {
        return this
    }), r(r.G, {
        Observable: w
    }), e(82)("Observable")
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(50),
        i = e(8),
        a = e(150),
        s = e(291);
    r(r.P + r.R, "Promise", {
        finally: function(t) {
            var n = a(this, o.Promise || i.Promise),
                e = "function" == typeof t;
            return this.then(e ? function(e) {
                return s(n, t()).then(function() {
                    return e
                })
            } : t, e ? function(e) {
                return s(n, t()).then(function() {
                    throw e
                })
            } : t)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(216),
        i = e(290);
    r(r.S, "Promise", {
        try: function(t) {
            var n = o.f(this),
                e = i(t);
            return (e.e ? n.reject : n.resolve)(e.v), n.promise
        }
    })
}, function(t, n, e) {
    var r = e(63),
        o = e(7),
        i = r.key,
        a = r.set;
    r.exp({
        defineMetadata: function(t, n, e, r) {
            a(t, n, o(e), i(r))
        }
    })
}, function(t, n, e) {
    var r = e(63),
        o = e(7),
        i = r.key,
        a = r.map,
        s = r.store;
    r.exp({
        deleteMetadata: function(t, n) {
            var e = arguments.length < 3 ? void 0 : i(arguments[2]),
                r = a(o(n), e, !1);
            if (void 0 === r || !r.delete(t)) return !1;
            if (r.size) return !0;
            var u = s.get(n);
            return u.delete(e), !!u.size || s.delete(n)
        }
    })
}, function(t, n, e) {
    var r = e(297),
        o = e(267),
        i = e(63),
        a = e(7),
        s = e(43),
        u = i.keys,
        l = i.key,
        c = function(t, n) {
            var e = u(t, n),
                i = s(t);
            if (null === i) return e;
            var a = c(i, n);
            return a.length ? e.length ? o(new r(e.concat(a))) : a : e
        };
    i.exp({
        getMetadataKeys: function(t) {
            return c(a(t), arguments.length < 2 ? void 0 : l(arguments[1]))
        }
    })
}, function(t, n, e) {
    var r = e(63),
        o = e(7),
        i = e(43),
        a = r.has,
        s = r.get,
        u = r.key,
        l = function(t, n, e) {
            if (a(t, n, e)) return s(t, n, e);
            var r = i(n);
            return null !== r ? l(t, r, e) : void 0
        };
    r.exp({
        getMetadata: function(t, n) {
            return l(t, o(n), arguments.length < 3 ? void 0 : u(arguments[2]))
        }
    })
}, function(t, n, e) {
    var r = e(63),
        o = e(7),
        i = r.keys,
        a = r.key;
    r.exp({
        getOwnMetadataKeys: function(t) {
            return i(o(t), arguments.length < 2 ? void 0 : a(arguments[1]))
        }
    })
}, function(t, n, e) {
    var r = e(63),
        o = e(7),
        i = r.get,
        a = r.key;
    r.exp({
        getOwnMetadata: function(t, n) {
            return i(t, o(n), arguments.length < 3 ? void 0 : a(arguments[2]))
        }
    })
}, function(t, n, e) {
    var r = e(63),
        o = e(7),
        i = e(43),
        a = r.has,
        s = r.key,
        u = function(t, n, e) {
            if (a(t, n, e)) return !0;
            var r = i(n);
            return null !== r && u(t, r, e)
        };
    r.exp({
        hasMetadata: function(t, n) {
            return u(t, o(n), arguments.length < 3 ? void 0 : s(arguments[2]))
        }
    })
}, function(t, n, e) {
    var r = e(63),
        o = e(7),
        i = r.has,
        a = r.key;
    r.exp({
        hasOwnMetadata: function(t, n) {
            return i(t, o(n), arguments.length < 3 ? void 0 : a(arguments[2]))
        }
    })
}, function(t, n, e) {
    var r = e(63),
        o = e(7),
        i = e(33),
        a = r.key,
        s = r.set;
    r.exp({
        metadata: function(t, n) {
            return function(e, r) {
                s(t, n, (void 0 !== r ? o : i)(e), a(r))
            }
        }
    })
}, function(t, n, e) {
    e(147)("Set")
}, function(t, n, e) {
    e(148)("Set")
}, function(t, n, e) {
    var r = e(0);
    r(r.P + r.R, "Set", {
        toJSON: e(271)("Set")
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(219)(!0);
    r(r.P, "String", {
        at: function(t) {
            return o(this, t)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(51),
        i = e(26),
        a = e(143),
        s = e(141),
        u = RegExp.prototype,
        l = function(t, n) {
            this._r = t, this._s = n
        };
    e(211)(l, "RegExp String", function() {
        var t = this._r.exec(this._s);
        return {
            value: t,
            done: null === t
        }
    }), r(r.P, "String", {
        matchAll: function(t) {
            if (o(this), !a(t)) throw TypeError(t + " is not a regexp!");
            var n = String(this),
                e = "flags" in u ? String(t.flags) : s.call(t),
                r = new RegExp(t.source, ~e.indexOf("g") ? e : "g" + e);
            return r.lastIndex = i(t.lastIndex), new l(r, n)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(292),
        i = e(225);
    r(r.P + r.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(i), "String", {
        padEnd: function(t) {
            return o(this, t, arguments.length > 1 ? arguments[1] : void 0, !1)
        }
    })
}, function(t, n, e) {
    "use strict";
    var r = e(0),
        o = e(292),
        i = e(225);
    r(r.P + r.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(i), "String", {
        padStart: function(t) {
            return o(this, t, arguments.length > 1 ? arguments[1] : void 0, !0)
        }
    })
}, function(t, n, e) {
    "use strict";
    e(95)("trimLeft", function(t) {
        return function() {
            return t(this, 1)
        }
    }, "trimStart")
}, function(t, n, e) {
    "use strict";
    e(95)("trimRight", function(t) {
        return function() {
            return t(this, 2)
        }
    }, "trimEnd")
}, function(t, n, e) {
    e(226)("asyncIterator")
}, function(t, n, e) {
    e(226)("observable")
}, function(t, n, e) {
    var r = e(0);
    r(r.S, "System", {
        global: e(8)
    })
}, function(t, n, e) {
    e(147)("WeakMap")
}, function(t, n, e) {
    e(148)("WeakMap")
}, function(t, n, e) {
    e(147)("WeakSet")
}, function(t, n, e) {
    e(148)("WeakSet")
}, function(t, n, e) {
    for (var r = e(228), o = e(79), i = e(40), a = e(8), s = e(39), u = e(93), l = e(18), c = l("iterator"), p = l("toStringTag"), f = u.Array, h = {
            CSSRuleList: !0,
            CSSStyleDeclaration: !1,
            CSSValueList: !1,
            ClientRectList: !1,
            DOMRectList: !1,
            DOMStringList: !1,
            DOMTokenList: !0,
            DataTransferItemList: !1,
            FileList: !1,
            HTMLAllCollection: !1,
            HTMLCollection: !1,
            HTMLFormElement: !1,
            HTMLSelectElement: !1,
            MediaList: !0,
            MimeTypeArray: !1,
            NamedNodeMap: !1,
            NodeList: !0,
            PaintRequestList: !1,
            Plugin: !1,
            PluginArray: !1,
            SVGLengthList: !1,
            SVGNumberList: !1,
            SVGPathSegList: !1,
            SVGPointList: !1,
            SVGStringList: !1,
            SVGTransformList: !1,
            SourceBufferList: !1,
            StyleSheetList: !0,
            TextTrackCueList: !1,
            TextTrackList: !1,
            TouchList: !1
        }, d = o(h), g = 0; g < d.length; g++) {
        var v, y = d[g],
            m = h[y],
            _ = a[y],
            b = _ && _.prototype;
        if (b && (b[c] || s(b, c, f), b[p] || s(b, p, y), u[y] = f, m))
            for (v in r) b[v] || i(b, v, r[v], !0)
    }
}, function(t, n, e) {
    var r = e(0),
        o = e(223);
    r(r.G + r.B, {
        setImmediate: o.set,
        clearImmediate: o.clear
    })
}, function(t, n, e) {
    var r = e(8),
        o = e(0),
        i = e(225),
        a = [].slice,
        s = /MSIE .\./.test(i),
        u = function(t) {
            return function(n, e) {
                var r = arguments.length > 2,
                    o = !!r && a.call(arguments, 2);
                return t(r ? function() {
                    ("function" == typeof n ? n : Function(n)).apply(this, o)
                } : n, e)
            }
        };
    o(o.G + o.B + o.F * s, {
        setTimeout: u(r.setTimeout),
        setInterval: u(r.setInterval)
    })
}, function(t, n, e) {
    e(612), e(551), e(553), e(552), e(555), e(557), e(562), e(556), e(554), e(564), e(563), e(559), e(560), e(558), e(550), e(561), e(565), e(566), e(518), e(520), e(519), e(568), e(567), e(538), e(548), e(549), e(539), e(540), e(541), e(542), e(543), e(544), e(545), e(546), e(547), e(521), e(522), e(523), e(524), e(525), e(526), e(527), e(528), e(529), e(530), e(531), e(532), e(533), e(534), e(535), e(536), e(537), e(599), e(604), e(611), e(602), e(594), e(595), e(600), e(605), e(607), e(590), e(591), e(592), e(593), e(596), e(597), e(598), e(601), e(603), e(606), e(608), e(609), e(610), e(513), e(515), e(514), e(517), e(516), e(502), e(500), e(506), e(503), e(509), e(511), e(499), e(505), e(496), e(510), e(494), e(508), e(507), e(501), e(504), e(493), e(495), e(498), e(497), e(512), e(228), e(584), e(589), e(296), e(585), e(586), e(587), e(588), e(569), e(295), e(297), e(298), e(624), e(613), e(614), e(619), e(622), e(623), e(617), e(620), e(618), e(621), e(615), e(616), e(570), e(571), e(572), e(573), e(574), e(577), e(575), e(576), e(578), e(579), e(580), e(581), e(583), e(582), e(627), e(625), e(626), e(668), e(671), e(670), e(672), e(673), e(669), e(674), e(675), e(649), e(652), e(648), e(646), e(647), e(650), e(651), e(633), e(667), e(632), e(666), e(678), e(680), e(631), e(665), e(677), e(679), e(630), e(676), e(629), e(634), e(635), e(636), e(637), e(638), e(640), e(639), e(641), e(642), e(643), e(645), e(644), e(654), e(655), e(656), e(657), e(659), e(658), e(661), e(660), e(662), e(663), e(664), e(628), e(653), e(683), e(682), e(681), t.exports = e(50)
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    (function(n) {
        ! function(n) {
            "use strict";

            function e(t, n, e, r) {
                var i = n && n.prototype instanceof o ? n : o,
                    a = Object.create(i.prototype),
                    s = new h(r || []);
                return a._invoke = l(t, e, s), a
            }

            function r(t, n, e) {
                try {
                    return {
                        type: "normal",
                        arg: t.call(n, e)
                    }
                } catch (t) {
                    return {
                        type: "throw",
                        arg: t
                    }
                }
            }

            function o() {}

            function i() {}

            function a() {}

            function s(t) {
                ["next", "throw", "return"].forEach(function(n) {
                    t[n] = function(t) {
                        return this._invoke(n, t)
                    }
                })
            }

            function u(t) {
                function e(n, o, i, a) {
                    var s = r(t[n], t, o);
                    if ("throw" !== s.type) {
                        var u = s.arg,
                            l = u.value;
                        return l && "object" == typeof l && m.call(l, "__await") ? Promise.resolve(l.__await).then(function(t) {
                            e("next", t, i, a)
                        }, function(t) {
                            e("throw", t, i, a)
                        }) : Promise.resolve(l).then(function(t) {
                            u.value = t, i(u)
                        }, a)
                    }
                    a(s.arg)
                }

                function o(t, n) {
                    function r() {
                        return new Promise(function(r, o) {
                            e(t, n, r, o)
                        })
                    }
                    return i = i ? i.then(r, r) : r()
                }
                "object" == typeof n.process && n.process.domain && (e = n.process.domain.bind(e));
                var i;
                this._invoke = o
            }

            function l(t, n, e) {
                var o = M;
                return function(i, a) {
                    if (o === C) throw new Error("Generator is already running");
                    if (o === A) {
                        if ("throw" === i) throw a;
                        return g()
                    }
                    for (e.method = i, e.arg = a;;) {
                        var s = e.delegate;
                        if (s) {
                            var u = c(s, e);
                            if (u) {
                                if (u === P) continue;
                                return u
                            }
                        }
                        if ("next" === e.method) e.sent = e._sent = e.arg;
                        else if ("throw" === e.method) {
                            if (o === M) throw o = A, e.arg;
                            e.dispatchException(e.arg)
                        } else "return" === e.method && e.abrupt("return", e.arg);
                        o = C;
                        var l = r(t, n, e);
                        if ("normal" === l.type) {
                            if (o = e.done ? A : k, l.arg === P) continue;
                            return {
                                value: l.arg,
                                done: e.done
                            }
                        }
                        "throw" === l.type && (o = A, e.method = "throw", e.arg = l.arg)
                    }
                }
            }

            function c(t, n) {
                var e = t.iterator[n.method];
                if (e === v) {
                    if (n.delegate = null, "throw" === n.method) {
                        if (t.iterator.return && (n.method = "return", n.arg = v, c(t, n), "throw" === n.method)) return P;
                        n.method = "throw", n.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return P
                }
                var o = r(e, t.iterator, n.arg);
                if ("throw" === o.type) return n.method = "throw", n.arg = o.arg, n.delegate = null, P;
                var i = o.arg;
                return i ? i.done ? (n[t.resultName] = i.value, n.next = t.nextLoc, "return" !== n.method && (n.method = "next", n.arg = v), n.delegate = null, P) : i : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), n.delegate = null, P)
            }

            function p(t) {
                var n = {
                    tryLoc: t[0]
                };
                1 in t && (n.catchLoc = t[1]), 2 in t && (n.finallyLoc = t[2], n.afterLoc = t[3]), this.tryEntries.push(n)
            }

            function f(t) {
                var n = t.completion || {};
                n.type = "normal", delete n.arg, t.completion = n
            }

            function h(t) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], t.forEach(p, this), this.reset(!0)
            }

            function d(t) {
                if (t) {
                    var n = t[b];
                    if (n) return n.call(t);
                    if ("function" == typeof t.next) return t;
                    if (!isNaN(t.length)) {
                        var e = -1,
                            r = function n() {
                                for (; ++e < t.length;)
                                    if (m.call(t, e)) return n.value = t[e], n.done = !1, n;
                                return n.value = v, n.done = !0, n
                            };
                        return r.next = r
                    }
                }
                return {
                    next: g
                }
            }

            function g() {
                return {
                    value: v,
                    done: !0
                }
            }
            var v, y = Object.prototype,
                m = y.hasOwnProperty,
                _ = "function" == typeof Symbol ? Symbol : {},
                b = _.iterator || "@@iterator",
                w = _.asyncIterator || "@@asyncIterator",
                x = _.toStringTag || "@@toStringTag",
                T = "object" == typeof t,
                S = n.regeneratorRuntime;
            if (S) return void(T && (t.exports = S));
            S = n.regeneratorRuntime = T ? t.exports : {}, S.wrap = e;
            var M = "suspendedStart",
                k = "suspendedYield",
                C = "executing",
                A = "completed",
                P = {},
                E = {};
            E[b] = function() {
                return this
            };
            var N = Object.getPrototypeOf,
                O = N && N(N(d([])));
            O && O !== y && m.call(O, b) && (E = O);
            var $ = a.prototype = o.prototype = Object.create(E);
            i.prototype = $.constructor = a, a.constructor = i, a[x] = i.displayName = "GeneratorFunction", S.isGeneratorFunction = function(t) {
                var n = "function" == typeof t && t.constructor;
                return !!n && (n === i || "GeneratorFunction" === (n.displayName || n.name))
            }, S.mark = function(t) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(t, a) : (t.__proto__ = a, x in t || (t[x] = "GeneratorFunction")), t.prototype = Object.create($), t
            }, S.awrap = function(t) {
                return {
                    __await: t
                }
            }, s(u.prototype), u.prototype[w] = function() {
                return this
            }, S.AsyncIterator = u, S.async = function(t, n, r, o) {
                var i = new u(e(t, n, r, o));
                return S.isGeneratorFunction(n) ? i : i.next().then(function(t) {
                    return t.done ? t.value : i.next()
                })
            }, s($), $[x] = "Generator", $[b] = function() {
                return this
            }, $.toString = function() {
                return "[object Generator]"
            }, S.keys = function(t) {
                var n = [];
                for (var e in t) n.push(e);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, S.values = d, h.prototype = {
                constructor: h,
                reset: function(t) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = v, this.done = !1, this.delegate = null, this.method = "next", this.arg = v, this.tryEntries.forEach(f), !t)
                        for (var n in this) "t" === n.charAt(0) && m.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = v)
                },
                stop: function() {
                    this.done = !0;
                    var t = this.tryEntries[0],
                        n = t.completion;
                    if ("throw" === n.type) throw n.arg;
                    return this.rval
                },
                dispatchException: function(t) {
                    function n(n, r) {
                        return i.type = "throw", i.arg = t, e.next = n, r && (e.method = "next", e.arg = v), !!r
                    }
                    if (this.done) throw t;
                    for (var e = this, r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r],
                            i = o.completion;
                        if ("root" === o.tryLoc) return n("end");
                        if (o.tryLoc <= this.prev) {
                            var a = m.call(o, "catchLoc"),
                                s = m.call(o, "finallyLoc");
                            if (a && s) {
                                if (this.prev < o.catchLoc) return n(o.catchLoc, !0);
                                if (this.prev < o.finallyLoc) return n(o.finallyLoc)
                            } else if (a) {
                                if (this.prev < o.catchLoc) return n(o.catchLoc, !0)
                            } else {
                                if (!s) throw new Error("try statement without catch or finally");
                                if (this.prev < o.finallyLoc) return n(o.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(t, n) {
                    for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                        var r = this.tryEntries[e];
                        if (r.tryLoc <= this.prev && m.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                            var o = r;
                            break
                        }
                    }
                    o && ("break" === t || "continue" === t) && o.tryLoc <= n && n <= o.finallyLoc && (o = null);
                    var i = o ? o.completion : {};
                    return i.type = t, i.arg = n, o ? (this.method = "next", this.next = o.finallyLoc, P) : this.complete(i)
                },
                complete: function(t, n) {
                    if ("throw" === t.type) throw t.arg;
                    return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && n && (this.next = n), P
                },
                finish: function(t) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var e = this.tryEntries[n];
                        if (e.finallyLoc === t) return this.complete(e.completion, e.afterLoc), f(e), P
                    }
                },
                catch: function(t) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var e = this.tryEntries[n];
                        if (e.tryLoc === t) {
                            var r = e.completion;
                            if ("throw" === r.type) {
                                var o = r.arg;
                                f(e)
                            }
                            return o
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(t, n, e) {
                    return this.delegate = {
                        iterator: d(t),
                        resultName: n,
                        nextLoc: e
                    }, "next" === this.method && (this.arg = v), P
                }
            }
        }("object" == typeof n ? n : "object" == typeof window ? window : "object" == typeof self ? self : this)
    }).call(n, e(62))
}, , , , , , , , , , , , function(t, n, e) {
    "use strict";
    var r = {
        geographyConfig: {
            popupOnHover: !1,
            hideHawaiiAndAlaska: !1,
            highlightOnHover: !1,
            borderWidth: 0,
            borderColor: "#444444",
            borderOpacity: 0
        },
        fills: {
            UGA: "#37a0fa",
            TZA: "#37a0fa",
            RWA: "#37a0fa",
            GHA: "#37a0fa",
            NPL: "#37a0fa",
            KHM: "#37a0fa",
            GUY: "#37a0fa",
            IND: "#37a0fa",
            MLS: "#37a0fa",
            BLZ: "#37a0fa",
            LAO: "#37a0fa",
            defaultFill: "#444444"
        },
        data: {
            UGA: {
                fillKey: "UGA"
            },
            TZA: {
                fillKey: "TZA"
            },
            RWA: {
                fillKey: "RWA"
            },
            IND: {
                fillKey: "IND"
            },
            NPL: {
                fillKey: "NPL"
            },
            GUY: {
                fillKey: "GUY"
            },
            KHM: {
                fillKey: "KHM"
            },
            GHA: {
                fillKey: "GHA"
            },
            MLS: {
                fillKey: "MLS"
            },
            BLZ: {
                fillKey: "BLZ"
            },
            LAO: {
                fillKey: "LAO"
            }
        },
        projects: [{
            name: "UGANDA",
            radius: 8,
            fillKey: "UGA",
            flag: "uganda.jpg",
            link: "uganda",
            latitude: 1.3733,
            longitude: 32.2903
        }, {
            name: "BELIZE",
            radius: 8,
            fillKey: "BLZ",
            flag: "belize.jpg",
            link: "belize",
            latitude: 16.9954,
            longitude: -88.086
        }, {
            name: "LAOS",
            radius: 8,
            fillKey: "LAO",
            flag: "laos.jpg",
            link: "laos",
            latitude: 19.9325,
            longitude: 103.141
        }, {
            name: "TANZANIA",
            radius: 8,
            fillKey: "TZA",
            flag: "tanzania.jpg",
            link: "tanzania",
            latitude: -6.369,
            longitude: 34.8888
        }, {
            name: "RWANDA",
            radius: 8,
            fillKey: "RWA",
            link: "rwanda",
            flag: "rwanda.png",
            latitude: -1.9403,
            longitude: 29.8739
        }, {
            name: "INDIA",
            radius: 8,
            fillKey: "IND",
            flag: "india.jpg",
            link: "india",
            latitude: 20.5321,
            longitude: 78.7933
        }, {
            name: "GUYANA",
            radius: 8,
            fillKey: "GUY",
            flag: "guyana.png",
            link: "guyana",
            latitude: 6.8013,
            longitude: -58.1551
        }, {
            name: "CAMBODIA",
            radius: 8,
            fillKey: "KHM",
            flag: "cambodia.jpg",
            link: "cambodia",
            latitude: 12.5657,
            longitude: 104.991
        }, {
            name: "GHANA",
            radius: 8,
            flag: "ghana.png",
            fillKey: "GHA",
            link: "ghana",
            latitude: 7.9465,
            longitude: -1.0232
        }, {
            name: "NEPAL",
            radius: 8,
            flag: "nepal.png",
            fillKey: "NPL",
            link: "nepal",
            latitude: 28.3949,
            longitude: 84.124
        }, {
            name: "MALAYSIA",
            radius: 8,
            flag: "malaysia.png",
            fillKey: "MLS",
            link: "malaysia",
            latitude: 4.2105,
            longitude: 101.9758
        }]
    };
    n.a = r
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    ! function() {
        function n(t, n, e) {
            void 0 === e && (e = n, optionsValues = void 0);
            var r = void 0 !== t ? t : n;
            if (void 0 === r) return null;
            if ("function" == typeof r) {
                var o = [e];
                return e.geography && (o = [e.geography, e.data]), r.apply(null, o)
            }
            return r
        }

        function r(t, n, e) {
            return this.svg = g.select(t).append("svg").attr("width", e || t.offsetWidth).attr("data-width", e || t.offsetWidth).attr("class", "datamap").attr("height", n || t.offsetHeight).style("overflow", "hidden"), this.options.responsive && (g.select(this.options.element).style({
                position: "relative",
                "padding-bottom": 100 * this.options.aspectRatio + "%"
            }), g.select(this.options.element).select("svg").style({
                position: "absolute",
                width: "100%",
                height: "100%"
            }), g.select(this.options.element).select("svg").select("g").selectAll("path").style("vector-effect", "non-scaling-stroke")), this.svg
        }

        function o(t, n) {
            var e, r, o = n.width || t.offsetWidth,
                i = n.height || t.offsetHeight,
                a = this.svg;
            return n && void 0 === n.scope && (n.scope = "world"), "usa" === n.scope ? e = g.geo.albersUsa().scale(o).translate([o / 2, i / 2]) : "world" === n.scope && (e = g.geo[n.projection]().scale((o + 1) / 2 / Math.PI).translate([o / 2, i / ("mercator" === n.projection ? 1.45 : 1.8)])), "orthographic" === n.projection && (a.append("defs").append("path").datum({
                type: "Sphere"
            }).attr("id", "sphere").attr("d", r), a.append("use").attr("class", "stroke").attr("xlink:href", "#sphere"), a.append("use").attr("class", "fill").attr("xlink:href", "#sphere"), e.scale(250).clipAngle(90).rotate(n.projectionConfig.rotation)), r = g.geo.path().projection(e), {
                path: r,
                projection: e
            }
        }

        function i() {
            g.select(".datamaps-style-block").empty() && g.select("head").append("style").attr("class", "datamaps-style-block").html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path:not(.datamaps-arc), .datamap circle, .datamap line {stroke: #FFFFFF; vector-effect: non-scaling-stroke; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }')
        }

        function a(t) {
            var e = this.options.fills,
                r = this.options.data || {},
                o = this.options.geographyConfig,
                i = this.svg.select("g.datamaps-subunits");
            i.empty() && (i = this.addLayer("datamaps-subunits", null, !0));
            var a = v.feature(t, t.objects[this.options.scope]).features;
            o.hideAntarctica && (a = a.filter(function(t) {
                return "ATA" !== t.id
            })), o.hideHawaiiAndAlaska && (a = a.filter(function(t) {
                return "HI" !== t.id && "AK" !== t.id
            })), i.selectAll("path.datamaps-subunit").data(a).enter().append("path").attr("d", this.path).attr("class", function(t) {
                return "datamaps-subunit " + t.id
            }).attr("data-info", function(t) {
                return JSON.stringify(r[t.id])
            }).style("fill", function(t) {
                var o, i = r[t.id];
                return i && i.fillKey && (o = e[n(i.fillKey, {
                    data: r[t.id],
                    geography: t
                })]), void 0 === o && (o = n(i && i.fillColor, e.defaultFill, {
                    data: r[t.id],
                    geography: t
                })), o
            }).style("stroke-width", o.borderWidth).style("stroke-opacity", o.borderOpacity).style("stroke", o.borderColor)
        }

        function s() {
            function t() {
                this.parentNode.appendChild(this)
            }
            var e = this.svg,
                r = this,
                o = this.options.geographyConfig;
            (o.highlightOnHover || o.popupOnHover) && e.selectAll(".datamaps-subunit").on("mouseover", function(i) {
                var a = g.select(this),
                    s = r.options.data[i.id] || {};
                if (o.highlightOnHover) {
                    var u = {
                        fill: a.style("fill"),
                        stroke: a.style("stroke"),
                        "stroke-width": a.style("stroke-width"),
                        "fill-opacity": a.style("fill-opacity")
                    };
                    a.style("fill", n(s.highlightFillColor, o.highlightFillColor, s)).style("stroke", n(s.highlightBorderColor, o.highlightBorderColor, s)).style("stroke-width", n(s.highlightBorderWidth, o.highlightBorderWidth, s)).style("stroke-opacity", n(s.highlightBorderOpacity, o.highlightBorderOpacity, s)).style("fill-opacity", n(s.highlightFillOpacity, o.highlightFillOpacity, s)).attr("data-previousAttributes", JSON.stringify(u)), /((MSIE)|(Trident))/.test(navigator.userAgent) || t.call(this)
                }
                o.popupOnHover && r.updatePopup(a, i, o, e)
            }).on("mouseout", function() {
                var t = g.select(this);
                if (o.highlightOnHover) {
                    var n = JSON.parse(t.attr("data-previousAttributes"));
                    for (var e in n) t.style(e, n[e])
                }
                t.on("mousemove", null), g.selectAll(".datamaps-hoverover").style("display", "none")
            })
        }

        function u(t, n, e) {
            if (n = n || {}, this.options.fills) {
                var r = "<dl>",
                    o = "";
                n.legendTitle && (r = "<h2>" + n.legendTitle + "</h2>" + r);
                for (var i in this.options.fills) {
                    if ("defaultFill" === i) {
                        if (!n.defaultFillName) continue;
                        o = n.defaultFillName
                    } else o = n.labels && n.labels[i] ? n.labels[i] : i + ": ";
                    r += "<dt>" + o + "</dt>", r += '<dd style="background-color:' + this.options.fills[i] + '">&nbsp;</dd>'
                }
                r += "</dl>";
                g.select(this.options.element).append("div").attr("class", "datamaps-legend").html(r)
            }
        }

        function l(t, n) {
            var e = g.geo.graticule();
            this.svg.insert("path", ".datamaps-subunits").datum(e).attr("class", "datamaps-graticule").attr("d", this.path)
        }

        function c(t, e, r) {
            var o = this,
                i = this.svg;
            if (!e || e && !e.slice) throw "Datamaps Error - arcs must be an array";
            for (var a = 0; a < e.length; a++) e[a] = h(e[a], e[a].options), delete e[a].options;
            void 0 === r && (r = y.arcConfig);
            var s = t.selectAll("path.datamaps-arc").data(e, JSON.stringify),
                u = g.geo.path().projection(o.projection);
            s.enter().append("svg:path").attr("class", "datamaps-arc").style("stroke-linecap", "round").style("stroke", function(t) {
                return n(t.strokeColor, r.strokeColor, t)
            }).style("fill", "none").style("stroke-width", function(t) {
                return n(t.strokeWidth, r.strokeWidth, t)
            }).attr("d", function(t) {
                var e, a;
                if ("string" == typeof t.origin) switch (t.origin) {
                    case "CAN":
                        e = o.latLngToXY(56.624472, -114.665293);
                        break;
                    case "CHL":
                        e = o.latLngToXY(-33.44889, -70.669265);
                        break;
                    case "IDN":
                        e = o.latLngToXY(-6.208763, 106.845599);
                        break;
                    case "JPN":
                        e = o.latLngToXY(35.689487, 139.691706);
                        break;
                    case "MYS":
                        e = o.latLngToXY(3.139003, 101.686855);
                        break;
                    case "NOR":
                        e = o.latLngToXY(59.913869, 10.752245);
                        break;
                    case "USA":
                        e = o.latLngToXY(41.140276, -100.760145);
                        break;
                    case "VNM":
                        e = o.latLngToXY(21.027764, 105.83416);
                        break;
                    default:
                        e = o.path.centroid(i.select("path." + t.origin).data()[0])
                } else e = o.latLngToXY(n(t.origin.latitude, t), n(t.origin.longitude, t));
                if ("string" == typeof t.destination) switch (t.destination) {
                    case "CAN":
                        a = o.latLngToXY(56.624472, -114.665293);
                        break;
                    case "CHL":
                        a = o.latLngToXY(-33.44889, -70.669265);
                        break;
                    case "IDN":
                        a = o.latLngToXY(-6.208763, 106.845599);
                        break;
                    case "JPN":
                        a = o.latLngToXY(35.689487, 139.691706);
                        break;
                    case "MYS":
                        a = o.latLngToXY(3.139003, 101.686855);
                        break;
                    case "NOR":
                        a = o.latLngToXY(59.913869, 10.752245);
                        break;
                    case "USA":
                        a = o.latLngToXY(41.140276, -100.760145);
                        break;
                    case "VNM":
                        a = o.latLngToXY(21.027764, 105.83416);
                        break;
                    default:
                        a = o.path.centroid(i.select("path." + t.destination).data()[0])
                } else a = o.latLngToXY(n(t.destination.latitude, t), n(t.destination.longitude, t));
                var s = [(e[0] + a[0]) / 2, (e[1] + a[1]) / 2];
                if (r.greatArc) {
                    var l = g.geo.greatArc().source(function(t) {
                        return [n(t.origin.longitude, t), n(t.origin.latitude, t)]
                    }).target(function(t) {
                        return [n(t.destination.longitude, t), n(t.destination.latitude, t)]
                    });
                    return u(l(t))
                }
                var c = n(t.arcSharpness, r.arcSharpness, t);
                return "M" + e[0] + "," + e[1] + "S" + (s[0] + 50 * c) + "," + (s[1] - 75 * c) + "," + a[0] + "," + a[1]
            }).attr("data-info", function(t) {
                return JSON.stringify(t)
            }).on("mouseover", function(t) {
                var n = g.select(this);
                r.popupOnHover && o.updatePopup(n, t, r, i)
            }).on("mouseout", function(t) {
                g.select(this);
                g.selectAll(".datamaps-hoverover").style("display", "none")
            }).transition().delay(100).style("fill", function(t) {
                var e = this.getTotalLength();
                return this.style.transition = this.style.WebkitTransition = "none", this.style.strokeDasharray = e + " " + e, this.style.strokeDashoffset = e, this.getBoundingClientRect(), this.style.transition = this.style.WebkitTransition = "stroke-dashoffset " + n(t.animationSpeed, r.animationSpeed, t) + "ms ease-out", this.style.strokeDashoffset = "0", "none"
            }), s.exit().transition().style("opacity", 0).remove()
        }

        function p(t, n) {
            var e = this;
            n = n || {};
            var r = this.projection([-67.707617, 42.722131]);
            this.svg.selectAll(".datamaps-subunit").attr("data-foo", function(o) {
                var i = e.path.centroid(o),
                    a = 7.5,
                    s = 5;
                ["FL", "KY", "MI"].indexOf(o.id) > -1 && (a = -2.5), "NY" === o.id && (a = -1), "MI" === o.id && (s = 18), "LA" === o.id && (a = 13);
                var u, l;
                u = i[0] - a, l = i[1] + s;
                var c = ["VT", "NH", "MA", "RI", "CT", "NJ", "DE", "MD", "DC"].indexOf(o.id);
                if (c > -1) {
                    var p = r[1];
                    u = r[0], l = p + c * (2 + (n.fontSize || 12)), t.append("line").attr("x1", u - 3).attr("y1", l - 5).attr("x2", i[0]).attr("y2", i[1]).style("stroke", n.labelColor || "#000").style("stroke-width", n.lineWidth || 1)
                }
                return t.append("text").attr("x", u).attr("y", l).style("font-size", (n.fontSize || 10) + "px").style("font-family", n.fontFamily || "Verdana").style("fill", n.labelColor || "#000").text(function() {
                    return n.customLabelText && n.customLabelText[o.id] ? n.customLabelText[o.id] : o.id
                }), "bar"
            })
        }

        function f(t, e, r) {
            function o(t) {
                return void 0 !== t && void 0 !== t.latitude && void 0 !== t.longitude
            }
            var i = this,
                a = this.options.fills,
                s = this.options.filters,
                u = this.svg;
            if (!e || e && !e.slice) throw "Datamaps Error - bubbles must be an array";
            var l = t.selectAll("circle.datamaps-bubble").data(e, r.key);
            l.enter().append("svg:circle").attr("class", "datamaps-bubble").attr("cx", function(t) {
                var n;
                if (o(t) ? n = i.latLngToXY(t.latitude, t.longitude) : t.centered && (n = "USA" === t.centered ? i.projection([-98.58333, 39.83333]) : i.path.centroid(u.select("path." + t.centered).data()[0])), n) return n[0]
            }).attr("cy", function(t) {
                var n;
                if (o(t) ? n = i.latLngToXY(t.latitude, t.longitude) : t.centered && (n = "USA" === t.centered ? i.projection([-98.58333, 39.83333]) : i.path.centroid(u.select("path." + t.centered).data()[0])), n) return n[1]
            }).attr("r", function(t) {
                return r.animate ? 0 : n(t.radius, r.radius, t)
            }).attr("data-info", function(t) {
                return JSON.stringify(t)
            }).attr("filter", function(t) {
                var e = s[n(t.filterKey, r.filterKey, t)];
                if (e) return e
            }).style("stroke", function(t) {
                return n(t.borderColor, r.borderColor, t)
            }).style("stroke-width", function(t) {
                return n(t.borderWidth, r.borderWidth, t)
            }).style("stroke-opacity", function(t) {
                return n(t.borderOpacity, r.borderOpacity, t)
            }).style("fill-opacity", function(t) {
                return n(t.fillOpacity, r.fillOpacity, t)
            }).style("fill", function(t) {
                return a[n(t.fillKey, r.fillKey, t)] || a.defaultFill
            }).on("mouseover", function(t) {
                var e = g.select(this);
                if (r.highlightOnHover) {
                    var o = {
                        fill: e.style("fill"),
                        stroke: e.style("stroke"),
                        "stroke-width": e.style("stroke-width"),
                        "fill-opacity": e.style("fill-opacity")
                    };
                    e.style("fill", n(t.highlightFillColor, r.highlightFillColor, t)).style("stroke", n(t.highlightBorderColor, r.highlightBorderColor, t)).style("stroke-width", n(t.highlightBorderWidth, r.highlightBorderWidth, t)).style("stroke-opacity", n(t.highlightBorderOpacity, r.highlightBorderOpacity, t)).style("fill-opacity", n(t.highlightFillOpacity, r.highlightFillOpacity, t)).attr("data-previousAttributes", JSON.stringify(o))
                }
                r.popupOnHover && i.updatePopup(e, t, r, u)
            }).on("mouseout", function(t) {
                var n = g.select(this);
                if (r.highlightOnHover) {
                    var e = JSON.parse(n.attr("data-previousAttributes"));
                    for (var o in e) n.style(o, e[o])
                }
                g.selectAll(".datamaps-hoverover").style("display", "none")
            }), l.transition().duration(400).attr("r", function(t) {
                return n(t.radius, r.radius, t)
            }).transition().duration(0).attr("data-info", function(t) {
                return JSON.stringify(t)
            }), l.exit().transition().delay(r.exitDelay).attr("r", 0).remove()
        }

        function h(t) {
            return Array.prototype.slice.call(arguments, 1).forEach(function(n) {
                if (n)
                    for (var e in n) null == t[e] && ("function" == typeof n[e] ? t[e] = n[e] : t[e] = JSON.parse(JSON.stringify(n[e])))
            }), t
        }

        function d(t) {
            if (void 0 === g || void 0 === v) throw new Error("Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map");
            return this.options = h(t, y), this.options.geographyConfig = h(t.geographyConfig, y.geographyConfig), this.options.projectionConfig = h(t.projectionConfig, y.projectionConfig), this.options.bubblesConfig = h(t.bubblesConfig, y.bubblesConfig), this.options.arcConfig = h(t.arcConfig, y.arcConfig), g.select(this.options.element).select("svg").length > 0 && r.call(this, this.options.element, this.options.height, this.options.width), this.addPlugin("bubbles", f), this.addPlugin("legend", u), this.addPlugin("arc", c), this.addPlugin("labels", p), this.addPlugin("graticule", l), this.options.disableDefaultStyles || i(), this.draw()
        }
        var g = window.d3,
            v = window.topojson,
            y = {
                scope: "world",
                responsive: !1,
                aspectRatio: .5625,
                setProjection: o,
                projection: "equirectangular",
                dataType: "json",
                data: {},
                done: function() {},
                fills: {
                    defaultFill: "#ABDDA4"
                },
                filters: {},
                geographyConfig: {
                    dataUrl: null,
                    hideAntarctica: !0,
                    hideHawaiiAndAlaska: !1,
                    borderWidth: 1,
                    borderOpacity: 1,
                    borderColor: "#FDFDFD",
                    popupTemplate: function(t, n) {
                        return '<div class="hoverinfo"><strong>' + t.properties.name + "</strong></div>"
                    },
                    popupOnHover: !0,
                    highlightOnHover: !0,
                    highlightFillColor: "#FC8D59",
                    highlightBorderColor: "rgba(250, 15, 160, 0.2)",
                    highlightBorderWidth: 2,
                    highlightBorderOpacity: 1
                },
                projectionConfig: {
                    rotation: [97, 0]
                },
                bubblesConfig: {
                    borderWidth: 2,
                    borderOpacity: 1,
                    borderColor: "#FFFFFF",
                    popupOnHover: !0,
                    radius: null,
                    popupTemplate: function(t, n) {
                        return '<div class="hoverinfo"><strong>' + n.name + "</strong></div>"
                    },
                    fillOpacity: .75,
                    animate: !0,
                    highlightOnHover: !0,
                    highlightFillColor: "#FC8D59",
                    highlightBorderColor: "rgba(250, 15, 160, 0.2)",
                    highlightBorderWidth: 2,
                    highlightBorderOpacity: 1,
                    highlightFillOpacity: .85,
                    exitDelay: 100,
                    key: JSON.stringify
                },
                arcConfig: {
                    strokeColor: "#DD1C77",
                    strokeWidth: 1,
                    arcSharpness: 1,
                    animationSpeed: 600,
                    popupOnHover: !1,
                    popupTemplate: function(t, n) {
                        return n.origin && n.destination && n.origin.latitude && n.origin.longitude && n.destination.latitude && n.destination.longitude ? '<div class="hoverinfo"><strong>Arc</strong><br>Origin: ' + JSON.stringify(n.origin) + "<br>Destination: " + JSON.stringify(n.destination) + "</div>" : n.origin && n.destination ? '<div class="hoverinfo"><strong>Arc</strong><br>' + n.origin + " -> " + n.destination + "</div>" : ""
                    }
                }
            };
        d.prototype.resize = function() {
            var t = this,
                n = t.options;
            if (n.responsive) {
                var e = n.element.clientWidth,
                    r = g.select(n.element).select("svg").attr("data-width");
                g.select(n.element).select("svg").selectAll("g").attr("transform", "scale(" + e / r + ")")
            }
        }, d.prototype.draw = function() {
            function t(t) {
                n.options.dataUrl && g[n.options.dataType](n.options.dataUrl, function(t) {
                    if ("csv" === n.options.dataType && t && t.slice) {
                        for (var e = {}, r = 0; r < t.length; r++) e[t[r].id] = t[r];
                        t = e
                    }
                    Datamaps.prototype.updateChoropleth.call(n, t)
                }), a.call(n, t), s.call(n), (n.options.geographyConfig.popupOnHover || n.options.bubblesConfig.popupOnHover) && (hoverover = g.select(n.options.element).append("div").attr("class", "datamaps-hoverover").style("z-index", 10001).style("position", "absolute")), n.options.done(n)
            }
            var n = this,
                e = n.options,
                r = e.setProjection.apply(this, [e.element, e]);
            return this.path = r.path, this.projection = r.projection, e.geographyConfig.dataUrl ? g.json(e.geographyConfig.dataUrl, function(e, r) {
                if (e) throw new Error(e);
                n.customTopo = r, t(r)
            }) : t(this[e.scope + "Topo"] || e.geographyConfig.dataJson), this
        }, d.prototype.worldTopo = {
            type: "Topology",
            objects: {
                world: {
                    type: "GeometryCollection",
                    geometries: [{
                        type: "Polygon",
                        properties: {
                            name: "Afghanistan"
                        },
                        id: "AFG",
                        arcs: [
                            [0, 1, 2, 3, 4, 5]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Angola"
                        },
                        id: "AGO",
                        arcs: [
                            [
                                [6, 7, 8, 9]
                            ],
                            [
                                [10, 11, 12]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Albania"
                        },
                        id: "ALB",
                        arcs: [
                            [13, 14, 15, 16, 17]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "United Arab Emirates"
                        },
                        id: "ARE",
                        arcs: [
                            [18, 19, 20, 21, 22]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Argentina"
                        },
                        id: "ARG",
                        arcs: [
                            [
                                [23, 24]
                            ],
                            [
                                [25, 26, 27, 28, 29, 30]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Armenia"
                        },
                        id: "ARM",
                        arcs: [
                            [31, 32, 33, 34, 35]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Antarctica"
                        },
                        id: "ATA",
                        arcs: [
                            [
                                [36]
                            ],
                            [
                                [37]
                            ],
                            [
                                [38]
                            ],
                            [
                                [39]
                            ],
                            [
                                [40]
                            ],
                            [
                                [41]
                            ],
                            [
                                [42]
                            ],
                            [
                                [43]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "French Southern and Antarctic Lands"
                        },
                        id: "ATF",
                        arcs: [
                            [44]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Australia"
                        },
                        id: "AUS",
                        arcs: [
                            [
                                [45]
                            ],
                            [
                                [46]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Austria"
                        },
                        id: "AUT",
                        arcs: [
                            [47, 48, 49, 50, 51, 52, 53]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Azerbaijan"
                        },
                        id: "AZE",
                        arcs: [
                            [
                                [54, -35]
                            ],
                            [
                                [55, 56, -33, 57, 58]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Burundi"
                        },
                        id: "BDI",
                        arcs: [
                            [59, 60, 61]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Belgium"
                        },
                        id: "BEL",
                        arcs: [
                            [62, 63, 64, 65, 66]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Benin"
                        },
                        id: "BEN",
                        arcs: [
                            [67, 68, 69, 70, 71]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Burkina Faso"
                        },
                        id: "BFA",
                        arcs: [
                            [72, 73, 74, -70, 75, 76]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Bangladesh"
                        },
                        id: "BGD",
                        arcs: [
                            [77, 78, 79]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Bulgaria"
                        },
                        id: "BGR",
                        arcs: [
                            [80, 81, 82, 83, 84, 85]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "The Bahamas"
                        },
                        id: "BHS",
                        arcs: [
                            [
                                [86]
                            ],
                            [
                                [87]
                            ],
                            [
                                [88]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Bosnia and Herzegovina"
                        },
                        id: "BIH",
                        arcs: [
                            [89, 90, 91]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Belarus"
                        },
                        id: "BLR",
                        arcs: [
                            [92, 93, 94, 95, 96]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Belize"
                        },
                        id: "BLZ",
                        arcs: [
                            [97, 98, 99]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Bolivia"
                        },
                        id: "BOL",
                        arcs: [
                            [100, 101, 102, 103, -31]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Brazil"
                        },
                        id: "BRA",
                        arcs: [
                            [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Brunei"
                        },
                        id: "BRN",
                        arcs: [
                            [113, 114]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Bhutan"
                        },
                        id: "BTN",
                        arcs: [
                            [115, 116]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Botswana"
                        },
                        id: "BWA",
                        arcs: [
                            [117, 118, 119, 120]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Central African Republic"
                        },
                        id: "CAF",
                        arcs: [
                            [121, 122, 123, 124, 125, 126, 127]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Canada"
                        },
                        id: "CAN",
                        arcs: [
                            [
                                [128]
                            ],
                            [
                                [129]
                            ],
                            [
                                [130]
                            ],
                            [
                                [131]
                            ],
                            [
                                [132]
                            ],
                            [
                                [133]
                            ],
                            [
                                [134]
                            ],
                            [
                                [135]
                            ],
                            [
                                [136]
                            ],
                            [
                                [137]
                            ],
                            [
                                [138, 139, 140, 141]
                            ],
                            [
                                [142]
                            ],
                            [
                                [143]
                            ],
                            [
                                [144]
                            ],
                            [
                                [145]
                            ],
                            [
                                [146]
                            ],
                            [
                                [147]
                            ],
                            [
                                [148]
                            ],
                            [
                                [149]
                            ],
                            [
                                [150]
                            ],
                            [
                                [151]
                            ],
                            [
                                [152]
                            ],
                            [
                                [153]
                            ],
                            [
                                [154]
                            ],
                            [
                                [155]
                            ],
                            [
                                [156]
                            ],
                            [
                                [157]
                            ],
                            [
                                [158]
                            ],
                            [
                                [159]
                            ],
                            [
                                [160]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Switzerland"
                        },
                        id: "CHE",
                        arcs: [
                            [-51, 161, 162, 163]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Chile"
                        },
                        id: "CHL",
                        arcs: [
                            [
                                [-24, 164]
                            ],
                            [
                                [-30, 165, 166, -101]
                            ]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "China"
                        },
                        id: "CHN",
                        arcs: [
                            [
                                [167]
                            ],
                            [
                                [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Ivory Coast"
                        },
                        id: "CIV",
                        arcs: [
                            [184, 185, 186, 187, -73, 188]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Cameroon"
                        },
                        id: "CMR",
                        arcs: [
                            [189, 190, 191, 192, 193, 194, -128, 195]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Democratic Republic of the Congo"
                        },
                        id: "COD",
                        arcs: [
                            [196, 197, -60, 198, 199, -10, 200, -13, 201, -126, 202]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Republic of the Congo"
                        },
                        id: "COG",
                        arcs: [
                            [-12, 203, 204, -196, -127, -202]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Colombia"
                        },
                        id: "COL",
                        arcs: [
                            [205, 206, 207, 208, 209, -107, 210]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Costa Rica"
                        },
                        id: "CRI",
                        arcs: [
                            [211, 212, 213, 214]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Cuba"
                        },
                        id: "CUB",
                        arcs: [
                            [215]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Northern Cyprus"
                        },
                        id: "-99",
                        arcs: [
                            [216, 217]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Cyprus"
                        },
                        id: "CYP",
                        arcs: [
                            [218, -218]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Czech Republic"
                        },
                        id: "CZE",
                        arcs: [
                            [-53, 219, 220, 221]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Germany"
                        },
                        id: "DEU",
                        arcs: [
                            [222, 223, -220, -52, -164, 224, 225, -64, 226, 227, 228]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Djibouti"
                        },
                        id: "DJI",
                        arcs: [
                            [229, 230, 231, 232]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Denmark"
                        },
                        id: "DNK",
                        arcs: [
                            [
                                [233]
                            ],
                            [
                                [-229, 234]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Dominican Republic"
                        },
                        id: "DOM",
                        arcs: [
                            [235, 236]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Algeria"
                        },
                        id: "DZA",
                        arcs: [
                            [237, 238, 239, 240, 241, 242, 243, 244]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Ecuador"
                        },
                        id: "ECU",
                        arcs: [
                            [245, -206, 246]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Egypt"
                        },
                        id: "EGY",
                        arcs: [
                            [247, 248, 249, 250, 251]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Eritrea"
                        },
                        id: "ERI",
                        arcs: [
                            [252, 253, 254, -233]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Spain"
                        },
                        id: "ESP",
                        arcs: [
                            [255, 256, 257, 258]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Estonia"
                        },
                        id: "EST",
                        arcs: [
                            [259, 260, 261]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Ethiopia"
                        },
                        id: "ETH",
                        arcs: [
                            [-232, 262, 263, 264, 265, 266, 267, -253]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Finland"
                        },
                        id: "FIN",
                        arcs: [
                            [268, 269, 270, 271]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Fiji"
                        },
                        id: "FJI",
                        arcs: [
                            [
                                [272]
                            ],
                            [
                                [273, 274]
                            ],
                            [
                                [275, -275]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Falkland Islands"
                        },
                        id: "FLK",
                        arcs: [
                            [276]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "France"
                        },
                        id: "FRA",
                        arcs: [
                            [
                                [277]
                            ],
                            [
                                [278, -225, -163, 279, 280, -257, 281, -66]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "French Guiana"
                        },
                        id: "GUF",
                        arcs: [
                            [282, 283, 284, 285, -111]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Gabon"
                        },
                        id: "GAB",
                        arcs: [
                            [286, 287, -190, -205]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "United Kingdom"
                        },
                        id: "GBR",
                        arcs: [
                            [
                                [288, 289]
                            ],
                            [
                                [290]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Georgia"
                        },
                        id: "GEO",
                        arcs: [
                            [291, 292, -58, -32, 293]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Ghana"
                        },
                        id: "GHA",
                        arcs: [
                            [294, -189, -77, 295]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Guinea"
                        },
                        id: "GIN",
                        arcs: [
                            [296, 297, 298, 299, 300, 301, -187]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Gambia"
                        },
                        id: "GMB",
                        arcs: [
                            [302, 303]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Guinea Bissau"
                        },
                        id: "GNB",
                        arcs: [
                            [304, 305, -300]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Equatorial Guinea"
                        },
                        id: "GNQ",
                        arcs: [
                            [306, -191, -288]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Greece"
                        },
                        id: "GRC",
                        arcs: [
                            [
                                [307]
                            ],
                            [
                                [308, -15, 309, -84, 310]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Greenland"
                        },
                        id: "GRL",
                        arcs: [
                            [311]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Guatemala"
                        },
                        id: "GTM",
                        arcs: [
                            [312, 313, -100, 314, 315, 316]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Guyana"
                        },
                        id: "GUY",
                        arcs: [
                            [317, 318, -109, 319]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Honduras"
                        },
                        id: "HND",
                        arcs: [
                            [320, 321, -316, 322, 323]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Croatia"
                        },
                        id: "HRV",
                        arcs: [
                            [324, -92, 325, 326, 327, 328]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Haiti"
                        },
                        id: "HTI",
                        arcs: [
                            [-237, 329]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Hungary"
                        },
                        id: "HUN",
                        arcs: [
                            [-48, 330, 331, 332, 333, -329, 334]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Indonesia"
                        },
                        id: "IDN",
                        arcs: [
                            [
                                [335]
                            ],
                            [
                                [336, 337]
                            ],
                            [
                                [338]
                            ],
                            [
                                [339]
                            ],
                            [
                                [340]
                            ],
                            [
                                [341]
                            ],
                            [
                                [342]
                            ],
                            [
                                [343]
                            ],
                            [
                                [344, 345]
                            ],
                            [
                                [346]
                            ],
                            [
                                [347]
                            ],
                            [
                                [348, 349]
                            ],
                            [
                                [350]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "India"
                        },
                        id: "IND",
                        arcs: [
                            [-177, 351, -175, -116, -174, 352, -80, 353, 354]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Ireland"
                        },
                        id: "IRL",
                        arcs: [
                            [355, -289]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Iran"
                        },
                        id: "IRN",
                        arcs: [
                            [356, -6, 357, 358, 359, 360, -55, -34, -57, 361]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Iraq"
                        },
                        id: "IRQ",
                        arcs: [
                            [362, 363, 364, 365, 366, 367, -360]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Iceland"
                        },
                        id: "ISL",
                        arcs: [
                            [368]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Israel"
                        },
                        id: "ISR",
                        arcs: [
                            [369, 370, 371, -252, 372, 373, 374]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Italy"
                        },
                        id: "ITA",
                        arcs: [
                            [
                                [375]
                            ],
                            [
                                [376]
                            ],
                            [
                                [377, 378, -280, -162, -50]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Jamaica"
                        },
                        id: "JAM",
                        arcs: [
                            [379]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Jordan"
                        },
                        id: "JOR",
                        arcs: [
                            [-370, 380, -366, 381, 382, -372, 383]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Japan"
                        },
                        id: "JPN",
                        arcs: [
                            [
                                [384]
                            ],
                            [
                                [385]
                            ],
                            [
                                [386]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Kazakhstan"
                        },
                        id: "KAZ",
                        arcs: [
                            [387, 388, 389, 390, -181, 391]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Kenya"
                        },
                        id: "KEN",
                        arcs: [
                            [392, 393, 394, 395, -265, 396]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Kyrgyzstan"
                        },
                        id: "KGZ",
                        arcs: [
                            [-392, -180, 397, 398]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Cambodia"
                        },
                        id: "KHM",
                        arcs: [
                            [399, 400, 401, 402]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "South Korea"
                        },
                        id: "KOR",
                        arcs: [
                            [403, 404]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Kosovo"
                        },
                        id: "-99",
                        arcs: [
                            [-18, 405, 406, 407]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Kuwait"
                        },
                        id: "KWT",
                        arcs: [
                            [408, 409, -364]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Laos"
                        },
                        id: "LAO",
                        arcs: [
                            [410, 411, -172, 412, -401]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Lebanon"
                        },
                        id: "LBN",
                        arcs: [
                            [-374, 413, 414]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Liberia"
                        },
                        id: "LBR",
                        arcs: [
                            [415, 416, -297, -186]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Libya"
                        },
                        id: "LBY",
                        arcs: [
                            [417, -245, 418, 419, -250, 420, 421]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Sri Lanka"
                        },
                        id: "LKA",
                        arcs: [
                            [422]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Lesotho"
                        },
                        id: "LSO",
                        arcs: [
                            [423]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Lithuania"
                        },
                        id: "LTU",
                        arcs: [
                            [424, 425, 426, -93, 427]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Luxembourg"
                        },
                        id: "LUX",
                        arcs: [
                            [-226, -279, -65]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Latvia"
                        },
                        id: "LVA",
                        arcs: [
                            [428, -262, 429, -94, -427]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Morocco"
                        },
                        id: "MAR",
                        arcs: [
                            [-242, 430, 431]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Moldova"
                        },
                        id: "MDA",
                        arcs: [
                            [432, 433]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Madagascar"
                        },
                        id: "MDG",
                        arcs: [
                            [434]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Mexico"
                        },
                        id: "MEX",
                        arcs: [
                            [435, -98, -314, 436, 437]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Macedonia"
                        },
                        id: "MKD",
                        arcs: [
                            [-408, 438, -85, -310, -14]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Mali"
                        },
                        id: "MLI",
                        arcs: [
                            [439, -239, 440, -74, -188, -302, 441]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Myanmar"
                        },
                        id: "MMR",
                        arcs: [
                            [442, -78, -353, -173, -412, 443]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Montenegro"
                        },
                        id: "MNE",
                        arcs: [
                            [444, -326, -91, 445, -406, -17]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Mongolia"
                        },
                        id: "MNG",
                        arcs: [
                            [446, -183]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Mozambique"
                        },
                        id: "MOZ",
                        arcs: [
                            [447, 448, 449, 450, 451, 452, 453, 454]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Mauritania"
                        },
                        id: "MRT",
                        arcs: [
                            [455, 456, 457, -240, -440]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Malawi"
                        },
                        id: "MWI",
                        arcs: [
                            [-455, 458, 459]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Malaysia"
                        },
                        id: "MYS",
                        arcs: [
                            [
                                [460, 461]
                            ],
                            [
                                [-349, 462, -115, 463]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Namibia"
                        },
                        id: "NAM",
                        arcs: [
                            [464, -8, 465, -119, 466]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "New Caledonia"
                        },
                        id: "NCL",
                        arcs: [
                            [467]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Niger"
                        },
                        id: "NER",
                        arcs: [
                            [-75, -441, -238, -418, 468, -194, 469, -71]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Nigeria"
                        },
                        id: "NGA",
                        arcs: [
                            [470, -72, -470, -193]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Nicaragua"
                        },
                        id: "NIC",
                        arcs: [
                            [471, -324, 472, -213]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Netherlands"
                        },
                        id: "NLD",
                        arcs: [
                            [-227, -63, 473]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Norway"
                        },
                        id: "NOR",
                        arcs: [
                            [
                                [474, -272, 475, 476]
                            ],
                            [
                                [477]
                            ],
                            [
                                [478]
                            ],
                            [
                                [479]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Nepal"
                        },
                        id: "NPL",
                        arcs: [
                            [-352, -176]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "New Zealand"
                        },
                        id: "NZL",
                        arcs: [
                            [
                                [480]
                            ],
                            [
                                [481]
                            ]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Oman"
                        },
                        id: "OMN",
                        arcs: [
                            [
                                [482, 483, -22, 484]
                            ],
                            [
                                [-20, 485]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Pakistan"
                        },
                        id: "PAK",
                        arcs: [
                            [-178, -355, 486, -358, -5]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Panama"
                        },
                        id: "PAN",
                        arcs: [
                            [487, -215, 488, -208]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Peru"
                        },
                        id: "PER",
                        arcs: [
                            [-167, 489, -247, -211, -106, -102]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Philippines"
                        },
                        id: "PHL",
                        arcs: [
                            [
                                [490]
                            ],
                            [
                                [491]
                            ],
                            [
                                [492]
                            ],
                            [
                                [493]
                            ],
                            [
                                [494]
                            ],
                            [
                                [495]
                            ],
                            [
                                [496]
                            ]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Papua New Guinea"
                        },
                        id: "PNG",
                        arcs: [
                            [
                                [497]
                            ],
                            [
                                [498]
                            ],
                            [
                                [-345, 499]
                            ],
                            [
                                [500]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Poland"
                        },
                        id: "POL",
                        arcs: [
                            [-224, 501, 502, -428, -97, 503, 504, -221]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Puerto Rico"
                        },
                        id: "PRI",
                        arcs: [
                            [505]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "North Korea"
                        },
                        id: "PRK",
                        arcs: [
                            [506, 507, -405, 508, -169]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Portugal"
                        },
                        id: "PRT",
                        arcs: [
                            [-259, 509]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Paraguay"
                        },
                        id: "PRY",
                        arcs: [
                            [-104, -105, -26]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Qatar"
                        },
                        id: "QAT",
                        arcs: [
                            [510, 511]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Romania"
                        },
                        id: "ROU",
                        arcs: [
                            [512, -434, 513, 514, -81, 515, -333]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Russia"
                        },
                        id: "RUS",
                        arcs: [
                            [
                                [516]
                            ],
                            [
                                [-503, 517, -425]
                            ],
                            [
                                [518, 519]
                            ],
                            [
                                [520]
                            ],
                            [
                                [521]
                            ],
                            [
                                [522]
                            ],
                            [
                                [523]
                            ],
                            [
                                [524]
                            ],
                            [
                                [525]
                            ],
                            [
                                [526, -507, -184, -447, -182, -391, 527, -59, -293, 528, 529, -95, -430, -261, 530, -269, -475, 531, -520]
                            ],
                            [
                                [532]
                            ],
                            [
                                [533]
                            ],
                            [
                                [534]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Rwanda"
                        },
                        id: "RWA",
                        arcs: [
                            [535, -61, -198, 536]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Western Sahara"
                        },
                        id: "ESH",
                        arcs: [
                            [-241, -458, 537, -431]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Saudi Arabia"
                        },
                        id: "SAU",
                        arcs: [
                            [538, -382, -365, -410, 539, -512, 540, -23, -484, 541]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Sudan"
                        },
                        id: "SDN",
                        arcs: [
                            [542, 543, -123, 544, -421, -249, 545, -254, -268, 546]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "South Sudan"
                        },
                        id: "SSD",
                        arcs: [
                            [547, -266, -396, 548, -203, -125, 549, -543]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Senegal"
                        },
                        id: "SEN",
                        arcs: [
                            [550, -456, -442, -301, -306, 551, -304]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Solomon Islands"
                        },
                        id: "SLB",
                        arcs: [
                            [
                                [552]
                            ],
                            [
                                [553]
                            ],
                            [
                                [554]
                            ],
                            [
                                [555]
                            ],
                            [
                                [556]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Sierra Leone"
                        },
                        id: "SLE",
                        arcs: [
                            [557, -298, -417]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "El Salvador"
                        },
                        id: "SLV",
                        arcs: [
                            [558, -317, -322]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Somaliland"
                        },
                        id: "-99",
                        arcs: [
                            [-263, -231, 559, 560]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Somalia"
                        },
                        id: "SOM",
                        arcs: [
                            [-397, -264, -561, 561]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Republic of Serbia"
                        },
                        id: "SRB",
                        arcs: [
                            [-86, -439, -407, -446, -90, -325, -334, -516]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Suriname"
                        },
                        id: "SUR",
                        arcs: [
                            [562, -285, 563, -283, -110, -319]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Slovakia"
                        },
                        id: "SVK",
                        arcs: [
                            [-505, 564, -331, -54, -222]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Slovenia"
                        },
                        id: "SVN",
                        arcs: [
                            [-49, -335, -328, 565, -378]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Sweden"
                        },
                        id: "SWE",
                        arcs: [
                            [-476, -271, 566]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Swaziland"
                        },
                        id: "SWZ",
                        arcs: [
                            [567, -451]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Syria"
                        },
                        id: "SYR",
                        arcs: [
                            [-381, -375, -415, 568, 569, -367]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Chad"
                        },
                        id: "TCD",
                        arcs: [
                            [-469, -422, -545, -122, -195]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Togo"
                        },
                        id: "TGO",
                        arcs: [
                            [570, -296, -76, -69]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Thailand"
                        },
                        id: "THA",
                        arcs: [
                            [571, -462, 572, -444, -411, -400]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Tajikistan"
                        },
                        id: "TJK",
                        arcs: [
                            [-398, -179, -3, 573]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Turkmenistan"
                        },
                        id: "TKM",
                        arcs: [
                            [-357, 574, -389, 575, -1]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "East Timor"
                        },
                        id: "TLS",
                        arcs: [
                            [576, -337]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Trinidad and Tobago"
                        },
                        id: "TTO",
                        arcs: [
                            [577]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Tunisia"
                        },
                        id: "TUN",
                        arcs: [
                            [-244, 578, -419]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Turkey"
                        },
                        id: "TUR",
                        arcs: [
                            [
                                [-294, -36, -361, -368, -570, 579]
                            ],
                            [
                                [-311, -83, 580]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Taiwan"
                        },
                        id: "TWN",
                        arcs: [
                            [581]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "United Republic of Tanzania"
                        },
                        id: "TZA",
                        arcs: [
                            [-394, 582, -448, -460, 583, -199, -62, -536, 584]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Uganda"
                        },
                        id: "UGA",
                        arcs: [
                            [-537, -197, -549, -395, -585]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Ukraine"
                        },
                        id: "UKR",
                        arcs: [
                            [-530, 585, -514, -433, -513, -332, -565, -504, -96]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Uruguay"
                        },
                        id: "URY",
                        arcs: [
                            [-113, 586, -28]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "United States of America"
                        },
                        id: "USA",
                        arcs: [
                            [
                                [587]
                            ],
                            [
                                [588]
                            ],
                            [
                                [589]
                            ],
                            [
                                [590]
                            ],
                            [
                                [591]
                            ],
                            [
                                [592, -438, 593, -139]
                            ],
                            [
                                [594]
                            ],
                            [
                                [595]
                            ],
                            [
                                [596]
                            ],
                            [
                                [-141, 597]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Uzbekistan"
                        },
                        id: "UZB",
                        arcs: [
                            [-576, -388, -399, -574, -2]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Venezuela"
                        },
                        id: "VEN",
                        arcs: [
                            [598, -320, -108, -210]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Vietnam"
                        },
                        id: "VNM",
                        arcs: [
                            [599, -402, -413, -171]
                        ]
                    }, {
                        type: "MultiPolygon",
                        properties: {
                            name: "Vanuatu"
                        },
                        id: "VUT",
                        arcs: [
                            [
                                [600]
                            ],
                            [
                                [601]
                            ]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "West Bank"
                        },
                        id: "PSE",
                        arcs: [
                            [-384, -371]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Yemen"
                        },
                        id: "YEM",
                        arcs: [
                            [602, -542, -483]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "South Africa"
                        },
                        id: "ZAF",
                        arcs: [
                            [-467, -118, 603, -452, -568, -450, 604],
                            [-424]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Zambia"
                        },
                        id: "ZMB",
                        arcs: [
                            [-459, -454, 605, -120, -466, -7, -200, -584]
                        ]
                    }, {
                        type: "Polygon",
                        properties: {
                            name: "Zimbabwe"
                        },
                        id: "ZWE",
                        arcs: [
                            [-604, -121, -606, -453]
                        ]
                    }]
                }
            },
            arcs: [
                [
                    [6700, 7164],
                    [28, -23],
                    [21, 8],
                    [6, 27],
                    [22, 9],
                    [15, 18],
                    [6, 47],
                    [23, 11],
                    [5, 21],
                    [13, -15],
                    [8, -2]
                ],
                [
                    [6847, 7265],
                    [16, -1],
                    [20, -12]
                ],
                [
                    [6883, 7252],
                    [9, -7],
                    [20, 19],
                    [9, -12],
                    [9, 27],
                    [17, -1],
                    [4, 9],
                    [3, 24],
                    [12, 20],
                    [15, -13],
                    [-3, -18],
                    [9, -3],
                    [-3, -50],
                    [11, -19],
                    [10, 12],
                    [12, 6],
                    [17, 27],
                    [19, -5],
                    [29, 0]
                ],
                [
                    [7082, 7268],
                    [5, -17]
                ],
                [
                    [7087, 7251],
                    [-16, -6],
                    [-14, -11],
                    [-32, -7],
                    [-30, -13],
                    [-16, -25],
                    [6, -25],
                    [4, -30],
                    [-14, -25],
                    [1, -22],
                    [-8, -22],
                    [-26, 2],
                    [11, -39],
                    [-18, -15],
                    [-12, -35],
                    [2, -36],
                    [-11, -16],
                    [-10, 5],
                    [-22, -8],
                    [-3, -16],
                    [-20, 0],
                    [-16, -34],
                    [-1, -50],
                    [-36, -24],
                    [-19, 5],
                    [-6, -13],
                    [-16, 7],
                    [-28, -8],
                    [-47, 30]
                ],
                [
                    [6690, 6820],
                    [25, 53],
                    [-2, 38],
                    [-21, 10],
                    [-2, 38],
                    [-9, 47],
                    [12, 32],
                    [-12, 9],
                    [7, 43],
                    [12, 74]
                ],
                [
                    [5664, 4412],
                    [3, -18],
                    [-4, -29],
                    [5, -28],
                    [-4, -22],
                    [3, -20],
                    [-58, 1],
                    [-2, -188],
                    [19, -49],
                    [18, -37]
                ],
                [
                    [5644, 4022],
                    [-51, -24],
                    [-67, 9],
                    [-19, 28],
                    [-113, -3],
                    [-4, -4],
                    [-17, 27],
                    [-18, 2],
                    [-16, -10],
                    [-14, -12]
                ],
                [
                    [5325, 4035],
                    [-2, 38],
                    [4, 51],
                    [9, 55],
                    [2, 25],
                    [9, 53],
                    [6, 24],
                    [16, 39],
                    [9, 26],
                    [3, 44],
                    [-1, 34],
                    [-9, 21],
                    [-7, 36],
                    [-7, 35],
                    [2, 12],
                    [8, 24],
                    [-8, 57],
                    [-6, 39],
                    [-14, 38],
                    [3, 11]
                ],
                [
                    [5342, 4697],
                    [11, 8],
                    [8, -1],
                    [10, 7],
                    [82, -1],
                    [7, -44],
                    [8, -35],
                    [6, -19],
                    [11, -31],
                    [18, 5],
                    [9, 8],
                    [16, -8],
                    [4, 14],
                    [7, 35],
                    [17, 2],
                    [2, 10],
                    [14, 1],
                    [-3, -22],
                    [34, 1],
                    [1, -37],
                    [5, -23],
                    [-4, -36],
                    [2, -36],
                    [9, -22],
                    [-1, -70],
                    [7, 5],
                    [12, -1],
                    [17, 8],
                    [13, -3]
                ],
                [
                    [5338, 4715],
                    [-8, 45]
                ],
                [
                    [5330, 4760],
                    [12, 25],
                    [8, 10],
                    [10, -20]
                ],
                [
                    [5360, 4775],
                    [-10, -12],
                    [-4, -16],
                    [-1, -25],
                    [-7, -7]
                ],
                [
                    [5571, 7530],
                    [-3, -20],
                    [4, -25],
                    [11, -15]
                ],
                [
                    [5583, 7470],
                    [0, -15],
                    [-9, -9],
                    [-2, -19],
                    [-13, -29]
                ],
                [
                    [5559, 7398],
                    [-5, 5],
                    [0, 13],
                    [-15, 19],
                    [-3, 29],
                    [2, 40],
                    [4, 18],
                    [-4, 10]
                ],
                [
                    [5538, 7532],
                    [-2, 18],
                    [12, 29],
                    [1, -11],
                    [8, 6]
                ],
                [
                    [5557, 7574],
                    [6, -16],
                    [7, -6],
                    [1, -22]
                ],
                [
                    [6432, 6490],
                    [5, 3],
                    [1, -16],
                    [22, 9],
                    [23, -2],
                    [17, -1],
                    [19, 39],
                    [20, 38],
                    [18, 37]
                ],
                [
                    [6557, 6597],
                    [5, -20]
                ],
                [
                    [6562, 6577],
                    [4, -47]
                ],
                [
                    [6566, 6530],
                    [-14, 0],
                    [-3, -39],
                    [5, -8],
                    [-12, -12],
                    [0, -24],
                    [-8, -24],
                    [-1, -24]
                ],
                [
                    [6533, 6399],
                    [-6, -12],
                    [-83, 29],
                    [-11, 60],
                    [-1, 14]
                ],
                [
                    [3140, 1814],
                    [-17, 2],
                    [-30, 0],
                    [0, 132]
                ],
                [
                    [3093, 1948],
                    [11, -27],
                    [14, -45],
                    [36, -35],
                    [39, -15],
                    [-13, -30],
                    [-26, -2],
                    [-14, 20]
                ],
                [
                    [3258, 3743],
                    [51, -96],
                    [23, -9],
                    [34, -44],
                    [29, -23],
                    [4, -26],
                    [-28, -90],
                    [28, -16],
                    [32, -9],
                    [22, 10],
                    [25, 45],
                    [4, 52]
                ],
                [
                    [3482, 3537],
                    [14, 11],
                    [14, -34],
                    [-1, -47],
                    [-23, -33],
                    [-19, -24],
                    [-31, -57],
                    [-37, -81]
                ],
                [
                    [3399, 3272],
                    [-7, -47],
                    [-7, -61],
                    [0, -58],
                    [-6, -14],
                    [-2, -38]
                ],
                [
                    [3377, 3054],
                    [-2, -31],
                    [35, -50],
                    [-4, -41],
                    [18, -26],
                    [-2, -29],
                    [-26, -75],
                    [-42, -32],
                    [-55, -12],
                    [-31, 6],
                    [6, -36],
                    [-6, -44],
                    [5, -30],
                    [-16, -20],
                    [-29, -8],
                    [-26, 21],
                    [-11, -15],
                    [4, -59],
                    [18, -18],
                    [16, 19],
                    [8, -31],
                    [-26, -18],
                    [-22, -37],
                    [-4, -59],
                    [-7, -32],
                    [-26, 0],
                    [-22, -31],
                    [-8, -44],
                    [28, -43],
                    [26, -12],
                    [-9, -53],
                    [-33, -33],
                    [-18, -70],
                    [-25, -23],
                    [-12, -28],
                    [9, -61],
                    [19, -34],
                    [-12, 3]
                ],
                [
                    [3095, 1968],
                    [-26, 9],
                    [-67, 8],
                    [-11, 34],
                    [0, 45],
                    [-18, -4],
                    [-10, 21],
                    [-3, 63],
                    [22, 26],
                    [9, 37],
                    [-4, 30],
                    [15, 51],
                    [10, 78],
                    [-3, 35],
                    [12, 11],
                    [-3, 22],
                    [-13, 12],
                    [10, 25],
                    [-13, 22],
                    [-6, 68],
                    [11, 12],
                    [-5, 72],
                    [7, 61],
                    [7, 52],
                    [17, 22],
                    [-9, 58],
                    [0, 54],
                    [21, 38],
                    [-1, 50],
                    [16, 57],
                    [0, 55],
                    [-7, 11],
                    [-13, 102],
                    [17, 60],
                    [-2, 58],
                    [10, 53],
                    [18, 56],
                    [20, 36],
                    [-9, 24],
                    [6, 19],
                    [-1, 98],
                    [30, 29],
                    [10, 62],
                    [-3, 14]
                ],
                [
                    [3136, 3714],
                    [23, 54],
                    [36, -15],
                    [16, -42],
                    [11, 47],
                    [32, -2],
                    [4, -13]
                ],
                [
                    [6210, 7485],
                    [39, 9]
                ],
                [
                    [6249, 7494],
                    [5, -15],
                    [11, -10],
                    [-6, -15],
                    [15, -21],
                    [-8, -18],
                    [12, -16],
                    [13, -10],
                    [0, -41]
                ],
                [
                    [6291, 7348],
                    [-10, -2]
                ],
                [
                    [6281, 7346],
                    [-11, 34],
                    [0, 10],
                    [-12, -1],
                    [-9, 16],
                    [-5, -1]
                ],
                [
                    [6244, 7404],
                    [-11, 17],
                    [-21, 15],
                    [3, 28],
                    [-5, 21]
                ],
                [
                    [3345, 329],
                    [-8, -30],
                    [-8, -27],
                    [-59, 8],
                    [-62, -3],
                    [-34, 20],
                    [0, 2],
                    [-16, 17],
                    [63, -2],
                    [60, -6],
                    [20, 24],
                    [15, 21],
                    [29, -24]
                ],
                [
                    [577, 361],
                    [-53, -8],
                    [-36, 21],
                    [-17, 21],
                    [-1, 3],
                    [-18, 16],
                    [17, 22],
                    [52, -9],
                    [28, -18],
                    [21, -21],
                    [7, -27]
                ],
                [
                    [3745, 447],
                    [35, -26],
                    [12, -36],
                    [3, -25],
                    [1, -30],
                    [-43, -19],
                    [-45, -15],
                    [-52, -14],
                    [-59, -11],
                    [-65, 3],
                    [-37, 20],
                    [5, 24],
                    [59, 16],
                    [24, 20],
                    [18, 26],
                    [12, 22],
                    [17, 20],
                    [18, 25],
                    [14, 0],
                    [41, 12],
                    [42, -12]
                ],
                [
                    [1633, 715],
                    [36, -9],
                    [33, 10],
                    [-16, -20],
                    [-26, -15],
                    [-39, 4],
                    [-27, 21],
                    [6, 20],
                    [33, -11]
                ],
                [
                    [1512, 716],
                    [43, -23],
                    [-17, 3],
                    [-36, 5],
                    [-38, 17],
                    [20, 12],
                    [28, -14]
                ],
                [
                    [2250, 808],
                    [31, -8],
                    [30, 7],
                    [17, -34],
                    [-22, 5],
                    [-34, -2],
                    [-34, 2],
                    [-38, -4],
                    [-28, 12],
                    [-15, 24],
                    [18, 11],
                    [35, -8],
                    [40, -5]
                ],
                [
                    [3098, 866],
                    [4, -27],
                    [-5, -23],
                    [-8, -22],
                    [-33, -8],
                    [-31, -12],
                    [-36, 1],
                    [14, 24],
                    [-33, -9],
                    [-31, -8],
                    [-21, 18],
                    [-2, 24],
                    [30, 23],
                    [20, 7],
                    [32, -2],
                    [8, 30],
                    [1, 22],
                    [0, 47],
                    [16, 28],
                    [25, 9],
                    [15, -22],
                    [6, -22],
                    [12, -26],
                    [10, -26],
                    [7, -26]
                ],
                [
                    [3371, 1268],
                    [-11, -13],
                    [-21, 9],
                    [-23, -6],
                    [-19, -14],
                    [-20, -15],
                    [-14, -17],
                    [-4, -23],
                    [2, -22],
                    [13, -20],
                    [-19, -14],
                    [-26, -4],
                    [-15, -20],
                    [-17, -19],
                    [-17, -25],
                    [-4, -22],
                    [9, -24],
                    [15, -19],
                    [23, -14],
                    [21, -18],
                    [12, -23],
                    [6, -22],
                    [8, -24],
                    [13, -19],
                    [8, -22],
                    [4, -55],
                    [8, -22],
                    [2, -23],
                    [9, -23],
                    [-4, -31],
                    [-15, -24],
                    [-17, -20],
                    [-37, -8],
                    [-12, -21],
                    [-17, -20],
                    [-42, -22],
                    [-37, -9],
                    [-35, -13],
                    [-37, -13],
                    [-22, -24],
                    [-45, -2],
                    [-49, 2],
                    [-44, -4],
                    [-47, 0],
                    [9, -24],
                    [42, -10],
                    [31, -16],
                    [18, -21],
                    [-31, -19],
                    [-48, 6],
                    [-40, -15],
                    [-2, -24],
                    [-1, -23],
                    [33, -20],
                    [6, -22],
                    [35, -22],
                    [59, -9],
                    [50, -16],
                    [40, -19],
                    [50, -18],
                    [70, -10],
                    [68, -16],
                    [47, -17],
                    [52, -20],
                    [27, -28],
                    [13, -22],
                    [34, 21],
                    [46, 17],
                    [48, 19],
                    [58, 15],
                    [49, 16],
                    [69, 1],
                    [68, -8],
                    [56, -14],
                    [18, 26],
                    [39, 17],
                    [70, 1],
                    [55, 13],
                    [52, 13],
                    [58, 8],
                    [62, 10],
                    [43, 15],
                    [-20, 21],
                    [-12, 21],
                    [0, 22],
                    [-54, -2],
                    [-57, -10],
                    [-54, 0],
                    [-8, 22],
                    [4, 44],
                    [12, 13],
                    [40, 14],
                    [47, 14],
                    [34, 17],
                    [33, 18],
                    [25, 23],
                    [38, 10],
                    [38, 8],
                    [19, 5],
                    [43, 2],
                    [41, 8],
                    [34, 12],
                    [34, 14],
                    [30, 14],
                    [39, 18],
                    [24, 20],
                    [26, 17],
                    [9, 24],
                    [-30, 13],
                    [10, 25],
                    [18, 18],
                    [29, 12],
                    [31, 14],
                    [28, 18],
                    [22, 23],
                    [13, 28],
                    [21, 16],
                    [33, -3],
                    [13, -20],
                    [34, -2],
                    [1, 22],
                    [14, 23],
                    [30, -6],
                    [7, -22],
                    [33, -3],
                    [36, 10],
                    [35, 7],
                    [31, -3],
                    [12, -25],
                    [31, 20],
                    [28, 10],
                    [31, 9],
                    [31, 8],
                    [29, 14],
                    [31, 9],
                    [24, 13],
                    [17, 20],
                    [20, -15],
                    [29, 8],
                    [20, -27],
                    [16, -21],
                    [32, 11],
                    [12, 24],
                    [28, 16],
                    [37, -4],
                    [11, -22],
                    [22, 22],
                    [30, 7],
                    [33, 3],
                    [29, -2],
                    [31, -7],
                    [30, -3],
                    [13, -20],
                    [18, -17],
                    [31, 10],
                    [32, 3],
                    [32, 0],
                    [31, 1],
                    [28, 8],
                    [29, 7],
                    [25, 16],
                    [26, 11],
                    [28, 5],
                    [21, 17],
                    [15, 32],
                    [16, 20],
                    [29, -10],
                    [11, -21],
                    [24, -13],
                    [29, 4],
                    [19, -21],
                    [21, -15],
                    [28, 14],
                    [10, 26],
                    [25, 10],
                    [29, 20],
                    [27, 8],
                    [33, 11],
                    [22, 13],
                    [22, 14],
                    [22, 13],
                    [26, -7],
                    [25, 21],
                    [18, 16],
                    [26, -1],
                    [23, 14],
                    [6, 21],
                    [23, 16],
                    [23, 11],
                    [28, 10],
                    [25, 4],
                    [25, -3],
                    [26, -6],
                    [22, -16],
                    [3, -26],
                    [24, -19],
                    [17, -17],
                    [33, -7],
                    [19, -16],
                    [23, -16],
                    [26, -3],
                    [23, 11],
                    [24, 24],
                    [26, -12],
                    [27, -7],
                    [26, -7],
                    [27, -5],
                    [28, 0],
                    [23, -61],
                    [-1, -15],
                    [-4, -27],
                    [-26, -15],
                    [-22, -22],
                    [4, -23],
                    [31, 1],
                    [-4, -23],
                    [-14, -22],
                    [-13, -24],
                    [21, -19],
                    [32, -6],
                    [32, 11],
                    [15, 23],
                    [10, 22],
                    [15, 18],
                    [17, 18],
                    [7, 21],
                    [15, 29],
                    [18, 5],
                    [31, 3],
                    [28, 7],
                    [28, 9],
                    [14, 23],
                    [8, 22],
                    [19, 22],
                    [27, 15],
                    [23, 12],
                    [16, 19],
                    [15, 11],
                    [21, 9],
                    [27, -6],
                    [25, 6],
                    [28, 7],
                    [30, -4],
                    [20, 17],
                    [14, 39],
                    [11, -16],
                    [13, -28],
                    [23, -12],
                    [27, -4],
                    [26, 7],
                    [29, -5],
                    [26, -1],
                    [17, 6],
                    [24, -4],
                    [21, -12],
                    [25, 8],
                    [30, 0],
                    [25, 8],
                    [29, -8],
                    [19, 19],
                    [14, 20],
                    [19, 16],
                    [35, 44],
                    [18, -8],
                    [21, -16],
                    [18, -21],
                    [36, -36],
                    [27, -1],
                    [25, 0],
                    [30, 7],
                    [30, 8],
                    [23, 16],
                    [19, 18],
                    [31, 2],
                    [21, 13],
                    [22, -12],
                    [14, -18],
                    [19, -19],
                    [31, 2],
                    [19, -15],
                    [33, -15],
                    [35, -5],
                    [29, 4],
                    [21, 19],
                    [19, 18],
                    [25, 5],
                    [25, -8],
                    [29, -6],
                    [26, 9],
                    [25, 0],
                    [24, -6],
                    [26, -5],
                    [25, 10],
                    [30, 9],
                    [28, 3],
                    [32, 0],
                    [25, 5],
                    [25, 5],
                    [8, 29],
                    [1, 24],
                    [17, -16],
                    [5, -27],
                    [10, -24],
                    [11, -20],
                    [23, -10],
                    [32, 4],
                    [36, 1],
                    [25, 3],
                    [37, 0],
                    [26, 1],
                    [36, -2],
                    [31, -5],
                    [20, -18],
                    [-5, -22],
                    [18, -18],
                    [30, -13],
                    [31, -15],
                    [35, -11],
                    [38, -9],
                    [28, -9],
                    [32, -2],
                    [18, 20],
                    [24, -16],
                    [21, -19],
                    [25, -13],
                    [34, -6],
                    [32, -7],
                    [13, -23],
                    [32, -14],
                    [21, -21],
                    [31, -9],
                    [32, 1],
                    [30, -4],
                    [33, 1],
                    [34, -4],
                    [31, -8],
                    [28, -14],
                    [29, -12],
                    [20, -17],
                    [-3, -23],
                    [-15, -21],
                    [-13, -27],
                    [-9, -21],
                    [-14, -24],
                    [-36, -9],
                    [-16, -21],
                    [-36, -13],
                    [-13, -23],
                    [-19, -22],
                    [-20, -18],
                    [-11, -25],
                    [-7, -22],
                    [-3, -26],
                    [0, -22],
                    [16, -23],
                    [6, -22],
                    [13, -21],
                    [52, -8],
                    [11, -26],
                    [-50, -9],
                    [-43, -13],
                    [-52, -2],
                    [-24, -34],
                    [-5, -27],
                    [-12, -22],
                    [-14, -22],
                    [37, -20],
                    [14, -24],
                    [24, -22],
                    [33, -20],
                    [39, -19],
                    [42, -18],
                    [64, -19],
                    [14, -29],
                    [80, -12],
                    [5, -5],
                    [21, -17],
                    [77, 15],
                    [63, -19],
                    [48, -14],
                    [-9997, -1],
                    [24, 35],
                    [50, -19],
                    [3, 2],
                    [30, 19],
                    [4, 0],
                    [3, -1],
                    [40, -25],
                    [35, 25],
                    [7, 3],
                    [81, 11],
                    [27, -14],
                    [13, -7],
                    [41, -20],
                    [79, -15],
                    [63, -18],
                    [107, -14],
                    [80, 16],
                    [118, -11],
                    [67, -19],
                    [73, 17],
                    [78, 17],
                    [6, 27],
                    [-110, 3],
                    [-89, 14],
                    [-24, 23],
                    [-74, 12],
                    [5, 27],
                    [10, 24],
                    [10, 22],
                    [-5, 25],
                    [-46, 16],
                    [-22, 21],
                    [-43, 18],
                    [68, -3],
                    [64, 9],
                    [40, -20],
                    [50, 18],
                    [45, 22],
                    [23, 19],
                    [-10, 25],
                    [-36, 16],
                    [-41, 17],
                    [-57, 4],
                    [-50, 8],
                    [-54, 6],
                    [-18, 22],
                    [-36, 18],
                    [-21, 21],
                    [-9, 67],
                    [14, -6],
                    [25, -18],
                    [45, 6],
                    [44, 8],
                    [23, -26],
                    [44, 6],
                    [37, 13],
                    [35, 16],
                    [32, 20],
                    [41, 5],
                    [-1, 22],
                    [-9, 22],
                    [8, 21],
                    [36, 11],
                    [16, -20],
                    [42, 12],
                    [32, 15],
                    [40, 1],
                    [38, 6],
                    [37, 13],
                    [30, 13],
                    [34, 13],
                    [22, -4],
                    [19, -4],
                    [41, 8],
                    [37, -10],
                    [38, 1],
                    [37, 8],
                    [37, -6],
                    [41, -6],
                    [39, 3],
                    [40, -2],
                    [42, -1],
                    [38, 3],
                    [28, 17],
                    [34, 9],
                    [35, -13],
                    [33, 11],
                    [30, 21],
                    [18, -19],
                    [9, -21],
                    [18, -19],
                    [29, 17],
                    [33, -22],
                    [38, -7],
                    [32, -16],
                    [39, 3],
                    [36, 11],
                    [41, -3],
                    [38, -8],
                    [38, -10],
                    [15, 25],
                    [-18, 20],
                    [-14, 21],
                    [-36, 5],
                    [-15, 22],
                    [-6, 22],
                    [-10, 43],
                    [21, -8],
                    [36, -3],
                    [36, 3],
                    [33, -9],
                    [28, -17],
                    [12, -21],
                    [38, -4],
                    [36, 9],
                    [38, 11],
                    [34, 7],
                    [28, -14],
                    [37, 5],
                    [24, 45],
                    [23, -27],
                    [32, -10],
                    [34, 6],
                    [23, -23],
                    [37, -3],
                    [33, -7],
                    [34, -12],
                    [21, 22],
                    [11, 20],
                    [28, -23],
                    [38, 6],
                    [28, -13],
                    [19, -19],
                    [37, 5],
                    [29, 13],
                    [29, 15],
                    [33, 8],
                    [39, 7],
                    [36, 8],
                    [27, 13],
                    [16, 19],
                    [7, 25],
                    [-3, 24],
                    [-9, 24],
                    [-10, 23],
                    [-9, 23],
                    [-7, 21],
                    [-1, 23],
                    [2, 23],
                    [13, 22],
                    [11, 24],
                    [5, 23],
                    [-6, 26],
                    [-3, 23],
                    [14, 27],
                    [15, 17],
                    [18, 22],
                    [19, 19],
                    [22, 17],
                    [11, 25],
                    [15, 17],
                    [18, 15],
                    [26, 3],
                    [18, 19],
                    [19, 11],
                    [23, 7],
                    [20, 15],
                    [16, 19],
                    [22, 7],
                    [16, -15],
                    [-10, -20],
                    [-29, -17]
                ],
                [
                    [6914, 2185],
                    [18, -19],
                    [26, -7],
                    [1, -11],
                    [-7, -27],
                    [-43, -4],
                    [-1, 31],
                    [4, 25],
                    [2, 12]
                ],
                [
                    [9038, 2648],
                    [27, -21],
                    [15, 8],
                    [22, 12],
                    [16, -4],
                    [2, -70],
                    [-9, -21],
                    [-3, -47],
                    [-10, 16],
                    [-19, -41],
                    [-6, 3],
                    [-17, 2],
                    [-17, 50],
                    [-4, 39],
                    [-16, 52],
                    [1, 27],
                    [18, -5]
                ],
                [
                    [8987, 4244],
                    [10, -46],
                    [18, 22],
                    [9, -25],
                    [13, -23],
                    [-3, -26],
                    [6, -51],
                    [5, -29],
                    [7, -7],
                    [7, -51],
                    [-3, -30],
                    [9, -40],
                    [31, -31],
                    [19, -28],
                    [19, -26],
                    [-4, -14],
                    [16, -37],
                    [11, -64],
                    [11, 13],
                    [11, -26],
                    [7, 9],
                    [5, -63],
                    [19, -36],
                    [13, -22],
                    [22, -48],
                    [8, -48],
                    [1, -33],
                    [-2, -37],
                    [13, -50],
                    [-2, -52],
                    [-5, -28],
                    [-7, -52],
                    [1, -34],
                    [-6, -43],
                    [-12, -53],
                    [-21, -29],
                    [-10, -46],
                    [-9, -29],
                    [-8, -51],
                    [-11, -30],
                    [-7, -44],
                    [-4, -41],
                    [2, -18],
                    [-16, -21],
                    [-31, -2],
                    [-26, -24],
                    [-13, -23],
                    [-17, -26],
                    [-23, 27],
                    [-17, 10],
                    [5, 31],
                    [-15, -11],
                    [-25, -43],
                    [-24, 16],
                    [-15, 9],
                    [-16, 4],
                    [-27, 17],
                    [-18, 37],
                    [-5, 45],
                    [-7, 30],
                    [-13, 24],
                    [-27, 7],
                    [9, 28],
                    [-7, 44],
                    [-13, -41],
                    [-25, -11],
                    [14, 33],
                    [5, 34],
                    [10, 29],
                    [-2, 44],
                    [-22, -50],
                    [-18, -21],
                    [-10, -47],
                    [-22, 25],
                    [1, 31],
                    [-18, 43],
                    [-14, 22],
                    [5, 14],
                    [-36, 35],
                    [-19, 2],
                    [-27, 29],
                    [-50, -6],
                    [-36, -21],
                    [-31, -20],
                    [-27, 4],
                    [-29, -30],
                    [-24, -14],
                    [-6, -31],
                    [-10, -24],
                    [-23, -1],
                    [-18, -5],
                    [-24, 10],
                    [-20, -6],
                    [-19, -3],
                    [-17, -31],
                    [-8, 2],
                    [-14, -16],
                    [-13, -19],
                    [-21, 2],
                    [-18, 0],
                    [-30, 38],
                    [-15, 11],
                    [1, 34],
                    [14, 8],
                    [4, 14],
                    [-1, 21],
                    [4, 41],
                    [-3, 35],
                    [-15, 60],
                    [-4, 33],
                    [1, 34],
                    [-11, 38],
                    [-1, 18],
                    [-12, 23],
                    [-4, 47],
                    [-16, 46],
                    [-4, 26],
                    [13, -26],
                    [-10, 55],
                    [14, -17],
                    [8, -23],
                    [0, 30],
                    [-14, 47],
                    [-3, 18],
                    [-6, 18],
                    [3, 34],
                    [6, 15],
                    [4, 29],
                    [-3, 35],
                    [11, 42],
                    [2, -45],
                    [12, 41],
                    [22, 20],
                    [14, 25],
                    [21, 22],
                    [13, 4],
                    [7, -7],
                    [22, 22],
                    [17, 6],
                    [4, 13],
                    [8, 6],
                    [15, -2],
                    [29, 18],
                    [15, 26],
                    [7, 31],
                    [17, 30],
                    [1, 24],
                    [1, 32],
                    [19, 50],
                    [12, -51],
                    [12, 12],
                    [-10, 28],
                    [9, 29],
                    [12, -13],
                    [3, 45],
                    [15, 29],
                    [7, 23],
                    [14, 10],
                    [0, 17],
                    [13, -7],
                    [0, 15],
                    [12, 8],
                    [14, 8],
                    [20, -27],
                    [16, -35],
                    [17, 0],
                    [18, -6],
                    [-6, 33],
                    [13, 47],
                    [13, 15],
                    [-5, 15],
                    [12, 34],
                    [17, 21],
                    [14, -7],
                    [24, 11],
                    [-1, 30],
                    [-20, 19],
                    [15, 9],
                    [18, -15],
                    [15, -24],
                    [23, -15],
                    [8, 6],
                    [17, -18],
                    [17, 17],
                    [10, -5],
                    [7, 11],
                    [12, -29],
                    [-7, -32],
                    [-11, -24],
                    [-9, -2],
                    [3, -23],
                    [-8, -30],
                    [-10, -29],
                    [2, -17],
                    [22, -32],
                    [21, -19],
                    [15, -20],
                    [20, -35],
                    [8, 0],
                    [14, -15],
                    [4, -19],
                    [27, -20],
                    [18, 20],
                    [6, 32],
                    [5, 26],
                    [4, 33],
                    [8, 47],
                    [-4, 28],
                    [2, 17],
                    [-3, 34],
                    [4, 45],
                    [5, 12],
                    [-4, 20],
                    [7, 31],
                    [5, 32],
                    [1, 17],
                    [10, 22],
                    [8, -29],
                    [2, -37],
                    [7, -7],
                    [1, -25],
                    [10, -30],
                    [2, -33],
                    [-1, -22]
                ],
                [
                    [5471, 7900],
                    [-2, -24],
                    [-16, 0],
                    [6, -13],
                    [-9, -38]
                ],
                [
                    [5450, 7825],
                    [-6, -10],
                    [-24, -1],
                    [-14, -13],
                    [-23, 4]
                ],
                [
                    [5383, 7805],
                    [-40, 15],
                    [-6, 21],
                    [-27, -10],
                    [-4, -12],
                    [-16, 9]
                ],
                [
                    [5290, 7828],
                    [-15, 1],
                    [-12, 11],
                    [4, 15],
                    [-1, 10]
                ],
                [
                    [5266, 7865],
                    [8, 3],
                    [14, -16],
                    [4, 16],
                    [25, -3],
                    [20, 11],
                    [13, -2],
                    [9, -12],
                    [2, 10],
                    [-4, 38],
                    [10, 8],
                    [10, 27]
                ],
                [
                    [5377, 7945],
                    [21, -19],
                    [15, 24],
                    [10, 5],
                    [22, -18],
                    [13, 3],
                    [13, -12]
                ],
                [
                    [5471, 7928],
                    [-3, -7],
                    [3, -21]
                ],
                [
                    [6281, 7346],
                    [-19, 8],
                    [-14, 27],
                    [-4, 23]
                ],
                [
                    [6349, 7527],
                    [15, -31],
                    [14, -42],
                    [13, -2],
                    [8, -16],
                    [-23, -5],
                    [-5, -46],
                    [-4, -21],
                    [-11, -13],
                    [1, -30]
                ],
                [
                    [6357, 7321],
                    [-7, -3],
                    [-17, 31],
                    [10, 30],
                    [-9, 17],
                    [-10, -4],
                    [-33, -44]
                ],
                [
                    [6249, 7494],
                    [6, 10],
                    [21, -17],
                    [15, -4],
                    [4, 7],
                    [-14, 32],
                    [7, 9]
                ],
                [
                    [6288, 7531],
                    [8, -2],
                    [19, -36],
                    [13, -4],
                    [4, 15],
                    [17, 23]
                ],
                [
                    [5814, 4792],
                    [-1, 71],
                    [-7, 27]
                ],
                [
                    [5806, 4890],
                    [17, -5],
                    [8, 34],
                    [15, -4]
                ],
                [
                    [5846, 4915],
                    [1, -23],
                    [6, -14],
                    [1, -19],
                    [-7, -12],
                    [-11, -31],
                    [-10, -22],
                    [-12, -2]
                ],
                [
                    [5092, 8091],
                    [20, -5],
                    [26, 12],
                    [17, -25],
                    [16, -14]
                ],
                [
                    [5171, 8059],
                    [-4, -40]
                ],
                [
                    [5167, 8019],
                    [-7, -2],
                    [-3, -33]
                ],
                [
                    [5157, 7984],
                    [-24, 26],
                    [-14, -4],
                    [-20, 28],
                    [-13, 23],
                    [-13, 1],
                    [-4, 21]
                ],
                [
                    [5069, 8079],
                    [23, 12]
                ],
                [
                    [5074, 5427],
                    [-23, -7]
                ],
                [
                    [5051, 5420],
                    [-7, 41],
                    [2, 136],
                    [-6, 12],
                    [-1, 29],
                    [-10, 21],
                    [-8, 17],
                    [3, 31]
                ],
                [
                    [5024, 5707],
                    [10, 7],
                    [6, 26],
                    [13, 5],
                    [6, 18]
                ],
                [
                    [5059, 5763],
                    [10, 17],
                    [10, 0],
                    [21, -34]
                ],
                [
                    [5100, 5746],
                    [-1, -19],
                    [6, -35],
                    [-6, -24],
                    [3, -16],
                    [-13, -37],
                    [-9, -18],
                    [-5, -37],
                    [1, -38],
                    [-2, -95]
                ],
                [
                    [4921, 5627],
                    [-19, 15],
                    [-13, -2],
                    [-10, -15],
                    [-12, 13],
                    [-5, 19],
                    [-13, 13]
                ],
                [
                    [4849, 5670],
                    [-1, 34],
                    [7, 26],
                    [-1, 20],
                    [23, 48],
                    [4, 41],
                    [7, 14],
                    [14, -8],
                    [11, 12],
                    [4, 16],
                    [22, 26],
                    [5, 19],
                    [26, 24],
                    [15, 9],
                    [7, -12],
                    [18, 0]
                ],
                [
                    [5010, 5939],
                    [-2, -28],
                    [3, -27],
                    [16, -39],
                    [1, -28],
                    [32, -14],
                    [-1, -40]
                ],
                [
                    [5024, 5707],
                    [-24, 1]
                ],
                [
                    [5e3, 5708],
                    [-13, 5],
                    [-9, -9],
                    [-12, 4],
                    [-48, -3],
                    [-1, -33],
                    [4, -45]
                ],
                [
                    [7573, 6360],
                    [0, -43],
                    [-10, 9],
                    [2, -47]
                ],
                [
                    [7565, 6279],
                    [-8, 30],
                    [-1, 31],
                    [-6, 28],
                    [-11, 34],
                    [-26, 3],
                    [3, -25],
                    [-9, -32],
                    [-12, 12],
                    [-4, -11],
                    [-8, 6],
                    [-11, 5]
                ],
                [
                    [7472, 6360],
                    [-4, 49],
                    [-10, 45],
                    [5, 35],
                    [-17, 16],
                    [6, 22],
                    [18, 22],
                    [-20, 31],
                    [9, 40],
                    [22, -26],
                    [14, -3],
                    [2, -41],
                    [26, -8],
                    [26, 1],
                    [16, -10],
                    [-13, -50],
                    [-12, -3],
                    [-9, -34],
                    [16, -31],
                    [4, 38],
                    [8, 0],
                    [14, -93]
                ],
                [
                    [5629, 7671],
                    [8, -25],
                    [11, 5],
                    [21, -9],
                    [41, -4],
                    [13, 16],
                    [33, 13],
                    [20, -21],
                    [17, -6]
                ],
                [
                    [5793, 7640],
                    [-15, -25],
                    [-10, -42],
                    [9, -34]
                ],
                [
                    [5777, 7539],
                    [-24, 8],
                    [-28, -18]
                ],
                [
                    [5725, 7529],
                    [0, -30],
                    [-26, -5],
                    [-19, 20],
                    [-22, -16],
                    [-21, 2]
                ],
                [
                    [5637, 7500],
                    [-2, 39],
                    [-14, 19]
                ],
                [
                    [5621, 7558],
                    [5, 8],
                    [-3, 7],
                    [4, 19],
                    [11, 18],
                    [-14, 26],
                    [-2, 21],
                    [7, 14]
                ],
                [
                    [2846, 6461],
                    [-7, -3],
                    [-7, 34],
                    [-10, 17],
                    [6, 38],
                    [8, -3],
                    [10, -49],
                    [0, -34]
                ],
                [
                    [2838, 6628],
                    [-30, -10],
                    [-2, 22],
                    [13, 5],
                    [18, -2],
                    [1, -15]
                ],
                [
                    [2861, 6628],
                    [-5, -42],
                    [-5, 8],
                    [0, 31],
                    [-12, 23],
                    [0, 7],
                    [22, -27]
                ],
                [
                    [5527, 7708],
                    [10, 0],
                    [-7, -26],
                    [14, -23],
                    [-4, -28],
                    [-7, -2]
                ],
                [
                    [5533, 7629],
                    [-5, -6],
                    [-9, -13],
                    [-4, -33]
                ],
                [
                    [5515, 7577],
                    [-25, 23],
                    [-10, 24],
                    [-11, 13],
                    [-12, 22],
                    [-6, 19],
                    [-14, 27],
                    [6, 25],
                    [10, -14],
                    [6, 12],
                    [13, 2],
                    [24, -10],
                    [19, 1],
                    [12, -13]
                ],
                [
                    [5652, 8242],
                    [27, 0],
                    [30, 22],
                    [6, 34],
                    [23, 19],
                    [-3, 26]
                ],
                [
                    [5735, 8343],
                    [17, 10],
                    [30, 23]
                ],
                [
                    [5782, 8376],
                    [29, -15],
                    [4, -15],
                    [15, 7],
                    [27, -14],
                    [3, -27],
                    [-6, -16],
                    [17, -39],
                    [12, -11],
                    [-2, -11],
                    [19, -10],
                    [8, -16],
                    [-11, -13],
                    [-23, 2],
                    [-5, -5],
                    [7, -20],
                    [6, -37]
                ],
                [
                    [5882, 8136],
                    [-23, -4],
                    [-9, -13],
                    [-2, -30],
                    [-11, 6],
                    [-25, -3],
                    [-7, 14],
                    [-11, -10],
                    [-10, 8],
                    [-22, 1],
                    [-31, 15],
                    [-28, 4],
                    [-22, -1],
                    [-15, -16],
                    [-13, -2]
                ],
                [
                    [5653, 8105],
                    [-1, 26],
                    [-8, 27],
                    [17, 12],
                    [0, 24],
                    [-8, 22],
                    [-1, 26]
                ],
                [
                    [2524, 6110],
                    [-1, 8],
                    [4, 3],
                    [5, -7],
                    [10, 36],
                    [5, 0]
                ],
                [
                    [2547, 6150],
                    [0, -8],
                    [5, -1],
                    [0, -16],
                    [-5, -25],
                    [3, -9],
                    [-3, -21],
                    [2, -6],
                    [-4, -30],
                    [-5, -16],
                    [-5, -1],
                    [-6, -21]
                ],
                [
                    [2529, 5996],
                    [-8, 0],
                    [2, 67],
                    [1, 47]
                ],
                [
                    [3136, 3714],
                    [-20, -8],
                    [-11, 82],
                    [-15, 66],
                    [9, 57],
                    [-15, 25],
                    [-4, 43],
                    [-13, 40]
                ],
                [
                    [3067, 4019],
                    [17, 64],
                    [-12, 49],
                    [7, 20],
                    [-5, 22],
                    [10, 30],
                    [1, 50],
                    [1, 41],
                    [6, 20],
                    [-24, 96]
                ],
                [
                    [3068, 4411],
                    [21, -5],
                    [14, 1],
                    [6, 18],
                    [25, 24],
                    [14, 22],
                    [37, 10],
                    [-3, -44],
                    [3, -23],
                    [-2, -40],
                    [30, -53],
                    [31, -9],
                    [11, -23],
                    [19, -11],
                    [11, -17],
                    [18, 0],
                    [16, -17],
                    [1, -34],
                    [6, -18],
                    [0, -25],
                    [-8, -1],
                    [11, -69],
                    [53, -2],
                    [-4, -35],
                    [3, -23],
                    [15, -16],
                    [6, -37],
                    [-4, -47],
                    [-8, -26],
                    [3, -33],
                    [-9, -12]
                ],
                [
                    [3384, 3866],
                    [-1, 18],
                    [-25, 30],
                    [-26, 1],
                    [-49, -17],
                    [-13, -52],
                    [-1, -32],
                    [-11, -71]
                ],
                [
                    [3482, 3537],
                    [6, 34],
                    [3, 35],
                    [1, 32],
                    [-10, 11],
                    [-11, -9],
                    [-10, 2],
                    [-4, 23],
                    [-2, 54],
                    [-5, 18],
                    [-19, 16],
                    [-11, -12],
                    [-30, 11],
                    [2, 81],
                    [-8, 33]
                ],
                [
                    [3068, 4411],
                    [-15, -11],
                    [-13, 7],
                    [2, 90],
                    [-23, -35],
                    [-24, 2],
                    [-11, 31],
                    [-18, 4],
                    [5, 25],
                    [-15, 36],
                    [-11, 53],
                    [7, 11],
                    [0, 25],
                    [17, 17],
                    [-3, 32],
                    [7, 20],
                    [2, 28],
                    [32, 40],
                    [22, 11],
                    [4, 9],
                    [25, -2]
                ],
                [
                    [3058, 4804],
                    [13, 162],
                    [0, 25],
                    [-4, 34],
                    [-12, 22],
                    [0, 42],
                    [15, 10],
                    [6, -6],
                    [1, 23],
                    [-16, 6],
                    [-1, 37],
                    [54, -2],
                    [10, 21],
                    [7, -19],
                    [6, -35],
                    [5, 8]
                ],
                [
                    [3142, 5132],
                    [15, -32],
                    [22, 4],
                    [5, 18],
                    [21, 14],
                    [11, 10],
                    [4, 25],
                    [19, 17],
                    [-1, 12],
                    [-24, 5],
                    [-3, 37],
                    [1, 40],
                    [-13, 15],
                    [5, 6],
                    [21, -8],
                    [22, -15],
                    [8, 14],
                    [20, 9],
                    [31, 23],
                    [10, 22],
                    [-3, 17]
                ],
                [
                    [3313, 5365],
                    [14, 2],
                    [7, -13],
                    [-4, -26],
                    [9, -9],
                    [7, -28],
                    [-8, -20],
                    [-4, -51],
                    [7, -30],
                    [2, -27],
                    [17, -28],
                    [14, -3],
                    [3, 12],
                    [8, 3],
                    [13, 10],
                    [9, 16],
                    [15, -5],
                    [7, 2]
                ],
                [
                    [3429, 5170],
                    [15, -5],
                    [3, 12],
                    [-5, 12],
                    [3, 17],
                    [11, -5],
                    [13, 6],
                    [16, -13]
                ],
                [
                    [3485, 5194],
                    [12, -12],
                    [9, 16],
                    [6, -3],
                    [4, -16],
                    [13, 4],
                    [11, 22],
                    [8, 44],
                    [17, 54]
                ],
                [
                    [3565, 5303],
                    [9, 3],
                    [7, -33],
                    [16, -103],
                    [14, -10],
                    [1, -41],
                    [-21, -48],
                    [9, -18],
                    [49, -9],
                    [1, -60],
                    [21, 39],
                    [35, -21],
                    [46, -36],
                    [14, -35],
                    [-5, -32],
                    [33, 18],
                    [54, -32],
                    [41, 3],
                    [41, -49],
                    [36, -66],
                    [21, -17],
                    [24, -3],
                    [10, -18],
                    [9, -76],
                    [5, -35],
                    [-11, -98],
                    [-14, -39],
                    [-39, -82],
                    [-18, -67],
                    [-21, -51],
                    [-7, -1],
                    [-7, -43],
                    [2, -111],
                    [-8, -91],
                    [-3, -39],
                    [-9, -23],
                    [-5, -79],
                    [-28, -77],
                    [-5, -61],
                    [-22, -26],
                    [-7, -35],
                    [-30, 0],
                    [-44, -23],
                    [-19, -26],
                    [-31, -18],
                    [-33, -47],
                    [-23, -58],
                    [-5, -44],
                    [5, -33],
                    [-5, -60],
                    [-6, -28],
                    [-20, -33],
                    [-31, -104],
                    [-24, -47],
                    [-19, -27],
                    [-13, -57],
                    [-18, -33]
                ],
                [
                    [3517, 3063],
                    [-8, 33],
                    [13, 28],
                    [-16, 40],
                    [-22, 33],
                    [-29, 38],
                    [-10, -2],
                    [-28, 46],
                    [-18, -7]
                ],
                [
                    [8172, 5325],
                    [11, 22],
                    [23, 32]
                ],
                [
                    [8206, 5379],
                    [-1, -29],
                    [-2, -37],
                    [-13, 1],
                    [-6, -20],
                    [-12, 31]
                ],
                [
                    [7546, 6698],
                    [12, -19],
                    [-2, -36],
                    [-23, -2],
                    [-23, 4],
                    [-18, -9],
                    [-25, 22],
                    [-1, 12]
                ],
                [
                    [7466, 6670],
                    [19, 44],
                    [15, 15],
                    [20, -14],
                    [14, -1],
                    [12, -16]
                ],
                [
                    [5817, 3752],
                    [-39, -43],
                    [-25, -44],
                    [-10, -40],
                    [-8, -22],
                    [-15, -4],
                    [-5, -29],
                    [-3, -18],
                    [-17, -14],
                    [-23, 3],
                    [-13, 17],
                    [-12, 7],
                    [-14, -14],
                    [-6, -28],
                    [-14, -18],
                    [-13, -26],
                    [-20, -6],
                    [-6, 20],
                    [2, 36],
                    [-16, 56],
                    [-8, 9]
                ],
                [
                    [5552, 3594],
                    [0, 173],
                    [27, 2],
                    [1, 210],
                    [21, 2],
                    [43, 21],
                    [10, -24],
                    [18, 23],
                    [9, 0],
                    [15, 13]
                ],
                [
                    [5696, 4014],
                    [5, -4]
                ],
                [
                    [5701, 4010],
                    [11, -48],
                    [5, -10],
                    [9, -34],
                    [32, -65],
                    [12, -7],
                    [0, -20],
                    [8, -38],
                    [21, -9],
                    [18, -27]
                ],
                [
                    [5424, 5496],
                    [23, 4],
                    [5, 16],
                    [5, -2],
                    [7, -13],
                    [34, 23],
                    [12, 23],
                    [15, 20],
                    [-3, 21],
                    [8, 6],
                    [27, -4],
                    [26, 27],
                    [20, 65],
                    [14, 24],
                    [18, 10]
                ],
                [
                    [5635, 5716],
                    [3, -26],
                    [16, -36],
                    [0, -25],
                    [-5, -24],
                    [2, -18],
                    [10, -18]
                ],
                [
                    [5661, 5569],
                    [21, -25]
                ],
                [
                    [5682, 5544],
                    [15, -24],
                    [0, -19],
                    [19, -31],
                    [12, -26],
                    [7, -35],
                    [20, -24],
                    [5, -18]
                ],
                [
                    [5760, 5367],
                    [-9, -7],
                    [-18, 2],
                    [-21, 6],
                    [-10, -5],
                    [-5, -14],
                    [-9, -2],
                    [-10, 12],
                    [-31, -29],
                    [-13, 6],
                    [-4, -5],
                    [-8, -35],
                    [-21, 11],
                    [-20, 6],
                    [-18, 22],
                    [-23, 20],
                    [-15, -19],
                    [-10, -30],
                    [-3, -41]
                ],
                [
                    [5512, 5265],
                    [-18, 3],
                    [-19, 10],
                    [-16, -32],
                    [-15, -55]
                ],
                [
                    [5444, 5191],
                    [-3, 18],
                    [-1, 27],
                    [-13, 19],
                    [-10, 30],
                    [-2, 21],
                    [-13, 31],
                    [2, 18],
                    [-3, 25],
                    [2, 45],
                    [7, 11],
                    [14, 60]
                ],
                [
                    [3231, 7808],
                    [20, -8],
                    [26, 1],
                    [-14, -24],
                    [-10, -4],
                    [-35, 25],
                    [-7, 20],
                    [10, 18],
                    [10, -28]
                ],
                [
                    [3283, 7958],
                    [-14, -1],
                    [-36, 19],
                    [-26, 28],
                    [10, 5],
                    [37, -15],
                    [28, -25],
                    [1, -11]
                ],
                [
                    [1569, 7923],
                    [-14, -8],
                    [-46, 27],
                    [-8, 21],
                    [-25, 21],
                    [-5, 16],
                    [-28, 11],
                    [-11, 32],
                    [2, 14],
                    [30, -13],
                    [17, -9],
                    [26, -6],
                    [9, -21],
                    [14, -28],
                    [28, -24],
                    [11, -33]
                ],
                [
                    [3440, 8052],
                    [-18, -52],
                    [18, 20],
                    [19, -12],
                    [-10, -21],
                    [25, -16],
                    [12, 14],
                    [28, -18],
                    [-8, -43],
                    [19, 10],
                    [4, -32],
                    [8, -36],
                    [-11, -52],
                    [-13, -2],
                    [-18, 11],
                    [6, 48],
                    [-8, 8],
                    [-32, -52],
                    [-17, 2],
                    [20, 28],
                    [-27, 14],
                    [-30, -3],
                    [-54, 2],
                    [-4, 17],
                    [17, 21],
                    [-12, 16],
                    [24, 36],
                    [28, 94],
                    [18, 33],
                    [24, 21],
                    [13, -3],
                    [-6, -16],
                    [-15, -37]
                ],
                [
                    [1313, 8250],
                    [27, 5],
                    [-8, -67],
                    [24, -48],
                    [-11, 0],
                    [-17, 27],
                    [-10, 27],
                    [-14, 19],
                    [-5, 26],
                    [1, 19],
                    [13, -8]
                ],
                [
                    [2798, 8730],
                    [-11, -31],
                    [-12, 5],
                    [-8, 17],
                    [2, 4],
                    [10, 18],
                    [12, -1],
                    [7, -12]
                ],
                [
                    [2725, 8762],
                    [-33, -32],
                    [-19, 1],
                    [-6, 16],
                    [20, 27],
                    [38, 0],
                    [0, -12]
                ],
                [
                    [2634, 8936],
                    [5, -26],
                    [15, 9],
                    [16, -15],
                    [30, -20],
                    [32, -19],
                    [2, -28],
                    [21, 5],
                    [20, -20],
                    [-25, -18],
                    [-43, 14],
                    [-16, 26],
                    [-27, -31],
                    [-40, -31],
                    [-9, 35],
                    [-38, -6],
                    [24, 30],
                    [4, 46],
                    [9, 54],
                    [20, -5]
                ],
                [
                    [2892, 9024],
                    [-31, -3],
                    [-7, 29],
                    [12, 34],
                    [26, 8],
                    [21, -17],
                    [1, -25],
                    [-4, -8],
                    [-18, -18]
                ],
                [
                    [2343, 9140],
                    [-17, -21],
                    [-38, 18],
                    [-22, -6],
                    [-38, 26],
                    [24, 19],
                    [19, 25],
                    [30, -16],
                    [17, -11],
                    [8, -11],
                    [17, -23]
                ],
                [
                    [3135, 7724],
                    [-18, 33],
                    [0, 81],
                    [-13, 17],
                    [-18, -10],
                    [-10, 16],
                    [-21, -45],
                    [-8, -46],
                    [-10, -27],
                    [-12, -9],
                    [-9, -3],
                    [-3, -15],
                    [-51, 0],
                    [-42, 0],
                    [-12, -11],
                    [-30, -42],
                    [-3, -5],
                    [-9, -23],
                    [-26, 0],
                    [-27, 0],
                    [-12, -10],
                    [4, -11],
                    [2, -18],
                    [0, -6],
                    [-36, -30],
                    [-29, -9],
                    [-32, -31],
                    [-7, 0],
                    [-10, 9],
                    [-3, 8],
                    [1, 6],
                    [6, 21],
                    [13, 33],
                    [8, 35],
                    [-5, 51],
                    [-6, 53],
                    [-29, 28],
                    [3, 11],
                    [-4, 7],
                    [-8, 0],
                    [-5, 9],
                    [-2, 14],
                    [-5, -6],
                    [-7, 2],
                    [1, 6],
                    [-6, 6],
                    [-3, 15],
                    [-21, 19],
                    [-23, 20],
                    [-27, 23],
                    [-26, 21],
                    [-25, -17],
                    [-9, 0],
                    [-34, 15],
                    [-23, -8],
                    [-27, 19],
                    [-28, 9],
                    [-19, 4],
                    [-9, 10],
                    [-5, 32],
                    [-9, 0],
                    [-1, -23],
                    [-57, 0],
                    [-95, 0],
                    [-94, 0],
                    [-84, 0],
                    [-83, 0],
                    [-82, 0],
                    [-85, 0],
                    [-27, 0],
                    [-82, 0],
                    [-79, 0]
                ],
                [
                    [1588, 7952],
                    [-4, 0],
                    [-54, 58],
                    [-20, 26],
                    [-50, 24],
                    [-15, 53],
                    [3, 36],
                    [-35, 25],
                    [-5, 48],
                    [-34, 43],
                    [0, 30]
                ],
                [
                    [1374, 8295],
                    [15, 29],
                    [0, 37],
                    [-48, 37],
                    [-28, 68],
                    [-17, 42],
                    [-26, 27],
                    [-19, 24],
                    [-14, 31],
                    [-28, -20],
                    [-27, -33],
                    [-25, 39],
                    [-19, 26],
                    [-27, 16],
                    [-28, 2],
                    [0, 337],
                    [1, 219]
                ],
                [
                    [1084, 9176],
                    [51, -14],
                    [44, -29],
                    [29, -5],
                    [24, 24],
                    [34, 19],
                    [41, -7],
                    [42, 26],
                    [45, 14],
                    [20, -24],
                    [20, 14],
                    [6, 27],
                    [20, -6],
                    [47, -53],
                    [37, 40],
                    [3, -45],
                    [34, 10],
                    [11, 17],
                    [34, -3],
                    [42, -25],
                    [65, -22],
                    [38, -10],
                    [28, 4],
                    [37, -30],
                    [-39, -29],
                    [50, -13],
                    [75, 7],
                    [24, 11],
                    [29, -36],
                    [31, 30],
                    [-29, 25],
                    [18, 20],
                    [34, 3],
                    [22, 6],
                    [23, -14],
                    [28, -32],
                    [31, 5],
                    [49, -27],
                    [43, 9],
                    [40, -1],
                    [-3, 37],
                    [25, 10],
                    [43, -20],
                    [0, -56],
                    [17, 47],
                    [23, -1],
                    [12, 59],
                    [-30, 36],
                    [-32, 24],
                    [2, 65],
                    [33, 43],
                    [37, -9],
                    [28, -26],
                    [38, -67],
                    [-25, -29],
                    [52, -12],
                    [-1, -60],
                    [38, 46],
                    [33, -38],
                    [-9, -44],
                    [27, -40],
                    [29, 43],
                    [21, 51],
                    [1, 65],
                    [40, -5],
                    [41, -8],
                    [37, -30],
                    [2, -29],
                    [-21, -31],
                    [20, -32],
                    [-4, -29],
                    [-54, -41],
                    [-39, -9],
                    [-29, 18],
                    [-8, -30],
                    [-27, -50],
                    [-8, -26],
                    [-32, -40],
                    [-40, -4],
                    [-22, -25],
                    [-2, -38],
                    [-32, -7],
                    [-34, -48],
                    [-30, -67],
                    [-11, -46],
                    [-1, -69],
                    [40, -10],
                    [13, -55],
                    [13, -45],
                    [39, 12],
                    [51, -26],
                    [28, -22],
                    [20, -28],
                    [35, -17],
                    [29, -24],
                    [46, -4],
                    [30, -6],
                    [-4, -51],
                    [8, -59],
                    [21, -66],
                    [41, -56],
                    [21, 19],
                    [15, 61],
                    [-14, 93],
                    [-20, 31],
                    [45, 28],
                    [31, 41],
                    [16, 41],
                    [-3, 40],
                    [-19, 50],
                    [-33, 44],
                    [32, 62],
                    [-12, 54],
                    [-9, 92],
                    [19, 14],
                    [48, -16],
                    [29, -6],
                    [23, 15],
                    [25, -20],
                    [35, -34],
                    [8, -23],
                    [50, -4],
                    [-1, -50],
                    [9, -74],
                    [25, -10],
                    [21, -35],
                    [40, 33],
                    [26, 65],
                    [19, 28],
                    [21, -53],
                    [36, -75],
                    [31, -71],
                    [-11, -37],
                    [37, -33],
                    [25, -34],
                    [44, -15],
                    [18, -19],
                    [11, -50],
                    [22, -8],
                    [11, -22],
                    [2, -67],
                    [-20, -22],
                    [-20, -21],
                    [-46, -21],
                    [-35, -48],
                    [-47, -10],
                    [-59, 13],
                    [-42, 0],
                    [-29, -4],
                    [-23, -43],
                    [-35, -26],
                    [-40, -78],
                    [-32, -54],
                    [23, 9],
                    [45, 78],
                    [58, 49],
                    [42, 6],
                    [24, -29],
                    [-26, -40],
                    [9, -63],
                    [9, -45],
                    [36, -29],
                    [46, 8],
                    [28, 67],
                    [2, -43],
                    [17, -22],
                    [-34, -38],
                    [-61, -36],
                    [-28, -23],
                    [-31, -43],
                    [-21, 4],
                    [-1, 50],
                    [48, 49],
                    [-44, -2],
                    [-31, -7]
                ],
                [
                    [1829, 9377],
                    [-14, -27],
                    [61, 17],
                    [39, -29],
                    [31, 30],
                    [26, -20],
                    [23, -58],
                    [14, 25],
                    [-20, 60],
                    [24, 9],
                    [28, -9],
                    [31, -24],
                    [17, -58],
                    [9, -41],
                    [47, -30],
                    [50, -28],
                    [-3, -26],
                    [-46, -4],
                    [18, -23],
                    [-9, -22],
                    [-51, 9],
                    [-48, 16],
                    [-32, -3],
                    [-52, -20],
                    [-70, -9],
                    [-50, -6],
                    [-15, 28],
                    [-38, 16],
                    [-24, -6],
                    [-35, 47],
                    [19, 6],
                    [43, 10],
                    [39, -3],
                    [36, 11],
                    [-54, 13],
                    [-59, -4],
                    [-39, 1],
                    [-15, 22],
                    [64, 23],
                    [-42, -1],
                    [-49, 16],
                    [23, 44],
                    [20, 24],
                    [74, 36],
                    [29, -12]
                ],
                [
                    [2097, 9395],
                    [-24, -39],
                    [-44, 41],
                    [10, 9],
                    [37, 2],
                    [21, -13]
                ],
                [
                    [2879, 9376],
                    [3, -16],
                    [-30, 2],
                    [-30, 1],
                    [-30, -8],
                    [-8, 3],
                    [-31, 32],
                    [1, 21],
                    [14, 4],
                    [63, -6],
                    [48, -33]
                ],
                [
                    [2595, 9379],
                    [22, -36],
                    [26, 47],
                    [70, 24],
                    [48, -61],
                    [-4, -38],
                    [55, 17],
                    [26, 23],
                    [62, -30],
                    [38, -28],
                    [3, -25],
                    [52, 13],
                    [29, -38],
                    [67, -23],
                    [24, -24],
                    [26, -55],
                    [-51, -28],
                    [66, -38],
                    [44, -13],
                    [40, -55],
                    [44, -3],
                    [-9, -42],
                    [-49, -69],
                    [-34, 26],
                    [-44, 57],
                    [-36, -8],
                    [-3, -34],
                    [29, -34],
                    [38, -27],
                    [11, -16],
                    [18, -58],
                    [-9, -43],
                    [-35, 16],
                    [-70, 47],
                    [39, -51],
                    [29, -35],
                    [5, -21],
                    [-76, 24],
                    [-59, 34],
                    [-34, 29],
                    [10, 17],
                    [-42, 30],
                    [-40, 29],
                    [0, -18],
                    [-80, -9],
                    [-23, 20],
                    [18, 44],
                    [52, 1],
                    [57, 7],
                    [-9, 21],
                    [10, 30],
                    [36, 57],
                    [-8, 27],
                    [-11, 20],
                    [-42, 29],
                    [-57, 20],
                    [18, 15],
                    [-29, 36],
                    [-25, 4],
                    [-22, 20],
                    [-14, -18],
                    [-51, -7],
                    [-101, 13],
                    [-59, 17],
                    [-45, 9],
                    [-23, 21],
                    [29, 27],
                    [-39, 0],
                    [-9, 60],
                    [21, 53],
                    [29, 24],
                    [72, 16],
                    [-21, -39]
                ],
                [
                    [2212, 9420],
                    [33, -12],
                    [50, 7],
                    [7, -17],
                    [-26, -28],
                    [42, -26],
                    [-5, -53],
                    [-45, -23],
                    [-27, 5],
                    [-19, 23],
                    [-69, 45],
                    [0, 19],
                    [57, -7],
                    [-31, 38],
                    [33, 29]
                ],
                [
                    [2411, 9357],
                    [-30, -45],
                    [-32, 3],
                    [-17, 52],
                    [1, 29],
                    [14, 25],
                    [28, 16],
                    [58, -2],
                    [53, -14],
                    [-42, -53],
                    [-33, -11]
                ],
                [
                    [1654, 9275],
                    [-73, -29],
                    [-15, 26],
                    [-64, 31],
                    [12, 25],
                    [19, 43],
                    [24, 39],
                    [-27, 36],
                    [94, 10],
                    [39, -13],
                    [71, -3],
                    [27, -17],
                    [30, -25],
                    [-35, -15],
                    [-68, -41],
                    [-34, -42],
                    [0, -25]
                ],
                [
                    [2399, 9487],
                    [-15, -23],
                    [-40, 5],
                    [-34, 15],
                    [15, 27],
                    [40, 16],
                    [24, -21],
                    [10, -19]
                ],
                [
                    [2264, 9590],
                    [21, -27],
                    [1, -31],
                    [-13, -44],
                    [-46, -6],
                    [-30, 10],
                    [1, 34],
                    [-45, -4],
                    [-2, 45],
                    [30, -2],
                    [41, 21],
                    [40, -4],
                    [2, 8]
                ],
                [
                    [1994, 9559],
                    [11, -21],
                    [25, 10],
                    [29, -2],
                    [5, -29],
                    [-17, -28],
                    [-94, -10],
                    [-70, -25],
                    [-43, -2],
                    [-3, 20],
                    [57, 26],
                    [-125, -7],
                    [-39, 10],
                    [38, 58],
                    [26, 17],
                    [78, -20],
                    [50, -35],
                    [48, -5],
                    [-40, 57],
                    [26, 21],
                    [29, -7],
                    [9, -28]
                ],
                [
                    [2370, 9612],
                    [30, -19],
                    [55, 0],
                    [24, -19],
                    [-6, -22],
                    [32, -14],
                    [17, -14],
                    [38, -2],
                    [40, -5],
                    [44, 13],
                    [57, 5],
                    [45, -5],
                    [30, -22],
                    [6, -24],
                    [-17, -16],
                    [-42, -13],
                    [-35, 8],
                    [-80, -10],
                    [-57, -1],
                    [-45, 8],
                    [-74, 19],
                    [-9, 32],
                    [-4, 29],
                    [-27, 26],
                    [-58, 7],
                    [-32, 19],
                    [10, 24],
                    [58, -4]
                ],
                [
                    [1772, 9645],
                    [-4, -46],
                    [-21, -20],
                    [-26, -3],
                    [-52, -26],
                    [-44, -9],
                    [-38, 13],
                    [47, 44],
                    [57, 39],
                    [43, -1],
                    [38, 9]
                ],
                [
                    [2393, 9637],
                    [-13, -2],
                    [-52, 4],
                    [-7, 17],
                    [56, -1],
                    [19, -11],
                    [-3, -7]
                ],
                [
                    [1939, 9648],
                    [-52, -17],
                    [-41, 19],
                    [23, 19],
                    [40, 6],
                    [39, -10],
                    [-9, -17]
                ],
                [
                    [1954, 9701],
                    [-34, -11],
                    [-46, 0],
                    [0, 8],
                    [29, 18],
                    [14, -3],
                    [37, -12]
                ],
                [
                    [2338, 9669],
                    [-41, -12],
                    [-23, 13],
                    [-12, 23],
                    [-2, 24],
                    [36, -2],
                    [16, -4],
                    [33, -21],
                    [-7, -21]
                ],
                [
                    [2220, 9685],
                    [11, -25],
                    [-45, 7],
                    [-46, 19],
                    [-62, 2],
                    [27, 18],
                    [-34, 14],
                    [-2, 22],
                    [55, -8],
                    [75, -21],
                    [21, -28]
                ],
                [
                    [2583, 9764],
                    [33, -20],
                    [-38, -17],
                    [-51, -45],
                    [-50, -4],
                    [-57, 8],
                    [-30, 24],
                    [0, 21],
                    [22, 16],
                    [-50, 0],
                    [-31, 19],
                    [-18, 27],
                    [20, 26],
                    [19, 18],
                    [28, 4],
                    [-12, 14],
                    [65, 3],
                    [35, -32],
                    [47, -12],
                    [46, -11],
                    [22, -39]
                ],
                [
                    [3097, 9967],
                    [74, -4],
                    [60, -8],
                    [51, -16],
                    [-2, -16],
                    [-67, -25],
                    [-68, -12],
                    [-25, -14],
                    [61, 1],
                    [-66, -36],
                    [-45, -17],
                    [-48, -48],
                    [-57, -10],
                    [-18, -12],
                    [-84, -6],
                    [39, -8],
                    [-20, -10],
                    [23, -29],
                    [-26, -21],
                    [-43, -16],
                    [-13, -24],
                    [-39, -17],
                    [4, -14],
                    [48, 3],
                    [0, -15],
                    [-74, -35],
                    [-73, 16],
                    [-81, -9],
                    [-42, 7],
                    [-52, 3],
                    [-4, 29],
                    [52, 13],
                    [-14, 43],
                    [17, 4],
                    [74, -26],
                    [-38, 38],
                    [-45, 11],
                    [23, 23],
                    [49, 14],
                    [8, 21],
                    [-39, 23],
                    [-12, 31],
                    [76, -3],
                    [22, -6],
                    [43, 21],
                    [-62, 7],
                    [-98, -4],
                    [-49, 20],
                    [-23, 24],
                    [-32, 17],
                    [-6, 21],
                    [41, 11],
                    [32, 2],
                    [55, 9],
                    [41, 22],
                    [34, -3],
                    [30, -16],
                    [21, 32],
                    [37, 9],
                    [50, 7],
                    [85, 2],
                    [14, -6],
                    [81, 10],
                    [60, -4],
                    [60, -4]
                ],
                [
                    [5290, 7828],
                    [-3, -24],
                    [-12, -10],
                    [-20, 7],
                    [-6, -24],
                    [-14, -2],
                    [-5, 10],
                    [-15, -20],
                    [-13, -3],
                    [-12, 13]
                ],
                [
                    [5190, 7775],
                    [-10, 25],
                    [-13, -9],
                    [0, 27],
                    [21, 33],
                    [-1, 15],
                    [12, -5],
                    [8, 10]
                ],
                [
                    [5207, 7871],
                    [24, -1],
                    [5, 13],
                    [30, -18]
                ],
                [
                    [3140, 1814],
                    [-10, -24],
                    [-23, -18],
                    [-14, 2],
                    [-16, 5],
                    [-21, 18],
                    [-29, 8],
                    [-35, 33],
                    [-28, 32],
                    [-38, 66],
                    [23, -12],
                    [39, -40],
                    [36, -21],
                    [15, 27],
                    [9, 41],
                    [25, 24],
                    [20, -7]
                ],
                [
                    [3095, 1968],
                    [-25, 0],
                    [-13, -14],
                    [-25, -22],
                    [-5, -55],
                    [-11, -1],
                    [-32, 19],
                    [-32, 41],
                    [-34, 34],
                    [-9, 37],
                    [8, 35],
                    [-14, 39],
                    [-4, 101],
                    [12, 57],
                    [30, 45],
                    [-43, 18],
                    [27, 52],
                    [9, 98],
                    [31, -21],
                    [15, 123],
                    [-19, 15],
                    [-9, -73],
                    [-17, 8],
                    [9, 84],
                    [9, 110],
                    [13, 40],
                    [-8, 58],
                    [-2, 66],
                    [11, 2],
                    [17, 96],
                    [20, 94],
                    [11, 88],
                    [-6, 89],
                    [8, 49],
                    [-3, 72],
                    [16, 73],
                    [5, 114],
                    [9, 123],
                    [9, 132],
                    [-2, 96],
                    [-6, 84]
                ],
                [
                    [3045, 3974],
                    [14, 15],
                    [8, 30]
                ],
                [
                    [8064, 6161],
                    [-24, -28],
                    [-23, 18],
                    [0, 51],
                    [13, 26],
                    [31, 17],
                    [16, -1],
                    [6, -23],
                    [-12, -26],
                    [-7, -34]
                ],
                [
                    [8628, 7562],
                    [-18, 35],
                    [-11, -33],
                    [-43, -26],
                    [4, -31],
                    [-24, 2],
                    [-13, 19],
                    [-19, -42],
                    [-30, -32],
                    [-23, -38]
                ],
                [
                    [8451, 7416],
                    [-39, -17],
                    [-20, -27],
                    [-30, -17],
                    [15, 28],
                    [-6, 23],
                    [22, 40],
                    [-15, 30],
                    [-24, -20],
                    [-32, -41],
                    [-17, -39],
                    [-27, -2],
                    [-14, -28],
                    [15, -40],
                    [22, -10],
                    [1, -26],
                    [22, -17],
                    [31, 42],
                    [25, -23],
                    [18, -2],
                    [4, -31],
                    [-39, -16],
                    [-13, -32],
                    [-27, -30],
                    [-14, -41],
                    [30, -33],
                    [11, -58],
                    [17, -54],
                    [18, -45],
                    [0, -44],
                    [-17, -16],
                    [6, -32],
                    [17, -18],
                    [-5, -48],
                    [-7, -47],
                    [-15, -5],
                    [-21, -64],
                    [-22, -78],
                    [-26, -70],
                    [-38, -55],
                    [-39, -50],
                    [-31, -6],
                    [-17, -27],
                    [-10, 20],
                    [-15, -30],
                    [-39, -29],
                    [-29, -9],
                    [-10, -63],
                    [-15, -3],
                    [-8, 43],
                    [7, 22],
                    [-37, 19],
                    [-13, -9]
                ],
                [
                    [8001, 6331],
                    [-28, 15],
                    [-14, 24],
                    [5, 34],
                    [-26, 11],
                    [-13, 22],
                    [-24, -31],
                    [-27, -7],
                    [-22, 0],
                    [-15, -14]
                ],
                [
                    [7837, 6385],
                    [-14, -9],
                    [4, -68],
                    [-15, 2],
                    [-2, 14]
                ],
                [
                    [7810, 6324],
                    [-1, 24],
                    [-20, -17],
                    [-12, 11],
                    [-21, 22],
                    [8, 49],
                    [-18, 12],
                    [-6, 54],
                    [-30, -10],
                    [4, 70],
                    [26, 50],
                    [1, 48],
                    [-1, 46],
                    [-12, 14],
                    [-9, 35],
                    [-16, -5]
                ],
                [
                    [7703, 6727],
                    [-30, 9],
                    [9, 25],
                    [-13, 36],
                    [-20, -24],
                    [-23, 14],
                    [-32, -37],
                    [-25, -44],
                    [-23, -8]
                ],
                [
                    [7466, 6670],
                    [-2, 47],
                    [-17, -13]
                ],
                [
                    [7447, 6704],
                    [-32, 6],
                    [-32, 14],
                    [-22, 26],
                    [-22, 11],
                    [-9, 29],
                    [-16, 8],
                    [-28, 39],
                    [-22, 18],
                    [-12, -14]
                ],
                [
                    [7252, 6841],
                    [-38, 41],
                    [-28, 37],
                    [-7, 65],
                    [20, -7],
                    [1, 30],
                    [-12, 30],
                    [3, 48],
                    [-30, 69]
                ],
                [
                    [7161, 7154],
                    [-45, 24],
                    [-8, 46],
                    [-21, 27]
                ],
                [
                    [7082, 7268],
                    [-4, 34],
                    [1, 23],
                    [-17, 13],
                    [-9, -6],
                    [-7, 55]
                ],
                [
                    [7046, 7387],
                    [8, 13],
                    [-4, 14],
                    [26, 28],
                    [20, 12],
                    [29, -8],
                    [11, 38],
                    [35, 7],
                    [10, 23],
                    [44, 32],
                    [4, 13]
                ],
                [
                    [7229, 7559],
                    [-2, 34],
                    [19, 15],
                    [-25, 103],
                    [55, 24],
                    [14, 13],
                    [20, 106],
                    [55, -20],
                    [15, 27],
                    [2, 59],
                    [23, 6],
                    [21, 39]
                ],
                [
                    [7426, 7965],
                    [11, 5]
                ],
                [
                    [7437, 7970],
                    [7, -41],
                    [23, -32],
                    [40, -22],
                    [19, -47],
                    [-10, -70],
                    [10, -25],
                    [33, -10],
                    [37, -8],
                    [33, -37],
                    [18, -7],
                    [12, -54],
                    [17, -35],
                    [30, 1],
                    [58, -13],
                    [36, 8],
                    [28, -9],
                    [41, -36],
                    [34, 0],
                    [12, -18],
                    [32, 32],
                    [45, 20],
                    [42, 2],
                    [32, 21],
                    [20, 32],
                    [20, 20],
                    [-5, 19],
                    [-9, 23],
                    [15, 38],
                    [15, -5],
                    [29, -12],
                    [28, 31],
                    [42, 23],
                    [20, 39],
                    [20, 17],
                    [40, 8],
                    [22, -7],
                    [3, 21],
                    [-25, 41],
                    [-22, 19],
                    [-22, -22],
                    [-27, 10],
                    [-16, -8],
                    [-7, 24],
                    [20, 59],
                    [13, 45]
                ],
                [
                    [8240, 8005],
                    [34, -23],
                    [39, 38],
                    [-1, 26],
                    [26, 62],
                    [15, 19],
                    [0, 33],
                    [-16, 14],
                    [23, 29],
                    [35, 11],
                    [37, 2],
                    [41, -18],
                    [25, -22],
                    [17, -59],
                    [10, -26],
                    [10, -36],
                    [10, -58],
                    [49, -19],
                    [32, -42],
                    [12, -55],
                    [42, 0],
                    [24, 23],
                    [46, 17],
                    [-15, -53],
                    [-11, -21],
                    [-9, -65],
                    [-19, -58],
                    [-33, 11],
                    [-24, -21],
                    [7, -51],
                    [-4, -69],
                    [-14, -2],
                    [0, -30]
                ],
                [
                    [4920, 5353],
                    [-12, -1],
                    [-20, 12],
                    [-18, -1],
                    [-33, -10],
                    [-19, -18],
                    [-27, -21],
                    [-6, 1]
                ],
                [
                    [4785, 5315],
                    [2, 49],
                    [3, 7],
                    [-1, 24],
                    [-12, 24],
                    [-8, 4],
                    [-8, 17],
                    [6, 26],
                    [-3, 28],
                    [1, 18]
                ],
                [
                    [4765, 5512],
                    [5, 0],
                    [1, 25],
                    [-2, 12],
                    [3, 8],
                    [10, 7],
                    [-7, 47],
                    [-6, 25],
                    [2, 20],
                    [5, 4]
                ],
                [
                    [4776, 5660],
                    [4, 6],
                    [8, -9],
                    [21, -1],
                    [5, 18],
                    [5, -1],
                    [8, 6],
                    [4, -25],
                    [7, 7],
                    [11, 9]
                ],
                [
                    [4921, 5627],
                    [7, -84],
                    [-11, -50],
                    [-8, -66],
                    [12, -51],
                    [-1, -23]
                ],
                [
                    [5363, 5191],
                    [-4, 4],
                    [-16, -8],
                    [-17, 8],
                    [-13, -4]
                ],
                [
                    [5313, 5191],
                    [-45, 1]
                ],
                [
                    [5268, 5192],
                    [4, 47],
                    [-11, 39],
                    [-13, 10],
                    [-6, 27],
                    [-7, 8],
                    [1, 16]
                ],
                [
                    [5236, 5339],
                    [7, 42],
                    [13, 57],
                    [8, 1],
                    [17, 34],
                    [10, 1],
                    [16, -24],
                    [19, 20],
                    [2, 25],
                    [7, 23],
                    [4, 30],
                    [15, 25],
                    [5, 41],
                    [6, 13],
                    [4, 31],
                    [7, 37],
                    [24, 46],
                    [1, 20],
                    [3, 10],
                    [-11, 24]
                ],
                [
                    [5393, 5795],
                    [1, 19],
                    [8, 3]
                ],
                [
                    [5402, 5817],
                    [11, -38],
                    [2, -39],
                    [-1, -39],
                    [15, -54],
                    [-15, 1],
                    [-8, -4],
                    [-13, 6],
                    [-6, -28],
                    [16, -35],
                    [13, -10],
                    [3, -24],
                    [9, -41],
                    [-4, -16]
                ],
                [
                    [5444, 5191],
                    [-2, -31],
                    [-22, 14],
                    [-22, 15],
                    [-35, 2]
                ],
                [
                    [5856, 5265],
                    [-2, -69],
                    [11, -8],
                    [-9, -21],
                    [-10, -16],
                    [-11, -31],
                    [-6, -27],
                    [-1, -48],
                    [-7, -22],
                    [0, -45]
                ],
                [
                    [5821, 4978],
                    [-8, -16],
                    [-1, -35],
                    [-4, -5],
                    [-2, -32]
                ],
                [
                    [5814, 4792],
                    [5, -55],
                    [-2, -30],
                    [5, -35],
                    [16, -33],
                    [15, -74]
                ],
                [
                    [5853, 4565],
                    [-11, 6],
                    [-37, -10],
                    [-7, -7],
                    [-8, -38],
                    [6, -26],
                    [-5, -70],
                    [-3, -59],
                    [7, -11],
                    [19, -23],
                    [8, 11],
                    [2, -64],
                    [-21, 1],
                    [-11, 32],
                    [-10, 25],
                    [-22, 9],
                    [-6, 31],
                    [-17, -19],
                    [-22, 8],
                    [-10, 27],
                    [-17, 6],
                    [-13, -2],
                    [-2, 19],
                    [-9, 1]
                ],
                [
                    [5342, 4697],
                    [-4, 18]
                ],
                [
                    [5360, 4775],
                    [8, -6],
                    [9, 23],
                    [15, -1],
                    [2, -17],
                    [11, -10],
                    [16, 37],
                    [16, 29],
                    [7, 19],
                    [-1, 48],
                    [12, 58],
                    [13, 30],
                    [18, 29],
                    [3, 18],
                    [1, 22],
                    [5, 21],
                    [-2, 33],
                    [4, 52],
                    [5, 37],
                    [8, 32],
                    [2, 36]
                ],
                [
                    [5760, 5367],
                    [17, -49],
                    [12, -7],
                    [8, 10],
                    [12, -4],
                    [16, 12],
                    [6, -25],
                    [25, -39]
                ],
                [
                    [5330, 4760],
                    [-22, 62]
                ],
                [
                    [5308, 4822],
                    [21, 33],
                    [-11, 39],
                    [10, 15],
                    [19, 7],
                    [2, 26],
                    [15, -28],
                    [24, -2],
                    [9, 27],
                    [3, 40],
                    [-3, 46],
                    [-13, 35],
                    [12, 68],
                    [-7, 12],
                    [-21, -5],
                    [-7, 31],
                    [2, 25]
                ],
                [
                    [2906, 5049],
                    [-12, 14],
                    [-14, 19],
                    [-7, -9],
                    [-24, 8],
                    [-7, 25],
                    [-5, -1],
                    [-28, 34]
                ],
                [
                    [2809, 5139],
                    [-3, 18],
                    [10, 5],
                    [-1, 29],
                    [6, 22],
                    [14, 4],
                    [12, 37],
                    [10, 31],
                    [-10, 14],
                    [5, 34],
                    [-6, 54],
                    [6, 16],
                    [-4, 50],
                    [-12, 31]
                ],
                [
                    [2836, 5484],
                    [4, 29],
                    [9, -4],
                    [5, 17],
                    [-6, 35],
                    [3, 9]
                ],
                [
                    [2851, 5570],
                    [14, -2],
                    [21, 41],
                    [12, 6],
                    [0, 20],
                    [5, 50],
                    [16, 27],
                    [17, 1],
                    [3, 13],
                    [21, -5],
                    [22, 30],
                    [11, 13],
                    [14, 28],
                    [9, -3],
                    [8, -16],
                    [-6, -20]
                ],
                [
                    [3018, 5753],
                    [-18, -10],
                    [-7, -29],
                    [-10, -17],
                    [-8, -22],
                    [-4, -42],
                    [-8, -35],
                    [15, -4],
                    [3, -27],
                    [6, -13],
                    [3, -24],
                    [-4, -22],
                    [1, -12],
                    [7, -5],
                    [7, -20],
                    [36, 5],
                    [16, -7],
                    [19, -51],
                    [11, 6],
                    [20, -3],
                    [16, 7],
                    [10, -10],
                    [-5, -32],
                    [-6, -20],
                    [-2, -42],
                    [5, -40],
                    [8, -17],
                    [1, -13],
                    [-14, -30],
                    [10, -13],
                    [8, -21],
                    [8, -58]
                ],
                [
                    [3058, 4804],
                    [-14, 31],
                    [-8, 1],
                    [18, 61],
                    [-21, 27],
                    [-17, -5],
                    [-10, 10],
                    [-15, -15],
                    [-21, 7],
                    [-16, 62],
                    [-13, 15],
                    [-9, 28],
                    [-19, 28],
                    [-7, -5]
                ],
                [
                    [2695, 5543],
                    [-15, 14],
                    [-6, 12],
                    [4, 10],
                    [-1, 13],
                    [-8, 14],
                    [-11, 12],
                    [-10, 8],
                    [-1, 17],
                    [-8, 10],
                    [2, -17],
                    [-5, -14],
                    [-7, 17],
                    [-9, 5],
                    [-4, 12],
                    [1, 18],
                    [3, 19],
                    [-8, 8],
                    [7, 12]
                ],
                [
                    [2619, 5713],
                    [4, 7],
                    [18, -15],
                    [7, 7],
                    [9, -5],
                    [4, -12],
                    [8, -4],
                    [7, 13]
                ],
                [
                    [2676, 5704],
                    [7, -32],
                    [11, -24],
                    [13, -25]
                ],
                [
                    [2707, 5623],
                    [-11, -6],
                    [0, -23],
                    [6, -9],
                    [-4, -7],
                    [1, -11],
                    [-2, -12],
                    [-2, -12]
                ],
                [
                    [2715, 6427],
                    [23, -4],
                    [22, 0],
                    [26, -21],
                    [11, -21],
                    [26, 6],
                    [10, -13],
                    [24, -37],
                    [17, -27],
                    [9, 1],
                    [17, -12],
                    [-2, -17],
                    [20, -2],
                    [21, -24],
                    [-3, -14],
                    [-19, -7],
                    [-18, -3],
                    [-19, 4],
                    [-40, -5],
                    [18, 32],
                    [-11, 16],
                    [-18, 4],
                    [-9, 17],
                    [-7, 33],
                    [-16, -2],
                    [-26, 16],
                    [-8, 12],
                    [-36, 10],
                    [-10, 11],
                    [11, 15],
                    [-28, 3],
                    [-20, -31],
                    [-11, -1],
                    [-4, -14],
                    [-14, -7],
                    [-12, 6],
                    [15, 18],
                    [6, 22],
                    [13, 13],
                    [14, 11],
                    [21, 6],
                    [7, 6]
                ],
                [
                    [5909, 7133],
                    [2, 1],
                    [4, 14],
                    [20, -1],
                    [25, 18],
                    [-19, -25],
                    [2, -11]
                ],
                [
                    [5943, 7129],
                    [-3, 2],
                    [-5, -5],
                    [-4, 1],
                    [-2, -2],
                    [0, 6],
                    [-2, 4],
                    [-6, 0],
                    [-7, -5],
                    [-5, 3]
                ],
                [
                    [5943, 7129],
                    [1, -5],
                    [-28, -24],
                    [-14, 8],
                    [-7, 23],
                    [14, 2]
                ],
                [
                    [5377, 7945],
                    [-16, 25],
                    [-14, 15],
                    [-3, 25],
                    [-5, 17],
                    [21, 13],
                    [10, 15],
                    [20, 11],
                    [7, 11],
                    [7, -6],
                    [13, 6]
                ],
                [
                    [5417, 8077],
                    [13, -19],
                    [21, -5],
                    [-2, -17],
                    [15, -12],
                    [4, 15],
                    [19, -6],
                    [3, -19],
                    [20, -3],
                    [13, -29]
                ],
                [
                    [5523, 7982],
                    [-8, 0],
                    [-4, -11],
                    [-7, -3],
                    [-2, -13],
                    [-5, -3],
                    [-1, -5],
                    [-9, -7],
                    [-12, 1],
                    [-4, -13]
                ],
                [
                    [5275, 8306],
                    [1, -23],
                    [28, -14],
                    [-1, -21],
                    [29, 11],
                    [15, 16],
                    [32, -23],
                    [13, -19]
                ],
                [
                    [5392, 8233],
                    [6, -30],
                    [-8, -16],
                    [11, -21],
                    [6, -31],
                    [-2, -21],
                    [12, -37]
                ],
                [
                    [5207, 7871],
                    [3, 42],
                    [14, 40],
                    [-40, 11],
                    [-13, 16]
                ],
                [
                    [5171, 7980],
                    [2, 26],
                    [-6, 13]
                ],
                [
                    [5171, 8059],
                    [-5, 62],
                    [17, 0],
                    [7, 22],
                    [6, 54],
                    [-5, 20]
                ],
                [
                    [5191, 8217],
                    [6, 13],
                    [23, 3],
                    [5, -13],
                    [19, 29],
                    [-6, 22],
                    [-2, 34]
                ],
                [
                    [5236, 8305],
                    [21, -8],
                    [18, 9]
                ],
                [
                    [6196, 5808],
                    [7, -19],
                    [-1, -24],
                    [-16, -14],
                    [12, -16]
                ],
                [
                    [6198, 5735],
                    [-10, -32]
                ],
                [
                    [6188, 5703],
                    [-7, 11],
                    [-6, -5],
                    [-16, 1],
                    [0, 18],
                    [-2, 17],
                    [9, 27],
                    [10, 26]
                ],
                [
                    [6176, 5798],
                    [12, -5],
                    [8, 15]
                ],
                [
                    [5352, 8343],
                    [-17, -48],
                    [-29, 33],
                    [-4, 25],
                    [41, 19],
                    [9, -29]
                ],
                [
                    [5236, 8305],
                    [-11, 32],
                    [-1, 61],
                    [5, 16],
                    [8, 17],
                    [24, 4],
                    [10, 16],
                    [22, 17],
                    [-1, -30],
                    [-8, -20],
                    [4, -16],
                    [15, -9],
                    [-7, -22],
                    [-8, 6],
                    [-20, -42],
                    [7, -29]
                ],
                [
                    [3008, 6222],
                    [3, 10],
                    [22, 0],
                    [16, -15],
                    [8, 1],
                    [5, -21],
                    [15, 1],
                    [-1, -17],
                    [12, -2],
                    [14, -22],
                    [-10, -24],
                    [-14, 13],
                    [-12, -3],
                    [-9, 3],
                    [-5, -11],
                    [-11, -3],
                    [-4, 14],
                    [-10, -8],
                    [-11, -41],
                    [-7, 10],
                    [-1, 17]
                ],
                [
                    [3008, 6124],
                    [0, 16],
                    [-7, 17],
                    [7, 10],
                    [2, 23],
                    [-2, 32]
                ],
                [
                    [5333, 6444],
                    [-95, -112],
                    [-81, -117],
                    [-39, -26]
                ],
                [
                    [5118, 6189],
                    [-31, -6],
                    [0, 38],
                    [-13, 10],
                    [-17, 16],
                    [-7, 28],
                    [-94, 129],
                    [-93, 129]
                ],
                [
                    [4863, 6533],
                    [-105, 143]
                ],
                [
                    [4758, 6676],
                    [1, 11],
                    [0, 4]
                ],
                [
                    [4759, 6691],
                    [0, 70],
                    [44, 44],
                    [28, 9],
                    [23, 16],
                    [11, 29],
                    [32, 24],
                    [1, 44],
                    [16, 5],
                    [13, 22],
                    [36, 9],
                    [5, 23],
                    [-7, 13],
                    [-10, 62],
                    [-1, 36],
                    [-11, 38]
                ],
                [
                    [4939, 7135],
                    [27, 32],
                    [30, 11],
                    [17, 24],
                    [27, 18],
                    [47, 11],
                    [46, 4],
                    [14, -8],
                    [26, 23],
                    [30, 0],
                    [11, -13],
                    [19, 3]
                ],
                [
                    [5233, 7240],
                    [-5, -30],
                    [4, -56],
                    [-6, -49],
                    [-18, -33],
                    [3, -45],
                    [23, -35],
                    [0, -14],
                    [17, -24],
                    [12, -106]
                ],
                [
                    [5263, 6848],
                    [9, -52],
                    [1, -28],
                    [-5, -48],
                    [2, -27],
                    [-3, -32],
                    [2, -37],
                    [-11, -25],
                    [17, -43],
                    [1, -25],
                    [10, -33],
                    [13, 11],
                    [22, -28],
                    [12, -37]
                ],
                [
                    [2769, 4856],
                    [15, 45],
                    [-6, 25],
                    [-11, -27],
                    [-16, 26],
                    [5, 16],
                    [-4, 54],
                    [9, 9],
                    [5, 37],
                    [11, 38],
                    [-2, 24],
                    [15, 13],
                    [19, 23]
                ],
                [
                    [2906, 5049],
                    [4, -45],
                    [-9, -39],
                    [-30, -62],
                    [-33, -23],
                    [-17, -51],
                    [-6, -40],
                    [-15, -24],
                    [-12, 29],
                    [-11, 7],
                    [-12, -5],
                    [-1, 22],
                    [8, 14],
                    [-3, 24]
                ],
                [
                    [5969, 6800],
                    [-7, -23],
                    [-6, -45],
                    [-8, -31],
                    [-6, -10],
                    [-10, 19],
                    [-12, 26],
                    [-20, 85],
                    [-3, -5],
                    [12, -63],
                    [17, -59],
                    [21, -92],
                    [10, -32],
                    [9, -34],
                    [25, -65],
                    [-6, -10],
                    [1, -39],
                    [33, -53],
                    [4, -12]
                ],
                [
                    [6023, 6357],
                    [-110, 0],
                    [-107, 0],
                    [-112, 0]
                ],
                [
                    [5694, 6357],
                    [0, 218],
                    [0, 210],
                    [-8, 47],
                    [7, 37],
                    [-5, 25],
                    [10, 29]
                ],
                [
                    [5698, 6923],
                    [37, 0],
                    [27, -15],
                    [28, -18],
                    [13, -9],
                    [21, 19],
                    [11, 17],
                    [25, 5],
                    [20, -8],
                    [7, -29],
                    [7, 19],
                    [22, -14],
                    [22, -3],
                    [13, 15]
                ],
                [
                    [5951, 6902],
                    [18, -102]
                ],
                [
                    [6176, 5798],
                    [-10, 20],
                    [-11, 34],
                    [-12, 19],
                    [-8, 21],
                    [-24, 23],
                    [-19, 1],
                    [-7, 12],
                    [-16, -14],
                    [-17, 27],
                    [-8, -44],
                    [-33, 13]
                ],
                [
                    [6011, 5910],
                    [-3, 23],
                    [12, 87],
                    [3, 39],
                    [9, 18],
                    [20, 10],
                    [14, 34]
                ],
                [
                    [6066, 6121],
                    [16, -69],
                    [8, -54],
                    [15, -29],
                    [38, -55],
                    [16, -34],
                    [15, -34],
                    [8, -20],
                    [14, -18]
                ],
                [
                    [4749, 7532],
                    [1, 42],
                    [-11, 25],
                    [39, 43],
                    [34, -11],
                    [37, 1],
                    [30, -10],
                    [23, 3],
                    [45, -2]
                ],
                [
                    [4947, 7623],
                    [11, -23],
                    [51, -27],
                    [10, 13],
                    [31, -27],
                    [32, 8]
                ],
                [
                    [5082, 7567],
                    [2, -35],
                    [-26, -39],
                    [-36, -12],
                    [-2, -20],
                    [-18, -33],
                    [-10, -48],
                    [11, -34],
                    [-16, -26],
                    [-6, -39],
                    [-21, -11],
                    [-20, -46],
                    [-35, -1],
                    [-27, 1],
                    [-17, -21],
                    [-11, -22],
                    [-13, 5],
                    [-11, 20],
                    [-8, 34],
                    [-26, 9]
                ],
                [
                    [4792, 7249],
                    [-2, 20],
                    [10, 22],
                    [4, 16],
                    [-9, 17],
                    [7, 39],
                    [-11, 36],
                    [12, 5],
                    [1, 27],
                    [5, 9],
                    [0, 46],
                    [13, 16],
                    [-8, 30],
                    [-16, 2],
                    [-5, -8],
                    [-16, 0],
                    [-7, 29],
                    [-11, -8],
                    [-10, -15]
                ],
                [
                    [5675, 8472],
                    [3, 35],
                    [-10, -8],
                    [-18, 21],
                    [-2, 34],
                    [35, 17],
                    [35, 8],
                    [30, -10],
                    [29, 2]
                ],
                [
                    [5777, 8571],
                    [4, -10],
                    [-20, -34],
                    [8, -55],
                    [-12, -19]
                ],
                [
                    [5757, 8453],
                    [-22, 0],
                    [-24, 22],
                    [-13, 7],
                    [-23, -10]
                ],
                [
                    [6188, 5703],
                    [-6, -21],
                    [10, -32],
                    [10, -29],
                    [11, -21],
                    [90, -70],
                    [24, 0]
                ],
                [
                    [6327, 5530],
                    [-79, -177],
                    [-36, -3],
                    [-25, -41],
                    [-17, -1],
                    [-8, -19]
                ],
                [
                    [6162, 5289],
                    [-19, 0],
                    [-11, 20],
                    [-26, -25],
                    [-8, -24],
                    [-18, 4],
                    [-6, 7],
                    [-7, -1],
                    [-9, 0],
                    [-35, 50],
                    [-19, 0],
                    [-10, 20],
                    [0, 33],
                    [-14, 10]
                ],
                [
                    [5980, 5383],
                    [-17, 64],
                    [-12, 14],
                    [-5, 23],
                    [-14, 29],
                    [-17, 4],
                    [9, 34],
                    [15, 2],
                    [4, 18]
                ],
                [
                    [5943, 5571],
                    [0, 53]
                ],
                [
                    [5943, 5624],
                    [8, 62],
                    [13, 16],
                    [3, 24],
                    [12, 45],
                    [17, 30],
                    [11, 58],
                    [4, 51]
                ],
                [
                    [5794, 9138],
                    [-4, -42],
                    [42, -39],
                    [-26, -45],
                    [33, -67],
                    [-19, -51],
                    [25, -43],
                    [-11, -39],
                    [41, -40],
                    [-11, -31],
                    [-25, -34],
                    [-60, -75]
                ],
                [
                    [5779, 8632],
                    [-50, -5],
                    [-49, -21],
                    [-45, -13],
                    [-16, 32],
                    [-27, 20],
                    [6, 58],
                    [-14, 53],
                    [14, 35],
                    [25, 37],
                    [63, 64],
                    [19, 12],
                    [-3, 25],
                    [-39, 28]
                ],
                [
                    [5663, 8957],
                    [-9, 23],
                    [-1, 91],
                    [-43, 40],
                    [-37, 29]
                ],
                [
                    [5573, 9140],
                    [17, 16],
                    [30, -32],
                    [37, 3],
                    [30, -14],
                    [26, 26],
                    [14, 44],
                    [43, 20],
                    [35, -24],
                    [-11, -41]
                ],
                [
                    [9954, 4033],
                    [9, -17],
                    [-4, -31],
                    [-17, -8],
                    [-16, 7],
                    [-2, 26],
                    [10, 21],
                    [13, -8],
                    [7, 10]
                ],
                [
                    [0, 4079],
                    [9981, -14],
                    [-17, -13],
                    [-4, 23],
                    [14, 12],
                    [9, 3],
                    [-9983, 18]
                ],
                [
                    [0, 4108],
                    [0, -29]
                ],
                [
                    [0, 4108],
                    [6, 3],
                    [-4, -28],
                    [-2, -4]
                ],
                [
                    [3300, 1994],
                    [33, 36],
                    [24, -15],
                    [16, 24],
                    [22, -27],
                    [-8, -21],
                    [-37, -17],
                    [-13, 20],
                    [-23, -26],
                    [-14, 26]
                ],
                [
                    [5265, 7548],
                    [-9, -46],
                    [-13, 12],
                    [-6, 40],
                    [5, 22],
                    [18, 22],
                    [5, -50]
                ],
                [
                    [5157, 7984],
                    [6, -6],
                    [8, 2]
                ],
                [
                    [5190, 7775],
                    [-2, -17],
                    [9, -22],
                    [-10, -18],
                    [7, -46],
                    [15, -8],
                    [-3, -25]
                ],
                [
                    [5206, 7639],
                    [-25, -34],
                    [-55, 16],
                    [-40, -19],
                    [-4, -35]
                ],
                [
                    [4947, 7623],
                    [14, 35],
                    [5, 118],
                    [-28, 62],
                    [-21, 30],
                    [-42, 23],
                    [-3, 43],
                    [36, 12],
                    [47, -15],
                    [-9, 67],
                    [26, -25],
                    [65, 46],
                    [8, 48],
                    [24, 12]
                ],
                [
                    [3485, 5194],
                    [7, 25],
                    [3, 27]
                ],
                [
                    [3495, 5246],
                    [4, 26],
                    [-10, 34]
                ],
                [
                    [3489, 5306],
                    [-3, 41],
                    [15, 51]
                ],
                [
                    [3501, 5398],
                    [9, -7],
                    [21, -14],
                    [29, -50],
                    [5, -24]
                ],
                [
                    [5308, 4822],
                    [-29, 60],
                    [-18, 49],
                    [-17, 61],
                    [1, 19],
                    [6, 19],
                    [7, 43],
                    [5, 44]
                ],
                [
                    [5263, 5117],
                    [10, 4],
                    [40, -1],
                    [0, 71]
                ],
                [
                    [4827, 8240],
                    [-21, 12],
                    [-17, -1],
                    [6, 32],
                    [-6, 32]
                ],
                [
                    [4789, 8315],
                    [23, 2],
                    [30, -37],
                    [-15, -40]
                ],
                [
                    [4916, 8521],
                    [-30, -63],
                    [29, 8],
                    [30, -1],
                    [-7, -48],
                    [-25, -53],
                    [29, -4],
                    [2, -6],
                    [25, -69],
                    [19, -10],
                    [17, -67],
                    [8, -24],
                    [33, -11],
                    [-3, -38],
                    [-14, -17],
                    [11, -30],
                    [-25, -31],
                    [-37, 0],
                    [-48, -16],
                    [-13, 12],
                    [-18, -28],
                    [-26, 7],
                    [-19, -23],
                    [-15, 12],
                    [41, 62],
                    [25, 13],
                    [-1, 0],
                    [-43, 9],
                    [-8, 24],
                    [29, 18],
                    [-15, 32],
                    [5, 39],
                    [42, -6],
                    [4, 35],
                    [-19, 36],
                    [0, 1],
                    [-34, 10],
                    [-7, 16],
                    [10, 27],
                    [-9, 16],
                    [-15, -28],
                    [-1, 57],
                    [-14, 30],
                    [10, 61],
                    [21, 48],
                    [23, -4],
                    [33, 4]
                ],
                [
                    [6154, 7511],
                    [4, 26],
                    [-7, 40],
                    [-16, 22],
                    [-16, 6],
                    [-10, 19]
                ],
                [
                    [6109, 7624],
                    [4, 6],
                    [23, -10],
                    [41, -9],
                    [38, -28],
                    [5, -11],
                    [17, 9],
                    [25, -13],
                    [9, -24],
                    [17, -13]
                ],
                [
                    [6210, 7485],
                    [-27, 29],
                    [-29, -3]
                ],
                [
                    [5029, 5408],
                    [-44, -35],
                    [-15, -20],
                    [-25, -17],
                    [-25, 17]
                ],
                [
                    [5e3, 5708],
                    [-2, -18],
                    [12, -30],
                    [0, -43],
                    [2, -47],
                    [7, -21],
                    [-6, -54],
                    [2, -29],
                    [8, -37],
                    [6, -21]
                ],
                [
                    [4765, 5512],
                    [-8, 1],
                    [-5, -24],
                    [-8, 1],
                    [-6, 12],
                    [2, 24],
                    [-11, 36],
                    [-8, -7],
                    [-6, -1]
                ],
                [
                    [4715, 5554],
                    [-7, -3],
                    [0, 21],
                    [-4, 16],
                    [0, 17],
                    [-6, 25],
                    [-7, 21],
                    [-23, 0],
                    [-6, -11],
                    [-8, -1],
                    [-4, -13],
                    [-4, -17],
                    [-14, -26]
                ],
                [
                    [4632, 5583],
                    [-13, 35],
                    [-10, 24],
                    [-8, 7],
                    [-6, 12],
                    [-4, 26],
                    [-4, 13],
                    [-8, 10]
                ],
                [
                    [4579, 5710],
                    [13, 29],
                    [8, -2],
                    [7, 10],
                    [6, 0],
                    [5, 8],
                    [-3, 20],
                    [3, 6],
                    [1, 20]
                ],
                [
                    [4619, 5801],
                    [13, -1],
                    [20, -14],
                    [6, 1],
                    [3, 7],
                    [15, -5],
                    [4, 4]
                ],
                [
                    [4680, 5793],
                    [1, -22],
                    [5, 0],
                    [7, 8],
                    [5, -2],
                    [7, -15],
                    [12, -5],
                    [8, 13],
                    [9, 8],
                    [6, 8],
                    [6, -1],
                    [6, -13],
                    [3, -17],
                    [12, -24],
                    [-6, -16],
                    [-1, -19],
                    [6, 6],
                    [3, -7],
                    [-1, -17],
                    [8, -18]
                ],
                [
                    [4532, 5834],
                    [3, 27]
                ],
                [
                    [4535, 5861],
                    [31, 1],
                    [6, 14],
                    [9, 1],
                    [11, -14],
                    [8, -1],
                    [9, 10],
                    [6, -17],
                    [-12, -13],
                    [-12, 1],
                    [-12, 13],
                    [-10, -14],
                    [-5, -1],
                    [-7, -8],
                    [-25, 1]
                ],
                [
                    [4579, 5710],
                    [-15, 24],
                    [-11, 4],
                    [-7, 17],
                    [1, 9],
                    [-9, 13],
                    [-2, 12]
                ],
                [
                    [4536, 5789],
                    [15, 10],
                    [9, -2],
                    [8, 7],
                    [51, -3]
                ],
                [
                    [5263, 5117],
                    [-5, 9],
                    [10, 66]
                ],
                [
                    [5658, 7167],
                    [15, -20],
                    [22, 3],
                    [20, -4],
                    [0, -10],
                    [15, 7],
                    [-4, -18],
                    [-40, -5],
                    [1, 10],
                    [-34, 12],
                    [5, 25]
                ],
                [
                    [5723, 7469],
                    [-17, 2],
                    [-14, 6],
                    [-34, -16],
                    [19, -33],
                    [-14, -10],
                    [-15, 0],
                    [-15, 31],
                    [-5, -13],
                    [6, -36],
                    [14, -27],
                    [-10, -13],
                    [15, -27],
                    [14, -18],
                    [0, -33],
                    [-25, 16],
                    [8, -30],
                    [-18, -7],
                    [11, -52],
                    [-19, -1],
                    [-23, 26],
                    [-10, 47],
                    [-5, 40],
                    [-11, 27],
                    [-14, 34],
                    [-2, 16]
                ],
                [
                    [5583, 7470],
                    [18, 6],
                    [11, 13],
                    [15, -2],
                    [5, 11],
                    [5, 2]
                ],
                [
                    [5725, 7529],
                    [13, -16],
                    [-8, -37],
                    [-7, -7]
                ],
                [
                    [3701, 9939],
                    [93, 35],
                    [97, -2],
                    [36, 21],
                    [98, 6],
                    [222, -7],
                    [174, -47],
                    [-52, -23],
                    [-106, -3],
                    [-150, -5],
                    [14, -11],
                    [99, 7],
                    [83, -21],
                    [54, 18],
                    [23, -21],
                    [-30, -34],
                    [71, 22],
                    [135, 23],
                    [83, -12],
                    [15, -25],
                    [-113, -42],
                    [-16, -14],
                    [-88, -10],
                    [64, -3],
                    [-32, -43],
                    [-23, -38],
                    [1, -66],
                    [33, -38],
                    [-43, -3],
                    [-46, -19],
                    [52, -31],
                    [6, -50],
                    [-30, -6],
                    [36, -50],
                    [-61, -5],
                    [32, -24],
                    [-9, -20],
                    [-39, -10],
                    [-39, 0],
                    [35, -40],
                    [0, -26],
                    [-55, 24],
                    [-14, -15],
                    [37, -15],
                    [37, -36],
                    [10, -48],
                    [-49, -11],
                    [-22, 22],
                    [-34, 34],
                    [10, -40],
                    [-33, -31],
                    [73, -2],
                    [39, -3],
                    [-75, -52],
                    [-75, -46],
                    [-81, -21],
                    [-31, 0],
                    [-29, -23],
                    [-38, -62],
                    [-60, -42],
                    [-19, -2],
                    [-37, -15],
                    [-40, -13],
                    [-24, -37],
                    [0, -41],
                    [-15, -39],
                    [-45, -47],
                    [11, -47],
                    [-12, -48],
                    [-14, -58],
                    [-39, -4],
                    [-41, 49],
                    [-56, 0],
                    [-27, 32],
                    [-18, 58],
                    [-49, 73],
                    [-14, 39],
                    [-3, 53],
                    [-39, 54],
                    [10, 44],
                    [-18, 21],
                    [27, 69],
                    [42, 22],
                    [11, 25],
                    [6, 46],
                    [-32, -21],
                    [-15, -9],
                    [-25, -8],
                    [-34, 19],
                    [-2, 40],
                    [11, 31],
                    [25, 1],
                    [57, -15],
                    [-48, 37],
                    [-24, 20],
                    [-28, -8],
                    [-23, 15],
                    [31, 55],
                    [-17, 22],
                    [-22, 41],
                    [-34, 62],
                    [-35, 23],
                    [0, 25],
                    [-74, 34],
                    [-59, 5],
                    [-74, -3],
                    [-68, -4],
                    [-32, 19],
                    [-49, 37],
                    [73, 19],
                    [56, 3],
                    [-119, 15],
                    [-62, 24],
                    [3, 23],
                    [106, 28],
                    [101, 29],
                    [11, 21],
                    [-75, 22],
                    [24, 23],
                    [97, 41],
                    [40, 7],
                    [-12, 26],
                    [66, 16],
                    [86, 9],
                    [85, 1],
                    [30, -19],
                    [74, 33],
                    [66, -22],
                    [39, -5],
                    [58, -19],
                    [-66, 32],
                    [4, 25]
                ],
                [
                    [2497, 5869],
                    [-14, 10],
                    [-17, 1],
                    [-13, 12],
                    [-15, 24]
                ],
                [
                    [2438, 5916],
                    [1, 18],
                    [3, 13],
                    [-4, 12],
                    [13, 48],
                    [36, 0],
                    [1, 20],
                    [-5, 4],
                    [-3, 12],
                    [-10, 14],
                    [-11, 20],
                    [13, 0],
                    [0, 33],
                    [26, 0],
                    [26, 0]
                ],
                [
                    [2529, 5996],
                    [10, -11],
                    [2, 9],
                    [8, -7]
                ],
                [
                    [2549, 5987],
                    [-13, -23],
                    [-13, -16],
                    [-2, -12],
                    [2, -11],
                    [-5, -15]
                ],
                [
                    [2518, 5910],
                    [-7, -4],
                    [2, -7],
                    [-6, -6],
                    [-9, -15],
                    [-1, -9]
                ],
                [
                    [3340, 5552],
                    [18, -22],
                    [17, -38],
                    [1, -31],
                    [10, -1],
                    [15, -29],
                    [11, -21]
                ],
                [
                    [3412, 5410],
                    [-4, -53],
                    [-17, -15],
                    [1, -14],
                    [-5, -31],
                    [13, -42],
                    [9, -1],
                    [3, -33],
                    [17, -51]
                ],
                [
                    [3313, 5365],
                    [-19, 45],
                    [7, 16],
                    [0, 27],
                    [17, 10],
                    [7, 11],
                    [-10, 22],
                    [3, 21],
                    [22, 35]
                ],
                [
                    [2574, 5825],
                    [-5, 18],
                    [-8, 5]
                ],
                [
                    [2561, 5848],
                    [2, 24],
                    [-4, 6],
                    [-6, 4],
                    [-12, -7],
                    [-1, 8],
                    [-8, 10],
                    [-6, 12],
                    [-8, 5]
                ],
                [
                    [2549, 5987],
                    [3, -3],
                    [6, 11],
                    [8, 1],
                    [3, -5],
                    [4, 3],
                    [13, -6],
                    [13, 2],
                    [9, 6],
                    [3, 7],
                    [9, -3],
                    [6, -4],
                    [8, 1],
                    [5, 5],
                    [13, -8],
                    [4, -1],
                    [9, -11],
                    [8, -13],
                    [10, -9],
                    [7, -17]
                ],
                [
                    [2690, 5943],
                    [-9, 2],
                    [-4, -8],
                    [-10, -8],
                    [-7, 0],
                    [-6, -8],
                    [-6, 3],
                    [-4, 9],
                    [-3, -2],
                    [-4, -14],
                    [-3, 1],
                    [0, -12],
                    [-10, -17],
                    [-5, -7],
                    [-3, -7],
                    [-8, 12],
                    [-6, -16],
                    [-6, 1],
                    [-6, -2],
                    [0, -29],
                    [-4, 0],
                    [-3, -14],
                    [-9, -2]
                ],
                [
                    [5522, 7770],
                    [7, -23],
                    [9, -17],
                    [-11, -22]
                ],
                [
                    [5515, 7577],
                    [-3, -10]
                ],
                [
                    [5512, 7567],
                    [-26, 22],
                    [-16, 21],
                    [-26, 18],
                    [-23, 43],
                    [6, 5],
                    [-13, 25],
                    [-1, 19],
                    [-17, 10],
                    [-9, -26],
                    [-8, 20],
                    [0, 21],
                    [1, 1]
                ],
                [
                    [5380, 7746],
                    [20, -2],
                    [5, 9],
                    [9, -9],
                    [11, -1],
                    [0, 16],
                    [10, 6],
                    [2, 24],
                    [23, 16]
                ],
                [
                    [5460, 7805],
                    [8, -7],
                    [21, -26],
                    [23, -11],
                    [10, 9]
                ],
                [
                    [3008, 6124],
                    [-19, 10],
                    [-13, -5],
                    [-17, 5],
                    [-13, -11],
                    [-15, 18],
                    [3, 19],
                    [25, -8],
                    [21, -5],
                    [10, 13],
                    [-12, 26],
                    [0, 23],
                    [-18, 9],
                    [7, 16],
                    [17, -3],
                    [24, -9]
                ],
                [
                    [5471, 7900],
                    [14, -15],
                    [10, -6],
                    [24, 7],
                    [2, 12],
                    [11, 2],
                    [14, 9],
                    [3, -4],
                    [13, 8],
                    [6, 13],
                    [9, 4],
                    [30, -18],
                    [6, 6]
                ],
                [
                    [5613, 7918],
                    [15, -16],
                    [2, -16]
                ],
                [
                    [5630, 7886],
                    [-17, -12],
                    [-13, -40],
                    [-17, -40],
                    [-22, -11]
                ],
                [
                    [5561, 7783],
                    [-17, 2],
                    [-22, -15]
                ],
                [
                    [5460, 7805],
                    [-6, 20],
                    [-4, 0]
                ],
                [
                    [8352, 4453],
                    [-11, -2],
                    [-37, 42],
                    [26, 11],
                    [14, -18],
                    [10, -17],
                    [-2, -16]
                ],
                [
                    [8471, 4532],
                    [2, -11],
                    [1, -18]
                ],
                [
                    [8474, 4503],
                    [-18, -45],
                    [-24, -13],
                    [-3, 8],
                    [2, 20],
                    [12, 36],
                    [28, 23]
                ],
                [
                    [8274, 4579],
                    [10, -16],
                    [17, 5],
                    [7, -25],
                    [-32, -12],
                    [-19, -8],
                    [-15, 1],
                    [10, 34],
                    [15, 0],
                    [7, 21]
                ],
                [
                    [8413, 4579],
                    [-4, -32],
                    [-42, -17],
                    [-37, 7],
                    [0, 22],
                    [22, 12],
                    [18, -18],
                    [18, 5],
                    [25, 21]
                ],
                [
                    [8017, 4657],
                    [53, -6],
                    [6, 25],
                    [51, -29],
                    [10, -38],
                    [42, -11],
                    [34, -35],
                    [-31, -23],
                    [-31, 24],
                    [-25, -1],
                    [-29, 4],
                    [-26, 11],
                    [-32, 22],
                    [-21, 6],
                    [-11, -7],
                    [-51, 24],
                    [-5, 25],
                    [-25, 5],
                    [19, 56],
                    [34, -3],
                    [22, -23],
                    [12, -5],
                    [4, -21]
                ],
                [
                    [8741, 4690],
                    [-14, -40],
                    [-3, 45],
                    [5, 21],
                    [6, 20],
                    [7, -17],
                    [-1, -29]
                ],
                [
                    [8534, 4853],
                    [-11, -19],
                    [-19, 10],
                    [-5, 26],
                    [28, 3],
                    [7, -20]
                ],
                [
                    [8623, 4875],
                    [10, -45],
                    [-23, 24],
                    [-23, 5],
                    [-16, -4],
                    [-19, 2],
                    [6, 33],
                    [35, 2],
                    [30, -17]
                ],
                [
                    [8916, 4904],
                    [0, -193],
                    [1, -192]
                ],
                [
                    [8917, 4519],
                    [-25, 48],
                    [-28, 12],
                    [-7, -17],
                    [-35, -1],
                    [12, 48],
                    [17, 16],
                    [-7, 64],
                    [-14, 50],
                    [-53, 50],
                    [-23, 5],
                    [-42, 54],
                    [-8, -28],
                    [-11, -5],
                    [-6, 21],
                    [0, 26],
                    [-21, 29],
                    [29, 21],
                    [20, -1],
                    [-2, 16],
                    [-41, 0],
                    [-11, 35],
                    [-25, 11],
                    [-11, 29],
                    [37, 14],
                    [14, 20],
                    [45, -25],
                    [4, -22],
                    [8, -95],
                    [29, -35],
                    [23, 62],
                    [32, 36],
                    [25, 0],
                    [23, -21],
                    [21, -21],
                    [30, -11]
                ],
                [
                    [8478, 5141],
                    [-22, -58],
                    [-21, -12],
                    [-27, 12],
                    [-46, -3],
                    [-24, -8],
                    [-4, -45],
                    [24, -53],
                    [15, 27],
                    [52, 20],
                    [-2, -27],
                    [-12, 9],
                    [-12, -35],
                    [-25, -23],
                    [27, -76],
                    [-5, -20],
                    [25, -68],
                    [-1, -39],
                    [-14, -17],
                    [-11, 20],
                    [13, 49],
                    [-27, -23],
                    [-7, 16],
                    [3, 23],
                    [-20, 35],
                    [3, 57],
                    [-19, -18],
                    [2, -69],
                    [1, -84],
                    [-17, -9],
                    [-12, 18],
                    [8, 54],
                    [-4, 57],
                    [-12, 1],
                    [-9, 40],
                    [12, 39],
                    [4, 47],
                    [14, 89],
                    [5, 24],
                    [24, 44],
                    [22, -18],
                    [35, -8],
                    [32, 3],
                    [27, 43],
                    [5, -14]
                ],
                [
                    [8574, 5124],
                    [-2, -51],
                    [-14, 6],
                    [-4, -36],
                    [11, -32],
                    [-8, -7],
                    [-11, 38],
                    [-8, 75],
                    [6, 47],
                    [9, 22],
                    [2, -32],
                    [16, -5],
                    [3, -25]
                ],
                [
                    [8045, 5176],
                    [5, -39],
                    [19, -34],
                    [18, 12],
                    [18, -4],
                    [16, 30],
                    [13, 5],
                    [26, -17],
                    [23, 13],
                    [14, 82],
                    [11, 21],
                    [10, 67],
                    [32, 0],
                    [24, -10]
                ],
                [
                    [8274, 5302],
                    [-16, -53],
                    [20, -56],
                    [-5, -28],
                    [32, -54],
                    [-33, -7],
                    [-10, -40],
                    [2, -54],
                    [-27, -40],
                    [-1, -59],
                    [-10, -91],
                    [-5, 21],
                    [-31, -26],
                    [-11, 36],
                    [-20, 3],
                    [-14, 19],
                    [-33, -21],
                    [-10, 29],
                    [-18, -4],
                    [-23, 7],
                    [-4, 79],
                    [-14, 17],
                    [-13, 50],
                    [-4, 52],
                    [3, 55],
                    [16, 39]
                ],
                [
                    [7939, 4712],
                    [-31, -1],
                    [-24, 49],
                    [-35, 48],
                    [-12, 36],
                    [-21, 48],
                    [-14, 44],
                    [-21, 83],
                    [-24, 49],
                    [-9, 51],
                    [-10, 46],
                    [-25, 37],
                    [-14, 51],
                    [-21, 33],
                    [-29, 65],
                    [-3, 30],
                    [18, -2],
                    [43, -12],
                    [25, -57],
                    [21, -40],
                    [16, -25],
                    [26, -63],
                    [28, -1],
                    [23, -41],
                    [16, -49],
                    [22, -27],
                    [-12, -49],
                    [16, -20],
                    [10, -2],
                    [5, -41],
                    [10, -33],
                    [20, -5],
                    [14, -37],
                    [-7, -74],
                    [-1, -91]
                ],
                [
                    [7252, 6841],
                    [-17, -27],
                    [-11, -55],
                    [27, -23],
                    [26, -29],
                    [36, -33],
                    [38, -8],
                    [16, -30],
                    [22, -5],
                    [33, -14],
                    [23, 1],
                    [4, 23],
                    [-4, 38],
                    [2, 25]
                ],
                [
                    [7703, 6727],
                    [2, -22],
                    [-10, -11],
                    [2, -36],
                    [-19, 10],
                    [-36, -41],
                    [0, -33],
                    [-15, -50],
                    [-1, -29],
                    [-13, -48],
                    [-21, 13],
                    [-1, -61],
                    [-7, -20],
                    [3, -25],
                    [-14, -14]
                ],
                [
                    [7472, 6360],
                    [-4, -21],
                    [-19, 1],
                    [-34, -13],
                    [2, -44],
                    [-15, -35],
                    [-40, -40],
                    [-31, -69],
                    [-21, -38],
                    [-28, -38],
                    [0, -27],
                    [-13, -15],
                    [-26, -21],
                    [-12, -3],
                    [-9, -45],
                    [6, -77],
                    [1, -49],
                    [-11, -56],
                    [0, -101],
                    [-15, -2],
                    [-12, -46],
                    [8, -19],
                    [-25, -17],
                    [-10, -40],
                    [-11, -17],
                    [-26, 55],
                    [-13, 83],
                    [-11, 60],
                    [-9, 28],
                    [-15, 56],
                    [-7, 74],
                    [-5, 37],
                    [-25, 81],
                    [-12, 115],
                    [-8, 75],
                    [0, 72],
                    [-5, 55],
                    [-41, -35],
                    [-19, 7],
                    [-36, 71],
                    [13, 22],
                    [-8, 23],
                    [-33, 50]
                ],
                [
                    [6893, 6457],
                    [19, 40],
                    [61, -1],
                    [-6, 51],
                    [-15, 30],
                    [-4, 46],
                    [-18, 26],
                    [31, 62],
                    [32, -4],
                    [29, 61],
                    [18, 60],
                    [27, 60],
                    [-1, 42],
                    [24, 34],
                    [-23, 29],
                    [-9, 40],
                    [-10, 52],
                    [14, 25],
                    [42, -14],
                    [31, 9],
                    [26, 49]
                ],
                [
                    [4827, 8240],
                    [5, -42],
                    [-21, -53],
                    [-49, -35],
                    [-40, 9],
                    [23, 62],
                    [-15, 60],
                    [38, 46],
                    [21, 28]
                ],
                [
                    [6497, 7255],
                    [25, 12],
                    [19, 33],
                    [19, -1],
                    [12, 11],
                    [20, -6],
                    [31, -30],
                    [22, -6],
                    [31, -53],
                    [21, -2],
                    [3, -49]
                ],
                [
                    [6690, 6820],
                    [14, -31],
                    [11, -36],
                    [27, -26],
                    [1, -52],
                    [13, -10],
                    [2, -27],
                    [-40, -30],
                    [-10, -69]
                ],
                [
                    [6708, 6539],
                    [-53, 18],
                    [-30, 13],
                    [-31, 8],
                    [-12, 73],
                    [-13, 10],
                    [-22, -11],
                    [-28, -28],
                    [-34, 20],
                    [-28, 45],
                    [-27, 17],
                    [-18, 56],
                    [-21, 79],
                    [-15, -10],
                    [-17, 20],
                    [-11, -24]
                ],
                [
                    [6348, 6825],
                    [-15, 32],
                    [0, 31],
                    [-9, 0],
                    [5, 43],
                    [-15, 45],
                    [-34, 32],
                    [-19, 56],
                    [6, 46],
                    [14, 21],
                    [-2, 34],
                    [-18, 18],
                    [-18, 70]
                ],
                [
                    [6243, 7253],
                    [-15, 48],
                    [5, 18],
                    [-8, 68],
                    [19, 17]
                ],
                [
                    [6357, 7321],
                    [9, -43],
                    [26, -13],
                    [20, -29],
                    [39, -10],
                    [44, 15],
                    [2, 14]
                ],
                [
                    [6348, 6825],
                    [-16, 3]
                ],
                [
                    [6332, 6828],
                    [-19, 5],
                    [-20, -56]
                ],
                [
                    [6293, 6777],
                    [-52, 4],
                    [-78, 119],
                    [-41, 41],
                    [-34, 16]
                ],
                [
                    [6088, 6957],
                    [-11, 72]
                ],
                [
                    [6077, 7029],
                    [61, 62],
                    [11, 71],
                    [-3, 43],
                    [16, 15],
                    [14, 37]
                ],
                [
                    [6176, 7257],
                    [12, 9],
                    [32, -8],
                    [10, -15],
                    [13, 10]
                ],
                [
                    [4597, 8984],
                    [-7, -39],
                    [31, -40],
                    [-36, -45],
                    [-80, -41],
                    [-24, -10],
                    [-36, 8],
                    [-78, 19],
                    [28, 26],
                    [-61, 29],
                    [49, 12],
                    [-1, 17],
                    [-58, 14],
                    [19, 38],
                    [42, 9],
                    [43, -40],
                    [42, 32],
                    [35, -17],
                    [45, 32],
                    [47, -4]
                ],
                [
                    [5992, 6990],
                    [-5, -19]
                ],
                [
                    [5987, 6971],
                    [-10, 8],
                    [-6, -39],
                    [7, -7],
                    [-7, -8],
                    [-1, -15],
                    [13, 8]
                ],
                [
                    [5983, 6918],
                    [0, -23],
                    [-14, -95]
                ],
                [
                    [5951, 6902],
                    [8, 19],
                    [-2, 4],
                    [8, 27],
                    [5, 45],
                    [4, 15],
                    [1, 0]
                ],
                [
                    [5975, 7012],
                    [9, 0],
                    [3, 11],
                    [7, 0]
                ],
                [
                    [5994, 7023],
                    [1, -24],
                    [-4, -9],
                    [1, 0]
                ],
                [
                    [5431, 7316],
                    [-10, -46],
                    [4, -19],
                    [-6, -30],
                    [-21, 22],
                    [-14, 7],
                    [-39, 30],
                    [4, 30],
                    [32, -6],
                    [28, 7],
                    [22, 5]
                ],
                [
                    [5255, 7492],
                    [17, -42],
                    [-4, -78],
                    [-13, 4],
                    [-11, -20],
                    [-10, 16],
                    [-2, 71],
                    [-6, 34],
                    [15, -3],
                    [14, 18]
                ],
                [
                    [5383, 7805],
                    [-3, -29],
                    [7, -25]
                ],
                [
                    [5387, 7751],
                    [-22, 8],
                    [-23, -20],
                    [1, -30],
                    [-3, -17],
                    [9, -30],
                    [26, -29],
                    [14, -49],
                    [31, -48],
                    [22, 0],
                    [7, -13],
                    [-8, -11],
                    [25, -22],
                    [20, -18],
                    [24, -30],
                    [3, -11],
                    [-5, -22],
                    [-16, 28],
                    [-24, 10],
                    [-12, -39],
                    [20, -21],
                    [-3, -31],
                    [-11, -4],
                    [-15, -50],
                    [-12, -5],
                    [0, 18],
                    [6, 32],
                    [6, 12],
                    [-11, 35],
                    [-8, 29],
                    [-12, 8],
                    [-8, 25],
                    [-18, 11],
                    [-12, 24],
                    [-21, 4],
                    [-21, 26],
                    [-26, 39],
                    [-19, 34],
                    [-8, 58],
                    [-14, 7],
                    [-23, 20],
                    [-12, -8],
                    [-16, -28],
                    [-12, -4]
                ],
                [
                    [2845, 6150],
                    [19, -5],
                    [14, -15],
                    [5, -16],
                    [-19, -1],
                    [-9, -10],
                    [-15, 10],
                    [-16, 21],
                    [3, 14],
                    [12, 4],
                    [6, -2]
                ],
                [
                    [5992, 6990],
                    [31, -24],
                    [54, 63]
                ],
                [
                    [6088, 6957],
                    [-5, -8],
                    [-56, -30],
                    [28, -59],
                    [-9, -10],
                    [-5, -20],
                    [-21, -8],
                    [-7, -21],
                    [-12, -19],
                    [-31, 10]
                ],
                [
                    [5970, 6792],
                    [-1, 8]
                ],
                [
                    [5983, 6918],
                    [4, 17],
                    [0, 36]
                ],
                [
                    [8739, 7075],
                    [4, -20],
                    [-16, -36],
                    [-11, 19],
                    [-15, -14],
                    [-7, -34],
                    [-18, 16],
                    [0, 28],
                    [15, 36],
                    [16, -7],
                    [12, 25],
                    [20, -13]
                ],
                [
                    [8915, 7252],
                    [-10, -47],
                    [4, -30],
                    [-14, -42],
                    [-35, -27],
                    [-49, -4],
                    [-40, -67],
                    [-19, 22],
                    [-1, 44],
                    [-48, -13],
                    [-33, -27],
                    [-32, -2],
                    [28, -43],
                    [-19, -101],
                    [-18, -24],
                    [-13, 23],
                    [7, 53],
                    [-18, 17],
                    [-11, 41],
                    [26, 18],
                    [15, 37],
                    [28, 30],
                    [20, 41],
                    [55, 17],
                    [30, -12],
                    [29, 105],
                    [19, -28],
                    [40, 59],
                    [16, 23],
                    [18, 72],
                    [-5, 67],
                    [11, 37],
                    [30, 11],
                    [15, -82],
                    [-1, -48],
                    [-25, -59],
                    [0, -61]
                ],
                [
                    [8997, 7667],
                    [19, -12],
                    [20, 25],
                    [6, -67],
                    [-41, -16],
                    [-25, -59],
                    [-43, 41],
                    [-15, -65],
                    [-31, -1],
                    [-4, 59],
                    [14, 46],
                    [29, 3],
                    [8, 82],
                    [9, 46],
                    [32, -62],
                    [22, -20]
                ],
                [
                    [6970, 7554],
                    [-15, -10],
                    [-37, -42],
                    [-12, -42],
                    [-11, 0],
                    [-7, 28],
                    [-36, 2],
                    [-5, 48],
                    [-14, 0],
                    [2, 60],
                    [-33, 43],
                    [-48, -5],
                    [-32, -8],
                    [-27, 53],
                    [-22, 22],
                    [-43, 43],
                    [-6, 5],
                    [-71, -35],
                    [1, -218]
                ],
                [
                    [6554, 7498],
                    [-14, -3],
                    [-20, 46],
                    [-18, 17],
                    [-32, -12],
                    [-12, -20]
                ],
                [
                    [6458, 7526],
                    [-2, 14],
                    [7, 25],
                    [-5, 21],
                    [-32, 20],
                    [-13, 53],
                    [-15, 15],
                    [-1, 19],
                    [27, -6],
                    [1, 44],
                    [23, 9],
                    [25, -9],
                    [5, 58],
                    [-5, 36],
                    [-28, -2],
                    [-24, 14],
                    [-32, -26],
                    [-26, -12]
                ],
                [
                    [6363, 7799],
                    [-14, 9],
                    [3, 31],
                    [-18, 39],
                    [-20, -2],
                    [-24, 40],
                    [16, 45],
                    [-8, 12],
                    [22, 65],
                    [29, -34],
                    [3, 43],
                    [58, 64],
                    [43, 2],
                    [61, -41],
                    [33, -24],
                    [30, 25],
                    [44, 1],
                    [35, -30],
                    [8, 17],
                    [39, -2],
                    [7, 28],
                    [-45, 40],
                    [27, 29],
                    [-5, 16],
                    [26, 15],
                    [-20, 41],
                    [13, 20],
                    [104, 21],
                    [13, 14],
                    [70, 22],
                    [25, 24],
                    [50, -12],
                    [9, -61],
                    [29, 14],
                    [35, -20],
                    [-2, -32],
                    [27, 3],
                    [69, 56],
                    [-10, -19],
                    [35, -46],
                    [62, -150],
                    [15, 31],
                    [39, -34],
                    [39, 16],
                    [16, -11],
                    [13, -34],
                    [20, -12],
                    [11, -25],
                    [36, 8],
                    [15, -36]
                ],
                [
                    [7229, 7559],
                    [-17, 9],
                    [-14, 21],
                    [-42, 6],
                    [-46, 2],
                    [-10, -6],
                    [-39, 24],
                    [-16, -12],
                    [-4, -35],
                    [-46, 21],
                    [-18, -9],
                    [-7, -26]
                ],
                [
                    [6155, 4958],
                    [-20, -24],
                    [-7, -24],
                    [-10, -4],
                    [-4, -42],
                    [-9, -24],
                    [-5, -39],
                    [-12, -20]
                ],
                [
                    [6088, 4781],
                    [-40, 59],
                    [-1, 35],
                    [-101, 120],
                    [-5, 6]
                ],
                [
                    [5941, 5001],
                    [0, 63],
                    [8, 24],
                    [14, 39],
                    [10, 43],
                    [-13, 68],
                    [-3, 30],
                    [-13, 41]
                ],
                [
                    [5944, 5309],
                    [17, 35],
                    [19, 39]
                ],
                [
                    [6162, 5289],
                    [-24, -67],
                    [0, -215],
                    [17, -49]
                ],
                [
                    [7046, 7387],
                    [-53, -9],
                    [-34, 19],
                    [-30, -4],
                    [3, 34],
                    [30, -10],
                    [10, 18]
                ],
                [
                    [6972, 7435],
                    [21, -6],
                    [36, 43],
                    [-33, 31],
                    [-20, -15],
                    [-21, 22],
                    [24, 39],
                    [-9, 5]
                ],
                [
                    [7849, 5777],
                    [-7, 72],
                    [18, 49],
                    [36, 11],
                    [26, -8]
                ],
                [
                    [7922, 5901],
                    [23, -23],
                    [12, 40],
                    [25, -21]
                ],
                [
                    [7982, 5897],
                    [6, -40],
                    [-3, -71],
                    [-47, -45],
                    [13, -36],
                    [-30, -4],
                    [-24, -24]
                ],
                [
                    [7897, 5677],
                    [-23, 9],
                    [-11, 30],
                    [-14, 61]
                ],
                [
                    [8564, 7339],
                    [24, -70],
                    [7, -38],
                    [0, -68],
                    [-10, -33],
                    [-25, -11],
                    [-22, -25],
                    [-25, -5],
                    [-3, 32],
                    [5, 45],
                    [-13, 61],
                    [21, 10],
                    [-19, 51]
                ],
                [
                    [8504, 7288],
                    [2, 5],
                    [12, -2],
                    [11, 27],
                    [20, 2],
                    [11, 4],
                    [4, 15]
                ],
                [
                    [5557, 7574],
                    [5, 13]
                ],
                [
                    [5562, 7587],
                    [7, 4],
                    [4, 20],
                    [5, 3],
                    [4, -8],
                    [5, -4],
                    [3, -10],
                    [5, -2],
                    [5, -11],
                    [4, 0],
                    [-3, -14],
                    [-3, -7],
                    [1, -5]
                ],
                [
                    [5599, 7553],
                    [-6, -2],
                    [-17, -9],
                    [-1, -12],
                    [-4, 0]
                ],
                [
                    [6332, 6828],
                    [6, -26],
                    [-3, -13],
                    [9, -45]
                ],
                [
                    [6344, 6744],
                    [-19, -1],
                    [-7, 28],
                    [-25, 6]
                ],
                [
                    [7922, 5901],
                    [9, 26],
                    [1, 50],
                    [-22, 52],
                    [-2, 58],
                    [-21, 48],
                    [-21, 4],
                    [-6, -20],
                    [-16, -2],
                    [-8, 10],
                    [-30, -35],
                    [0, 53],
                    [7, 62],
                    [-19, 3],
                    [-2, 36],
                    [-12, 18]
                ],
                [
                    [7780, 6264],
                    [6, 21],
                    [24, 39]
                ],
                [
                    [7837, 6385],
                    [17, -47],
                    [12, -54],
                    [34, 0],
                    [11, -52],
                    [-18, -15],
                    [-8, -21],
                    [34, -36],
                    [23, -70],
                    [17, -52],
                    [21, -41],
                    [7, -41],
                    [-5, -59]
                ],
                [
                    [5975, 7012],
                    [10, 49],
                    [14, 41],
                    [0, 2]
                ],
                [
                    [5999, 7104],
                    [13, -3],
                    [4, -23],
                    [-15, -22],
                    [-7, -33]
                ],
                [
                    [4785, 5315],
                    [-7, 0],
                    [-29, 28],
                    [-25, 45],
                    [-24, 32],
                    [-18, 38]
                ],
                [
                    [4682, 5458],
                    [6, 19],
                    [2, 17],
                    [12, 33],
                    [13, 27]
                ],
                [
                    [5412, 6408],
                    [-20, -22],
                    [-15, 33],
                    [-44, 25]
                ],
                [
                    [5263, 6848],
                    [13, 14],
                    [3, 25],
                    [-3, 24],
                    [19, 23],
                    [8, 19],
                    [14, 17],
                    [2, 45]
                ],
                [
                    [5319, 7015],
                    [32, -20],
                    [12, 5],
                    [23, -10],
                    [37, -26],
                    [13, -53],
                    [25, -11],
                    [39, -25],
                    [30, -29],
                    [13, 15],
                    [13, 27],
                    [-6, 45],
                    [9, 29],
                    [20, 28],
                    [19, 8],
                    [37, -12],
                    [10, -27],
                    [10, 0],
                    [9, -10],
                    [28, -7],
                    [6, -19]
                ],
                [
                    [5694, 6357],
                    [0, -118],
                    [-32, 0],
                    [0, -25]
                ],
                [
                    [5662, 6214],
                    [-111, 113],
                    [-111, 113],
                    [-28, -32]
                ],
                [
                    [7271, 5502],
                    [-4, -62],
                    [-12, -16],
                    [-24, -14],
                    [-13, 47],
                    [-5, 85],
                    [13, 96],
                    [19, -33],
                    [13, -42],
                    [13, -61]
                ],
                [
                    [5804, 3347],
                    [10, -18],
                    [-9, -29],
                    [-4, -19],
                    [-16, -9],
                    [-5, -19],
                    [-10, -6],
                    [-21, 46],
                    [15, 37],
                    [15, 23],
                    [13, 12],
                    [12, -18]
                ],
                [
                    [5631, 8267],
                    [-2, 15],
                    [3, 16],
                    [-13, 10],
                    [-29, 10]
                ],
                [
                    [5590, 8318],
                    [-6, 50]
                ],
                [
                    [5584, 8368],
                    [32, 18],
                    [47, -4],
                    [27, 6],
                    [4, -12],
                    [15, -4],
                    [26, -29]
                ],
                [
                    [5652, 8242],
                    [-7, 19],
                    [-14, 6]
                ],
                [
                    [5584, 8368],
                    [1, 44],
                    [14, 37],
                    [26, 20],
                    [22, -44],
                    [22, 1],
                    [6, 46]
                ],
                [
                    [5757, 8453],
                    [14, -14],
                    [2, -28],
                    [9, -35]
                ],
                [
                    [4759, 6691],
                    [-4, 0],
                    [0, -31],
                    [-17, -2],
                    [-9, -14],
                    [-13, 0],
                    [-10, 8],
                    [-23, -6],
                    [-9, -46],
                    [-9, -5],
                    [-13, -74],
                    [-38, -64],
                    [-9, -81],
                    [-12, -27],
                    [-3, -21],
                    [-63, -5]
                ],
                [
                    [4527, 6323],
                    [1, 27],
                    [11, 17],
                    [9, 30],
                    [-2, 20],
                    [10, 42],
                    [15, 38],
                    [9, 9],
                    [8, 35],
                    [0, 31],
                    [10, 37],
                    [19, 21],
                    [18, 60],
                    [0, 1],
                    [14, 23],
                    [26, 6],
                    [22, 41],
                    [14, 16],
                    [23, 49],
                    [-7, 73],
                    [10, 51],
                    [4, 31],
                    [18, 40],
                    [28, 27],
                    [21, 25],
                    [18, 61],
                    [9, 36],
                    [20, 0],
                    [17, -25],
                    [26, 4],
                    [29, -13],
                    [12, -1]
                ],
                [
                    [5739, 7906],
                    [6, 9],
                    [19, 6],
                    [20, -19],
                    [12, -2],
                    [12, -16],
                    [-2, -20],
                    [11, -9],
                    [4, -25],
                    [9, -15],
                    [-2, -9],
                    [5, -6],
                    [-7, -4],
                    [-16, 1],
                    [-3, 9],
                    [-6, -5],
                    [2, -11],
                    [-7, -19],
                    [-5, -20],
                    [-7, -6]
                ],
                [
                    [5784, 7745],
                    [-5, 27],
                    [3, 25],
                    [-1, 26],
                    [-16, 35],
                    [-9, 25],
                    [-9, 17],
                    [-8, 6]
                ],
                [
                    [6376, 4321],
                    [7, -25],
                    [7, -39],
                    [4, -71],
                    [7, -28],
                    [-2, -28],
                    [-5, -18],
                    [-10, 35],
                    [-5, -18],
                    [5, -43],
                    [-2, -25],
                    [-8, -14],
                    [-1, -50],
                    [-11, -69],
                    [-14, -81],
                    [-17, -112],
                    [-11, -82],
                    [-12, -69],
                    [-23, -14],
                    [-24, -25],
                    [-16, 15],
                    [-22, 21],
                    [-8, 31],
                    [-2, 53],
                    [-10, 47],
                    [-2, 42],
                    [5, 43],
                    [13, 10],
                    [0, 20],
                    [13, 45],
                    [2, 37],
                    [-6, 28],
                    [-5, 38],
                    [-2, 54],
                    [9, 33],
                    [4, 38],
                    [14, 2],
                    [15, 12],
                    [11, 10],
                    [12, 1],
                    [16, 34],
                    [23, 36],
                    [8, 30],
                    [-4, 25],
                    [12, -7],
                    [15, 41],
                    [1, 36],
                    [9, 26],
                    [10, -25]
                ],
                [
                    [2301, 6586],
                    [-10, -52],
                    [-5, -43],
                    [-2, -79],
                    [-3, -29],
                    [5, -32],
                    [9, -29],
                    [5, -45],
                    [19, -44],
                    [6, -34],
                    [11, -29],
                    [29, -16],
                    [12, -25],
                    [24, 17],
                    [21, 6],
                    [21, 11],
                    [18, 10],
                    [17, 24],
                    [7, 34],
                    [2, 50],
                    [5, 17],
                    [19, 16],
                    [29, 13],
                    [25, -2],
                    [17, 5],
                    [6, -12],
                    [-1, -29],
                    [-15, -35],
                    [-6, -36],
                    [5, -10],
                    [-4, -26],
                    [-7, -46],
                    [-7, 15],
                    [-6, -1]
                ],
                [
                    [2438, 5916],
                    [-32, 64],
                    [-14, 19],
                    [-23, 16],
                    [-15, -5],
                    [-22, -22],
                    [-14, -6],
                    [-20, 16],
                    [-21, 11],
                    [-26, 27],
                    [-21, 8],
                    [-31, 28],
                    [-23, 28],
                    [-7, 16],
                    [-16, 3],
                    [-28, 19],
                    [-12, 27],
                    [-30, 34],
                    [-14, 37],
                    [-6, 29],
                    [9, 5],
                    [-3, 17],
                    [7, 16],
                    [0, 20],
                    [-10, 27],
                    [-2, 23],
                    [-9, 30],
                    [-25, 59],
                    [-28, 46],
                    [-13, 37],
                    [-24, 24],
                    [-5, 14],
                    [4, 37],
                    [-14, 13],
                    [-17, 29],
                    [-7, 41],
                    [-14, 5],
                    [-17, 31],
                    [-13, 29],
                    [-1, 19],
                    [-15, 44],
                    [-10, 45],
                    [1, 23],
                    [-20, 23],
                    [-10, -2],
                    [-15, 16],
                    [-5, -24],
                    [5, -28],
                    [2, -45],
                    [10, -24],
                    [21, -41],
                    [4, -14],
                    [4, -4],
                    [4, -20],
                    [5, 1],
                    [6, -38],
                    [8, -15],
                    [6, -21],
                    [17, -30],
                    [10, -55],
                    [8, -26],
                    [8, -28],
                    [1, -31],
                    [13, -2],
                    [12, -27],
                    [10, -26],
                    [-1, -11],
                    [-12, -21],
                    [-5, 0],
                    [-7, 36],
                    [-18, 33],
                    [-20, 29],
                    [-14, 15],
                    [1, 43],
                    [-5, 32],
                    [-13, 19],
                    [-19, 26],
                    [-4, -8],
                    [-7, 16],
                    [-17, 14],
                    [-16, 34],
                    [2, 5],
                    [11, -4],
                    [11, 22],
                    [1, 27],
                    [-22, 42],
                    [-16, 17],
                    [-10, 36],
                    [-11, 39],
                    [-12, 47],
                    [-12, 54]
                ],
                [
                    [1746, 6980],
                    [32, 4],
                    [35, 7],
                    [-2, -12],
                    [41, -29],
                    [64, -41],
                    [55, 0],
                    [22, 0],
                    [0, 24],
                    [48, 0],
                    [10, -20],
                    [15, -19],
                    [16, -26],
                    [9, -31],
                    [7, -32],
                    [15, -18],
                    [23, -18],
                    [17, 47],
                    [23, 1],
                    [19, -24],
                    [14, -40],
                    [10, -35],
                    [16, -34],
                    [6, -41],
                    [8, -28],
                    [22, -18],
                    [20, -13],
                    [10, 2]
                ],
                [
                    [5599, 7553],
                    [9, 4],
                    [13, 1]
                ],
                [
                    [4661, 5921],
                    [10, 11],
                    [4, 35],
                    [9, 1],
                    [20, -16],
                    [15, 11],
                    [11, -4],
                    [4, 13],
                    [112, 1],
                    [6, 42],
                    [-5, 7],
                    [-13, 255],
                    [-14, 255],
                    [43, 1]
                ],
                [
                    [5118, 6189],
                    [0, -136],
                    [-15, -39],
                    [-2, -37],
                    [-25, -9],
                    [-38, -5],
                    [-10, -21],
                    [-18, -3]
                ],
                [
                    [4680, 5793],
                    [1, 18],
                    [-2, 23],
                    [-11, 16],
                    [-5, 34],
                    [-2, 37]
                ],
                [
                    [7737, 5644],
                    [-3, 44],
                    [9, 45],
                    [-10, 35],
                    [3, 65],
                    [-12, 30],
                    [-9, 71],
                    [-5, 75],
                    [-12, 49],
                    [-18, -30],
                    [-32, -42],
                    [-15, 5],
                    [-17, 14],
                    [9, 73],
                    [-6, 56],
                    [-21, 68],
                    [3, 21],
                    [-16, 7],
                    [-20, 49]
                ],
                [
                    [7780, 6264],
                    [-16, -14],
                    [-16, -26],
                    [-20, -2],
                    [-12, -64],
                    [-12, -11],
                    [14, -52],
                    [17, -43],
                    [12, -39],
                    [-11, -51],
                    [-9, -11],
                    [6, -30],
                    [19, -47],
                    [3, -33],
                    [0, -27],
                    [11, -54],
                    [-16, -55],
                    [-13, -61]
                ],
                [
                    [5538, 7532],
                    [-6, 4],
                    [-8, 19],
                    [-12, 12]
                ],
                [
                    [5533, 7629],
                    [8, -10],
                    [4, -9],
                    [9, -6],
                    [10, -12],
                    [-2, -5]
                ],
                [
                    [7437, 7970],
                    [29, 10],
                    [53, 51],
                    [42, 28],
                    [24, -18],
                    [29, -1],
                    [19, -28],
                    [28, -2],
                    [40, -15],
                    [27, 41],
                    [-11, 35],
                    [28, 61],
                    [31, -24],
                    [26, -7],
                    [32, -15],
                    [6, -44],
                    [39, -25],
                    [26, 11],
                    [36, 7],
                    [27, -7],
                    [28, -29],
                    [16, -30],
                    [26, 1],
                    [35, -10],
                    [26, 15],
                    [36, 9],
                    [41, 42],
                    [17, -6],
                    [14, -20],
                    [33, 5]
                ],
                [
                    [5959, 4377],
                    [21, 5],
                    [34, -17],
                    [7, 8],
                    [19, 1],
                    [10, 18],
                    [17, -1],
                    [30, 23],
                    [22, 34]
                ],
                [
                    [6119, 4448],
                    [5, -26],
                    [-1, -59],
                    [3, -52],
                    [1, -92],
                    [5, -29],
                    [-8, -43],
                    [-11, -41],
                    [-18, -36],
                    [-25, -23],
                    [-31, -28],
                    [-32, -64],
                    [-10, -11],
                    [-20, -42],
                    [-11, -13],
                    [-3, -42],
                    [14, -45],
                    [5, -35],
                    [0, -17],
                    [5, 3],
                    [-1, -58],
                    [-4, -28],
                    [6, -10],
                    [-4, -25],
                    [-11, -21],
                    [-23, -20],
                    [-34, -32],
                    [-12, -21],
                    [3, -25],
                    [7, -4],
                    [-3, -31]
                ],
                [
                    [5911, 3478],
                    [-21, 0]
                ],
                [
                    [5890, 3478],
                    [-2, 26],
                    [-4, 27]
                ],
                [
                    [5884, 3531],
                    [-3, 21],
                    [5, 66],
                    [-7, 42],
                    [-13, 83]
                ],
                [
                    [5866, 3743],
                    [29, 67],
                    [7, 43],
                    [5, 5],
                    [3, 35],
                    [-5, 17],
                    [1, 44],
                    [6, 41],
                    [0, 75],
                    [-15, 19],
                    [-13, 4],
                    [-6, 15],
                    [-13, 12],
                    [-23, -1],
                    [-2, 22]
                ],
                [
                    [5840, 4141],
                    [-2, 42],
                    [84, 49]
                ],
                [
                    [5922, 4232],
                    [16, -28],
                    [8, 5],
                    [11, -15],
                    [1, -23],
                    [-6, -28],
                    [2, -42],
                    [19, -36],
                    [8, 41],
                    [12, 12],
                    [-2, 76],
                    [-12, 43],
                    [-10, 19],
                    [-10, -1],
                    [-7, 77],
                    [7, 45]
                ],
                [
                    [4661, 5921],
                    [-18, 41],
                    [-17, 43],
                    [-18, 16],
                    [-13, 17],
                    [-16, -1],
                    [-13, -12],
                    [-14, 5],
                    [-10, -19]
                ],
                [
                    [4542, 6011],
                    [-2, 32],
                    [8, 29],
                    [3, 55],
                    [-3, 59],
                    [-3, 29],
                    [2, 30],
                    [-7, 28],
                    [-14, 25]
                ],
                [
                    [4526, 6298],
                    [6, 20],
                    [108, -1],
                    [-5, 86],
                    [7, 30],
                    [26, 5],
                    [-1, 152],
                    [91, -4],
                    [0, 90]
                ],
                [
                    [5922, 4232],
                    [-15, 15],
                    [9, 55],
                    [9, 21],
                    [-6, 49],
                    [6, 48],
                    [5, 16],
                    [-7, 50],
                    [-14, 26]
                ],
                [
                    [5909, 4512],
                    [28, -11],
                    [5, -16],
                    [10, -28],
                    [7, -80]
                ],
                [
                    [7836, 5425],
                    [7, -5],
                    [16, -36],
                    [12, -40],
                    [2, -39],
                    [-3, -27],
                    [2, -21],
                    [2, -35],
                    [10, -16],
                    [11, -52],
                    [-1, -20],
                    [-19, -4],
                    [-27, 44],
                    [-32, 47],
                    [-4, 30],
                    [-16, 39],
                    [-4, 49],
                    [-10, 32],
                    [4, 43],
                    [-7, 25]
                ],
                [
                    [7779, 5439],
                    [5, 11],
                    [23, -26],
                    [2, -30],
                    [18, 7],
                    [9, 24]
                ],
                [
                    [8045, 5176],
                    [21, -20],
                    [21, 11],
                    [6, 50],
                    [12, 11],
                    [33, 13],
                    [20, 47],
                    [14, 37]
                ],
                [
                    [8206, 5379],
                    [22, 41],
                    [14, 47],
                    [11, 0],
                    [14, -30],
                    [1, -26],
                    [19, -16],
                    [23, -18],
                    [-2, -23],
                    [-19, -3],
                    [5, -29],
                    [-20, -20]
                ],
                [
                    [5453, 3369],
                    [-20, 45],
                    [-11, 43],
                    [-6, 58],
                    [-7, 42],
                    [-9, 91],
                    [-1, 71],
                    [-3, 32],
                    [-11, 25],
                    [-15, 48],
                    [-14, 71],
                    [-6, 37],
                    [-23, 58],
                    [-2, 45]
                ],
                [
                    [5644, 4022],
                    [23, 14],
                    [18, -4],
                    [11, -13],
                    [0, -5]
                ],
                [
                    [5552, 3594],
                    [0, -218],
                    [-25, -30],
                    [-15, -4],
                    [-17, 11],
                    [-13, 4],
                    [-4, 25],
                    [-11, 17],
                    [-14, -30]
                ],
                [
                    [9604, 3812],
                    [23, -36],
                    [14, -28],
                    [-10, -14],
                    [-16, 16],
                    [-19, 27],
                    [-18, 31],
                    [-19, 42],
                    [-4, 20],
                    [12, -1],
                    [16, -20],
                    [12, -20],
                    [9, -17]
                ],
                [
                    [5412, 6408],
                    [7, -92],
                    [10, -15],
                    [1, -19],
                    [11, -20],
                    [-6, -25],
                    [-11, -120],
                    [-1, -77],
                    [-35, -56],
                    [-12, -78],
                    [11, -22],
                    [0, -38],
                    [18, -1],
                    [-3, -28]
                ],
                [
                    [5393, 5795],
                    [-5, -1],
                    [-19, 64],
                    [-6, 3],
                    [-22, -33],
                    [-21, 17],
                    [-15, 3],
                    [-8, -8],
                    [-17, 2],
                    [-16, -25],
                    [-14, -2],
                    [-34, 31],
                    [-13, -15],
                    [-14, 1],
                    [-10, 23],
                    [-28, 22],
                    [-30, -7],
                    [-7, -13],
                    [-4, -34],
                    [-8, -24],
                    [-2, -53]
                ],
                [
                    [5236, 5339],
                    [-29, -21],
                    [-11, 3],
                    [-10, -13],
                    [-23, 1],
                    [-15, 37],
                    [-9, 43],
                    [-19, 39],
                    [-21, -1],
                    [-25, 0]
                ],
                [
                    [2619, 5713],
                    [-10, 18],
                    [-13, 24],
                    [-6, 20],
                    [-12, 19],
                    [-13, 26],
                    [3, 9],
                    [4, -9],
                    [2, 5]
                ],
                [
                    [2690, 5943],
                    [-2, -5],
                    [-2, -13],
                    [3, -22],
                    [-6, -20],
                    [-3, -24],
                    [-1, -26],
                    [1, -15],
                    [1, -27],
                    [-4, -6],
                    [-3, -25],
                    [2, -15],
                    [-6, -16],
                    [2, -16],
                    [4, -9]
                ],
                [
                    [5092, 8091],
                    [14, 16],
                    [24, 87],
                    [38, 25],
                    [23, -2]
                ],
                [
                    [5863, 9167],
                    [-47, -24],
                    [-22, -5]
                ],
                [
                    [5573, 9140],
                    [-17, -2],
                    [-4, -39],
                    [-53, 9],
                    [-7, -33],
                    [-27, 1],
                    [-18, -42],
                    [-28, -66],
                    [-43, -83],
                    [10, -20],
                    [-10, -24],
                    [-27, 1],
                    [-18, -55],
                    [2, -79],
                    [17, -29],
                    [-9, -70],
                    [-23, -40],
                    [-12, -34]
                ],
                [
                    [5306, 8535],
                    [-19, 36],
                    [-55, -69],
                    [-37, -13],
                    [-38, 30],
                    [-10, 63],
                    [-9, 137],
                    [26, 38],
                    [73, 49],
                    [55, 61],
                    [51, 82],
                    [66, 115],
                    [47, 44],
                    [76, 74],
                    [61, 26],
                    [46, -3],
                    [42, 49],
                    [51, -3],
                    [50, 12],
                    [87, -43],
                    [-36, -16],
                    [30, -37]
                ],
                [
                    [5686, 9657],
                    [-62, -24],
                    [-49, 13],
                    [19, 16],
                    [-16, 19],
                    [57, 11],
                    [11, -22],
                    [40, -13]
                ],
                [
                    [5506, 9766],
                    [92, -44],
                    [-70, -23],
                    [-15, -44],
                    [-25, -11],
                    [-13, -49],
                    [-34, -2],
                    [-59, 36],
                    [25, 21],
                    [-42, 17],
                    [-54, 50],
                    [-21, 46],
                    [75, 21],
                    [16, -20],
                    [39, 0],
                    [11, 21],
                    [40, 2],
                    [35, -21]
                ],
                [
                    [5706, 9808],
                    [55, -21],
                    [-41, -32],
                    [-81, -7],
                    [-82, 10],
                    [-5, 16],
                    [-40, 1],
                    [-30, 27],
                    [86, 17],
                    [40, -14],
                    [28, 17],
                    [70, -14]
                ],
                [
                    [9805, 2640],
                    [6, -24],
                    [20, 24],
                    [8, -25],
                    [0, -25],
                    [-10, -27],
                    [-18, -44],
                    [-14, -24],
                    [10, -28],
                    [-22, -1],
                    [-23, -22],
                    [-8, -39],
                    [-16, -60],
                    [-21, -26],
                    [-14, -17],
                    [-26, 1],
                    [-18, 20],
                    [-30, 4],
                    [-5, 22],
                    [15, 43],
                    [35, 59],
                    [18, 11],
                    [20, 22],
                    [24, 31],
                    [16, 31],
                    [13, 44],
                    [10, 15],
                    [5, 33],
                    [19, 27],
                    [6, -25]
                ],
                [
                    [9849, 2922],
                    [20, -63],
                    [1, 41],
                    [13, -16],
                    [4, -45],
                    [22, -19],
                    [19, -5],
                    [16, 22],
                    [14, -6],
                    [-7, -53],
                    [-8, -34],
                    [-22, 1],
                    [-7, -18],
                    [3, -25],
                    [-4, -11],
                    [-11, -32],
                    [-14, -41],
                    [-21, -23],
                    [-5, 15],
                    [-12, 9],
                    [16, 48],
                    [-9, 33],
                    [-30, 23],
                    [1, 22],
                    [20, 20],
                    [5, 46],
                    [-1, 38],
                    [-12, 40],
                    [1, 10],
                    [-13, 25],
                    [-22, 52],
                    [-12, 42],
                    [11, 4],
                    [15, -33],
                    [21, -15],
                    [8, -52]
                ],
                [
                    [6475, 6041],
                    [-9, 41],
                    [-22, 98]
                ],
                [
                    [6444, 6180],
                    [83, 59],
                    [19, 118],
                    [-13, 42]
                ],
                [
                    [6566, 6530],
                    [12, -40],
                    [16, -22],
                    [20, -8],
                    [17, -10],
                    [12, -34],
                    [8, -20],
                    [10, -7],
                    [0, -13],
                    [-10, -36],
                    [-5, -16],
                    [-12, -19],
                    [-10, -41],
                    [-13, 3],
                    [-5, -14],
                    [-5, -30],
                    [4, -39],
                    [-3, -7],
                    [-13, 0],
                    [-17, -22],
                    [-3, -29],
                    [-6, -12],
                    [-18, 0],
                    [-10, -15],
                    [0, -24],
                    [-14, -16],
                    [-15, 5],
                    [-19, -19],
                    [-12, -4]
                ],
                [
                    [6557, 6597],
                    [8, 20],
                    [3, -5],
                    [-2, -25],
                    [-4, -10]
                ],
                [
                    [6893, 6457],
                    [-20, 15],
                    [-9, 43],
                    [-21, 45],
                    [-51, -12],
                    [-45, -1],
                    [-39, -8]
                ],
                [
                    [2836, 5484],
                    [-9, 17],
                    [-6, 32],
                    [7, 16],
                    [-7, 4],
                    [-5, 20],
                    [-14, 16],
                    [-12, -4],
                    [-6, -20],
                    [-11, -15],
                    [-6, -2],
                    [-3, -13],
                    [13, -32],
                    [-7, -7],
                    [-4, -9],
                    [-13, -3],
                    [-5, 35],
                    [-4, -10],
                    [-9, 4],
                    [-5, 24],
                    [-12, 3],
                    [-7, 7],
                    [-12, 0],
                    [-1, -13],
                    [-3, 9]
                ],
                [
                    [2707, 5623],
                    [10, -22],
                    [-1, -12],
                    [11, -3],
                    [3, 5],
                    [8, -14],
                    [13, 4],
                    [12, 15],
                    [17, 12],
                    [9, 17],
                    [16, -3],
                    [-1, -6],
                    [15, -2],
                    [12, -10],
                    [10, -18],
                    [10, -16]
                ],
                [
                    [3045, 3974],
                    [-28, 33],
                    [-2, 25],
                    [-55, 59],
                    [-50, 65],
                    [-22, 36],
                    [-11, 49],
                    [4, 17],
                    [-23, 77],
                    [-28, 109],
                    [-26, 118],
                    [-11, 27],
                    [-9, 43],
                    [-21, 39],
                    [-20, 24],
                    [9, 26],
                    [-14, 57],
                    [9, 41],
                    [22, 37]
                ],
                [
                    [8510, 5555],
                    [2, -40],
                    [2, -33],
                    [-9, -54],
                    [-11, 60],
                    [-13, -30],
                    [9, -43],
                    [-8, -28],
                    [-32, 35],
                    [-8, 42],
                    [8, 28],
                    [-17, 28],
                    [-9, -24],
                    [-13, 2],
                    [-21, -33],
                    [-4, 17],
                    [11, 50],
                    [17, 17],
                    [15, 22],
                    [10, -27],
                    [21, 17],
                    [5, 26],
                    [19, 1],
                    [-1, 46],
                    [22, -28],
                    [3, -30],
                    [2, -21]
                ],
                [
                    [8443, 5665],
                    [-10, -20],
                    [-9, -37],
                    [-8, -17],
                    [-17, 40],
                    [5, 16],
                    [7, 17],
                    [3, 36],
                    [16, 4],
                    [-5, -40],
                    [21, 57],
                    [-3, -56]
                ],
                [
                    [8291, 5608],
                    [-37, -56],
                    [14, 41],
                    [20, 37],
                    [16, 41],
                    [15, 58],
                    [5, -48],
                    [-18, -33],
                    [-15, -40]
                ],
                [
                    [8385, 5760],
                    [16, -18],
                    [18, 0],
                    [0, -25],
                    [-13, -25],
                    [-18, -18],
                    [-1, 28],
                    [2, 30],
                    [-4, 28]
                ],
                [
                    [8485, 5776],
                    [8, -66],
                    [-21, 16],
                    [0, -20],
                    [7, -37],
                    [-13, -13],
                    [-1, 42],
                    [-9, 3],
                    [-4, 36],
                    [16, -5],
                    [0, 22],
                    [-17, 45],
                    [27, -1],
                    [7, -22]
                ],
                [
                    [8375, 5830],
                    [-7, -51],
                    [-12, 29],
                    [-15, 45],
                    [24, -2],
                    [10, -21]
                ],
                [
                    [8369, 6151],
                    [17, -17],
                    [9, 15],
                    [2, -15],
                    [-4, -24],
                    [9, -43],
                    [-7, -49],
                    [-16, -19],
                    [-5, -48],
                    [7, -47],
                    [14, -7],
                    [13, 7],
                    [34, -32],
                    [-2, -32],
                    [9, -15],
                    [-3, -27],
                    [-22, 29],
                    [-10, 31],
                    [-7, -22],
                    [-18, 36],
                    [-25, -9],
                    [-14, 13],
                    [1, 25],
                    [9, 15],
                    [-8, 13],
                    [-4, -21],
                    [-14, 34],
                    [-4, 26],
                    [-1, 56],
                    [11, -19],
                    [3, 92],
                    [9, 54],
                    [17, 0]
                ],
                [
                    [9329, 4655],
                    [-8, -6],
                    [-12, 22],
                    [-12, 38],
                    [-6, 45],
                    [4, 6],
                    [3, -18],
                    [8, -13],
                    [14, -38],
                    [13, -20],
                    [-4, -16]
                ],
                [
                    [9221, 4734],
                    [-15, -5],
                    [-4, -17],
                    [-15, -14],
                    [-15, -14],
                    [-14, 0],
                    [-23, 18],
                    [-16, 16],
                    [2, 18],
                    [25, -8],
                    [15, 4],
                    [5, 29],
                    [4, 1],
                    [2, -31],
                    [16, 4],
                    [8, 20],
                    [16, 21],
                    [-4, 35],
                    [17, 1],
                    [6, -9],
                    [-1, -33],
                    [-9, -36]
                ],
                [
                    [8916, 4904],
                    [48, -41],
                    [51, -34],
                    [19, -30],
                    [16, -30],
                    [4, -34],
                    [46, -37],
                    [7, -31],
                    [-25, -7],
                    [6, -39],
                    [25, -39],
                    [18, -62],
                    [15, 2],
                    [-1, -27],
                    [22, -10],
                    [-9, -11],
                    [30, -25],
                    [-3, -17],
                    [-18, -4],
                    [-7, 16],
                    [-24, 6],
                    [-28, 9],
                    [-22, 38],
                    [-16, 32],
                    [-14, 52],
                    [-36, 26],
                    [-24, -17],
                    [-17, -20],
                    [4, -43],
                    [-22, -20],
                    [-16, 9],
                    [-28, 3]
                ],
                [
                    [9253, 4792],
                    [-9, -16],
                    [-5, 35],
                    [-6, 23],
                    [-13, 19],
                    [-16, 25],
                    [-20, 18],
                    [8, 14],
                    [15, -17],
                    [9, -13],
                    [12, -14],
                    [11, -25],
                    [11, -19],
                    [3, -30]
                ],
                [
                    [5392, 8233],
                    [19, 18],
                    [43, 27],
                    [35, 20],
                    [28, -10],
                    [2, -14],
                    [27, -1]
                ],
                [
                    [5546, 8273],
                    [34, -7],
                    [51, 1]
                ],
                [
                    [5653, 8105],
                    [14, -52],
                    [-3, -17],
                    [-14, -6],
                    [-25, -50],
                    [7, -26],
                    [-6, 3]
                ],
                [
                    [5626, 7957],
                    [-26, 23],
                    [-20, -8],
                    [-13, 6],
                    [-17, -13],
                    [-14, 21],
                    [-11, -8],
                    [-2, 4]
                ],
                [
                    [3159, 6151],
                    [14, -5],
                    [5, -12],
                    [-7, -15],
                    [-21, 1],
                    [-17, -2],
                    [-1, 25],
                    [4, 9],
                    [23, -1]
                ],
                [
                    [8628, 7562],
                    [4, -10]
                ],
                [
                    [8632, 7552],
                    [-11, 3],
                    [-12, -20],
                    [-8, -20],
                    [1, -42],
                    [-14, -13],
                    [-5, -11],
                    [-11, -17],
                    [-18, -10],
                    [-12, -16],
                    [-1, -25],
                    [-3, -7],
                    [11, -9],
                    [15, -26]
                ],
                [
                    [8504, 7288],
                    [-13, 11],
                    [-4, -11],
                    [-8, -5],
                    [-1, 11],
                    [-7, 5],
                    [-8, 10],
                    [8, 26],
                    [7, 7],
                    [-3, 11],
                    [7, 31],
                    [-2, 10],
                    [-16, 7],
                    [-13, 15]
                ],
                [
                    [4792, 7249],
                    [-11, -15],
                    [-14, 8],
                    [-15, -6],
                    [5, 46],
                    [-3, 36],
                    [-12, 6],
                    [-7, 22],
                    [2, 39],
                    [11, 21],
                    [2, 24],
                    [6, 36],
                    [-1, 25],
                    [-5, 21],
                    [-1, 20]
                ],
                [
                    [6411, 6520],
                    [-2, 43],
                    [7, 31],
                    [8, 6],
                    [8, -18],
                    [1, -35],
                    [-6, -35]
                ],
                [
                    [6427, 6512],
                    [-8, -4],
                    [-8, 12]
                ],
                [
                    [5630, 7886],
                    [12, 13],
                    [17, -7],
                    [18, 0],
                    [13, -14],
                    [10, 9],
                    [20, 5],
                    [7, 14],
                    [12, 0]
                ],
                [
                    [5784, 7745],
                    [12, -11],
                    [13, 9],
                    [13, -10]
                ],
                [
                    [5822, 7733],
                    [0, -15],
                    [-13, -13],
                    [-9, 6],
                    [-7, -71]
                ],
                [
                    [5629, 7671],
                    [-5, 10],
                    [6, 10],
                    [-7, 7],
                    [-8, -13],
                    [-17, 17],
                    [-2, 25],
                    [-17, 14],
                    [-3, 18],
                    [-15, 24]
                ],
                [
                    [8989, 8056],
                    [28, -105],
                    [-41, 19],
                    [-17, -85],
                    [27, -61],
                    [-1, -41],
                    [-21, 36],
                    [-18, -46],
                    [-5, 50],
                    [3, 57],
                    [-3, 64],
                    [6, 45],
                    [2, 79],
                    [-17, 58],
                    [3, 80],
                    [25, 28],
                    [-11, 27],
                    [13, 8],
                    [7, -39],
                    [10, -57],
                    [-1, -58],
                    [11, -59]
                ],
                [
                    [5546, 8273],
                    [6, 26],
                    [38, 19]
                ],
                [
                    [0, 9132],
                    [68, -45],
                    [73, -59],
                    [-3, -37],
                    [19, -15],
                    [-6, 43],
                    [75, -8],
                    [55, -56],
                    [-28, -26],
                    [-46, -6],
                    [0, -57],
                    [-11, -13],
                    [-26, 2],
                    [-22, 21],
                    [-36, 17],
                    [-7, 26],
                    [-28, 9],
                    [-31, -7],
                    [-16, 20],
                    [6, 22],
                    [-33, -14],
                    [13, -28],
                    [-16, -25]
                ],
                [
                    [0, 8896],
                    [0, 236]
                ],
                [
                    [0, 9282],
                    [9999, -40],
                    [-30, -3],
                    [-5, 19],
                    [-9964, 24]
                ],
                [
                    [0, 9282],
                    [4, 3],
                    [23, 0],
                    [40, -17],
                    [-2, -8],
                    [-29, -14],
                    [-36, -4],
                    [0, 40]
                ],
                [
                    [8988, 9383],
                    [-42, -1],
                    [-57, 7],
                    [-5, 3],
                    [27, 23],
                    [34, 6],
                    [40, -23],
                    [3, -15]
                ],
                [
                    [9186, 9493],
                    [-32, -23],
                    [-44, 5],
                    [-52, 23],
                    [7, 20],
                    [51, -9],
                    [70, -16]
                ],
                [
                    [9029, 9522],
                    [-22, -44],
                    [-102, 1],
                    [-46, -14],
                    [-55, 39],
                    [15, 40],
                    [37, 11],
                    [73, -2],
                    [100, -31]
                ],
                [
                    [6598, 9235],
                    [-17, -5],
                    [-91, 8],
                    [-7, 26],
                    [-50, 16],
                    [-4, 32],
                    [28, 13],
                    [-1, 32],
                    [55, 50],
                    [-25, 7],
                    [66, 52],
                    [-7, 27],
                    [62, 31],
                    [91, 38],
                    [93, 11],
                    [48, 22],
                    [54, 8],
                    [19, -23],
                    [-19, -19],
                    [-98, -29],
                    [-85, -28],
                    [-86, -57],
                    [-42, -57],
                    [-43, -57],
                    [5, -49],
                    [54, -49]
                ],
                [
                    [0, 8896],
                    [9963, -26],
                    [-36, 4],
                    [25, -31],
                    [17, -49],
                    [13, -16],
                    [3, -24],
                    [-7, -16],
                    [-52, 13],
                    [-78, -44],
                    [-25, -7],
                    [-42, -42],
                    [-40, -36],
                    [-11, -27],
                    [-39, 41],
                    [-73, -46],
                    [-12, 22],
                    [-27, -26],
                    [-37, 8],
                    [-9, -38],
                    [-33, -58],
                    [1, -24],
                    [31, -13],
                    [-4, -86],
                    [-25, -2],
                    [-12, -49],
                    [11, -26],
                    [-48, -30],
                    [-10, -67],
                    [-41, -15],
                    [-9, -60],
                    [-40, -55],
                    [-10, 41],
                    [-12, 86],
                    [-15, 131],
                    [13, 82],
                    [23, 35],
                    [2, 28],
                    [43, 13],
                    [50, 75],
                    [47, 60],
                    [50, 48],
                    [23, 83],
                    [-34, -5],
                    [-17, -49],
                    [-70, -65],
                    [-23, 73],
                    [-72, -20],
                    [-69, -99],
                    [23, -36],
                    [-62, -16],
                    [-43, -6],
                    [2, 43],
                    [-43, 9],
                    [-35, -29],
                    [-85, 10],
                    [-91, -18],
                    [-90, -115],
                    [-106, -139],
                    [43, -8],
                    [14, -37],
                    [27, -13],
                    [18, 30],
                    [30, -4],
                    [40, -65],
                    [1, -50],
                    [-21, -59],
                    [-3, -71],
                    [-12, -94],
                    [-42, -86],
                    [-9, -41],
                    [-38, -69],
                    [-38, -68],
                    [-18, -35],
                    [-37, -34],
                    [-17, -1],
                    [-17, 29],
                    [-38, -44],
                    [-4, -19]
                ],
                [
                    [6363, 7799],
                    [-12, -35],
                    [-27, -10],
                    [-28, -61],
                    [25, -56],
                    [-2, -40],
                    [30, -70]
                ],
                [
                    [6109, 7624],
                    [-35, 49],
                    [-32, 23],
                    [-24, 34],
                    [20, 10],
                    [23, 49],
                    [-15, 24],
                    [41, 24],
                    [-1, 13],
                    [-25, -10]
                ],
                [
                    [6061, 7840],
                    [1, 26],
                    [14, 17],
                    [27, 4],
                    [5, 20],
                    [-7, 33],
                    [12, 30],
                    [-1, 18],
                    [-41, 19],
                    [-16, -1],
                    [-17, 28],
                    [-21, -9],
                    [-35, 20],
                    [0, 12],
                    [-10, 26],
                    [-22, 3],
                    [-2, 18],
                    [7, 12],
                    [-18, 33],
                    [-29, -5],
                    [-8, 3],
                    [-7, -14],
                    [-11, 3]
                ],
                [
                    [5777, 8571],
                    [31, 33],
                    [-29, 28]
                ],
                [
                    [5863, 9167],
                    [29, 20],
                    [46, -35],
                    [76, -14],
                    [105, -67],
                    [21, -28],
                    [2, -40],
                    [-31, -31],
                    [-45, -15],
                    [-124, 44],
                    [-21, -7],
                    [45, -43],
                    [2, -28],
                    [2, -60],
                    [36, -18],
                    [22, -15],
                    [3, 28],
                    [-17, 26],
                    [18, 22],
                    [67, -37],
                    [24, 15],
                    [-19, 43],
                    [65, 58],
                    [25, -4],
                    [26, -20],
                    [16, 40],
                    [-23, 35],
                    [14, 36],
                    [-21, 36],
                    [78, -18],
                    [16, -34],
                    [-35, -7],
                    [0, -33],
                    [22, -20],
                    [43, 13],
                    [7, 38],
                    [58, 28],
                    [97, 50],
                    [20, -3],
                    [-27, -35],
                    [35, -7],
                    [19, 21],
                    [52, 1],
                    [42, 25],
                    [31, -36],
                    [32, 39],
                    [-29, 35],
                    [14, 19],
                    [82, -18],
                    [39, -18],
                    [100, -68],
                    [19, 31],
                    [-28, 31],
                    [-1, 13],
                    [-34, 6],
                    [10, 28],
                    [-15, 46],
                    [-1, 19],
                    [51, 53],
                    [18, 54],
                    [21, 11],
                    [74, -15],
                    [5, -33],
                    [-26, -48],
                    [17, -19],
                    [9, -41],
                    [-6, -81],
                    [31, -36],
                    [-12, -40],
                    [-55, -84],
                    [32, -8],
                    [11, 21],
                    [31, 15],
                    [7, 29],
                    [24, 29],
                    [-16, 33],
                    [13, 39],
                    [-31, 5],
                    [-6, 33],
                    [22, 59],
                    [-36, 48],
                    [50, 40],
                    [-7, 42],
                    [14, 2],
                    [15, -33],
                    [-11, -57],
                    [29, -11],
                    [-12, 43],
                    [46, 23],
                    [58, 3],
                    [51, -34],
                    [-25, 49],
                    [-2, 63],
                    [48, 12],
                    [67, -2],
                    [60, 7],
                    [-23, 31],
                    [33, 39],
                    [31, 2],
                    [54, 29],
                    [74, 8],
                    [9, 16],
                    [73, 6],
                    [23, -14],
                    [62, 32],
                    [51, -1],
                    [8, 25],
                    [26, 25],
                    [66, 25],
                    [48, -19],
                    [-38, -15],
                    [63, -9],
                    [7, -29],
                    [25, 14],
                    [82, -1],
                    [62, -29],
                    [23, -22],
                    [-7, -30],
                    [-31, -18],
                    [-73, -33],
                    [-21, -17],
                    [35, -8],
                    [41, -15],
                    [25, 11],
                    [14, -38],
                    [12, 15],
                    [44, 10],
                    [90, -10],
                    [6, -28],
                    [116, -9],
                    [2, 46],
                    [59, -11],
                    [44, 1],
                    [45, -32],
                    [13, -37],
                    [-17, -25],
                    [35, -47],
                    [44, -24],
                    [27, 62],
                    [44, -26],
                    [48, 16],
                    [53, -18],
                    [21, 16],
                    [45, -8],
                    [-20, 55],
                    [37, 25],
                    [251, -38],
                    [24, -35],
                    [72, -45],
                    [112, 11],
                    [56, -10],
                    [23, -24],
                    [-4, -44],
                    [35, -16],
                    [37, 12],
                    [49, 1],
                    [52, -11],
                    [53, 6],
                    [49, -52],
                    [34, 19],
                    [-23, 37],
                    [13, 27],
                    [88, -17],
                    [58, 4],
                    [80, -29],
                    [-9960, -25]
                ],
                [
                    [7918, 9684],
                    [-157, -23],
                    [51, 77],
                    [23, 7],
                    [21, -4],
                    [70, -33],
                    [-8, -24]
                ],
                [
                    [6420, 9816],
                    [-37, -8],
                    [-25, -4],
                    [-4, -10],
                    [-33, -10],
                    [-30, 14],
                    [16, 19],
                    [-62, 2],
                    [54, 10],
                    [43, 1],
                    [5, -16],
                    [16, 14],
                    [26, 10],
                    [42, -13],
                    [-11, -9]
                ],
                [
                    [7775, 9718],
                    [-60, -8],
                    [-78, 17],
                    [-46, 23],
                    [-21, 42],
                    [-38, 12],
                    [72, 40],
                    [60, 14],
                    [54, -30],
                    [64, -57],
                    [-7, -53]
                ],
                [
                    [5844, 4990],
                    [11, -33],
                    [-1, -35],
                    [-8, -7]
                ],
                [
                    [5821, 4978],
                    [7, -6],
                    [16, 18]
                ],
                [
                    [4526, 6298],
                    [1, 25]
                ],
                [
                    [6188, 6023],
                    [-4, 26],
                    [-8, 17],
                    [-2, 24],
                    [-15, 21],
                    [-15, 50],
                    [-7, 48],
                    [-20, 40],
                    [-12, 10],
                    [-18, 56],
                    [-4, 41],
                    [2, 35],
                    [-16, 66],
                    [-13, 23],
                    [-15, 12],
                    [-10, 34],
                    [2, 13],
                    [-8, 31],
                    [-8, 13],
                    [-11, 44],
                    [-17, 48],
                    [-14, 40],
                    [-14, 0],
                    [5, 33],
                    [1, 20],
                    [3, 24]
                ],
                [
                    [6344, 6744],
                    [11, -51],
                    [14, -13],
                    [5, -21],
                    [18, -25],
                    [2, -24],
                    [-3, -20],
                    [4, -20],
                    [8, -16],
                    [4, -20],
                    [4, -14]
                ],
                [
                    [6427, 6512],
                    [5, -22]
                ],
                [
                    [6444, 6180],
                    [-80, -23],
                    [-26, -26],
                    [-20, -62],
                    [-13, -10],
                    [-7, 20],
                    [-11, -3],
                    [-27, 6],
                    [-5, 5],
                    [-32, -1],
                    [-7, -5],
                    [-12, 15],
                    [-7, -29],
                    [3, -25],
                    [-12, -19]
                ],
                [
                    [5943, 5617],
                    [-4, 1],
                    [0, 29],
                    [-3, 20],
                    [-14, 24],
                    [-4, 42],
                    [4, 44],
                    [-13, 4],
                    [-2, -13],
                    [-17, -3],
                    [7, -17],
                    [2, -36],
                    [-15, -32],
                    [-14, -43],
                    [-14, -6],
                    [-23, 34],
                    [-11, -12],
                    [-3, -17],
                    [-14, -11],
                    [-1, -12],
                    [-28, 0],
                    [-3, 12],
                    [-20, 2],
                    [-10, -10],
                    [-8, 5],
                    [-14, 34],
                    [-5, 17],
                    [-20, -9],
                    [-8, -27],
                    [-7, -53],
                    [-10, -11],
                    [-8, -6]
                ],
                [
                    [5663, 5567],
                    [-2, 2]
                ],
                [
                    [5635, 5716],
                    [0, 14],
                    [-10, 17],
                    [-1, 35],
                    [-5, 23],
                    [-10, -4],
                    [3, 22],
                    [7, 25],
                    [-3, 24],
                    [9, 18],
                    [-6, 14],
                    [7, 36],
                    [13, 44],
                    [24, -4],
                    [-1, 234]
                ],
                [
                    [6023, 6357],
                    [9, -58],
                    [-6, -10],
                    [4, -61],
                    [11, -71],
                    [10, -14],
                    [15, -22]
                ],
                [
                    [5943, 5624],
                    [0, -7]
                ],
                [
                    [5943, 5617],
                    [0, -46]
                ],
                [
                    [5944, 5309],
                    [-17, -28],
                    [-20, 1],
                    [-22, -14],
                    [-18, 13],
                    [-11, -16]
                ],
                [
                    [5682, 5544],
                    [-19, 23]
                ],
                [
                    [4535, 5861],
                    [-11, 46],
                    [-14, 21],
                    [12, 11],
                    [14, 41],
                    [6, 31]
                ],
                [
                    [4536, 5789],
                    [-4, 45]
                ],
                [
                    [9502, 4438],
                    [8, -20],
                    [-19, 0],
                    [-11, 37],
                    [17, -15],
                    [5, -2]
                ],
                [
                    [9467, 4474],
                    [-11, -1],
                    [-17, 6],
                    [-5, 9],
                    [1, 23],
                    [19, -9],
                    [9, -12],
                    [4, -16]
                ],
                [
                    [9490, 4490],
                    [-4, -11],
                    [-21, 52],
                    [-5, 35],
                    [9, 0],
                    [10, -47],
                    [11, -29]
                ],
                [
                    [9440, 4565],
                    [1, -12],
                    [-22, 25],
                    [-15, 21],
                    [-10, 20],
                    [4, 6],
                    [13, -14],
                    [23, -27],
                    [6, -19]
                ],
                [
                    [9375, 4623],
                    [-5, -3],
                    [-13, 14],
                    [-11, 24],
                    [1, 10],
                    [17, -25],
                    [11, -20]
                ],
                [
                    [4682, 5458],
                    [-8, 5],
                    [-20, 24],
                    [-14, 31],
                    [-5, 22],
                    [-3, 43]
                ],
                [
                    [2561, 5848],
                    [-3, -14],
                    [-16, 1],
                    [-10, 6],
                    [-12, 12],
                    [-15, 3],
                    [-8, 13]
                ],
                [
                    [6198, 5735],
                    [9, -11],
                    [5, -25],
                    [13, -24],
                    [14, -1],
                    [26, 16],
                    [30, 7],
                    [25, 18],
                    [13, 4],
                    [10, 11],
                    [16, 2]
                ],
                [
                    [6359, 5732],
                    [0, -1],
                    [0, -25],
                    [0, -59],
                    [0, -31],
                    [-13, -36],
                    [-19, -50]
                ],
                [
                    [6359, 5732],
                    [9, 1],
                    [13, 9],
                    [14, 6],
                    [14, 20],
                    [10, 0],
                    [1, -16],
                    [-3, -35],
                    [0, -31],
                    [-6, -21],
                    [-7, -64],
                    [-14, -66],
                    [-17, -75],
                    [-24, -87],
                    [-23, -66],
                    [-33, -81],
                    [-28, -48],
                    [-42, -58],
                    [-25, -45],
                    [-31, -72],
                    [-6, -31],
                    [-6, -14]
                ],
                [
                    [3412, 5410],
                    [34, -11],
                    [2, 10],
                    [23, 4],
                    [30, -15]
                ],
                [
                    [3489, 5306],
                    [10, -35],
                    [-4, -25]
                ],
                [
                    [5626, 7957],
                    [-8, -15],
                    [-5, -24]
                ],
                [
                    [5380, 7746],
                    [7, 5]
                ],
                [
                    [5663, 8957],
                    [-47, -17],
                    [-27, -41],
                    [4, -36],
                    [-44, -48],
                    [-54, -50],
                    [-20, -84],
                    [20, -41],
                    [26, -33],
                    [-25, -67],
                    [-29, -14],
                    [-11, -99],
                    [-15, -55],
                    [-34, 6],
                    [-16, -47],
                    [-32, -3],
                    [-9, 56],
                    [-23, 67],
                    [-21, 84]
                ],
                [
                    [5890, 3478],
                    [-5, -26],
                    [-17, -6],
                    [-16, 32],
                    [0, 20],
                    [7, 22],
                    [3, 17],
                    [8, 5],
                    [14, -11]
                ],
                [
                    [5999, 7104],
                    [-2, 45],
                    [7, 25]
                ],
                [
                    [6004, 7174],
                    [7, 13],
                    [7, 13],
                    [2, 33],
                    [9, -12],
                    [31, 17],
                    [14, -12],
                    [23, 1],
                    [32, 22],
                    [15, -1],
                    [32, 9]
                ],
                [
                    [5051, 5420],
                    [-22, -12]
                ],
                [
                    [7849, 5777],
                    [-25, 28],
                    [-24, -2],
                    [4, 47],
                    [-24, 0],
                    [-2, -65],
                    [-15, -87],
                    [-10, -52],
                    [2, -43],
                    [18, -2],
                    [12, -53],
                    [5, -52],
                    [15, -33],
                    [17, -7],
                    [14, -31]
                ],
                [
                    [7779, 5439],
                    [-11, 23],
                    [-4, 29],
                    [-15, 34],
                    [-14, 28],
                    [-4, -35],
                    [-5, 33],
                    [3, 37],
                    [8, 56]
                ],
                [
                    [6883, 7252],
                    [16, 60],
                    [-6, 44],
                    [-20, 14],
                    [7, 26],
                    [23, -3],
                    [13, 33],
                    [9, 38],
                    [37, 13],
                    [-6, -27],
                    [4, -17],
                    [12, 2]
                ],
                [
                    [6497, 7255],
                    [-5, 42],
                    [4, 62],
                    [-22, 20],
                    [8, 40],
                    [-19, 4],
                    [6, 49],
                    [26, -14],
                    [25, 19],
                    [-20, 35],
                    [-8, 34],
                    [-23, -15],
                    [-3, -43],
                    [-8, 38]
                ],
                [
                    [6554, 7498],
                    [31, 1],
                    [-4, 29],
                    [24, 21],
                    [23, 34],
                    [37, -31],
                    [3, -47],
                    [11, -12],
                    [30, 2],
                    [9, -10],
                    [14, -61],
                    [32, -41],
                    [18, -28],
                    [29, -29],
                    [37, -25],
                    [-1, -36]
                ],
                [
                    [8471, 4532],
                    [3, 14],
                    [24, 13],
                    [19, 2],
                    [9, 8],
                    [10, -8],
                    [-10, -16],
                    [-29, -25],
                    [-23, -17]
                ],
                [
                    [3286, 5693],
                    [16, 8],
                    [6, -2],
                    [-1, -44],
                    [-23, -7],
                    [-5, 6],
                    [8, 16],
                    [-1, 23]
                ],
                [
                    [5233, 7240],
                    [31, 24],
                    [19, -7],
                    [-1, -30],
                    [24, 22],
                    [2, -12],
                    [-14, -29],
                    [0, -27],
                    [9, -15],
                    [-3, -51],
                    [-19, -29],
                    [6, -33],
                    [14, -1],
                    [7, -28],
                    [11, -9]
                ],
                [
                    [6004, 7174],
                    [-11, 27],
                    [11, 22],
                    [-17, -5],
                    [-23, 13],
                    [-19, -34],
                    [-43, -6],
                    [-22, 31],
                    [-30, 2],
                    [-6, -24],
                    [-20, -7],
                    [-26, 31],
                    [-31, -1],
                    [-16, 59],
                    [-21, 33],
                    [14, 46],
                    [-18, 28],
                    [31, 56],
                    [43, 3],
                    [12, 45],
                    [53, -8],
                    [33, 38],
                    [32, 17],
                    [46, 1],
                    [49, -42],
                    [40, -22],
                    [32, 9],
                    [24, -6],
                    [33, 31]
                ],
                [
                    [5777, 7539],
                    [3, -23],
                    [25, -19],
                    [-5, -14],
                    [-33, -3],
                    [-12, -19],
                    [-23, -31],
                    [-9, 27],
                    [0, 12]
                ],
                [
                    [8382, 6499],
                    [-17, -95],
                    [-12, -49],
                    [-14, 50],
                    [-4, 44],
                    [17, 58],
                    [22, 45],
                    [13, -18],
                    [-5, -35]
                ],
                [
                    [6088, 4781],
                    [-12, -73],
                    [1, -33],
                    [18, -22],
                    [1, -15],
                    [-8, -36],
                    [2, -18],
                    [-2, -28],
                    [10, -37],
                    [11, -58],
                    [10, -13]
                ],
                [
                    [5909, 4512],
                    [-15, 18],
                    [-18, 10],
                    [-11, 10],
                    [-12, 15]
                ],
                [
                    [5844, 4990],
                    [10, 8],
                    [31, -1],
                    [56, 4]
                ],
                [
                    [6061, 7840],
                    [-22, -5],
                    [-18, -19],
                    [-26, -3],
                    [-24, -22],
                    [1, -37],
                    [14, -14],
                    [28, 4],
                    [-5, -21],
                    [-31, -11],
                    [-37, -34],
                    [-16, 12],
                    [6, 28],
                    [-30, 17],
                    [5, 12],
                    [26, 19],
                    [-8, 14],
                    [-43, 15],
                    [-2, 22],
                    [-25, -8],
                    [-11, -32],
                    [-21, -44]
                ],
                [
                    [3517, 3063],
                    [-12, -38],
                    [-31, -32],
                    [-21, 11],
                    [-15, -6],
                    [-26, 25],
                    [-18, -1],
                    [-17, 32]
                ],
                [
                    [679, 6185],
                    [-4, -10],
                    [-7, 8],
                    [1, 17],
                    [-4, 21],
                    [1, 7],
                    [5, 10],
                    [-2, 11],
                    [1, 6],
                    [3, -1],
                    [10, -10],
                    [5, -5],
                    [5, -8],
                    [7, -21],
                    [-1, -3],
                    [-11, -13],
                    [-9, -9]
                ],
                [
                    [664, 6277],
                    [-9, -4],
                    [-5, 12],
                    [-3, 5],
                    [0, 4],
                    [3, 5],
                    [9, -6],
                    [8, -9],
                    [-3, -7]
                ],
                [
                    [646, 6309],
                    [-1, -7],
                    [-15, 2],
                    [2, 7],
                    [14, -2]
                ],
                [
                    [621, 6317],
                    [-2, -3],
                    [-2, 1],
                    [-9, 2],
                    [-4, 13],
                    [-1, 2],
                    [7, 8],
                    [3, -3],
                    [8, -20]
                ],
                [
                    [574, 6356],
                    [-4, -6],
                    [-9, 11],
                    [1, 4],
                    [5, 6],
                    [6, -1],
                    [1, -14]
                ],
                [
                    [3135, 7724],
                    [5, -19],
                    [-30, -29],
                    [-29, -20],
                    [-29, -18],
                    [-15, -35],
                    [-4, -13],
                    [-1, -31],
                    [10, -32],
                    [11, -1],
                    [-3, 21],
                    [8, -13],
                    [-2, -17],
                    [-19, -9],
                    [-13, 1],
                    [-20, -10],
                    [-12, -3],
                    [-17, -3],
                    [-23, -17],
                    [41, 11],
                    [8, -11],
                    [-39, -18],
                    [-17, 0],
                    [0, 7],
                    [-8, -16],
                    [8, -3],
                    [-6, -43],
                    [-20, -45],
                    [-2, 15],
                    [-6, 3],
                    [-9, 15],
                    [5, -32],
                    [7, -10],
                    [1, -23],
                    [-9, -23],
                    [-16, -47],
                    [-2, 3],
                    [8, 40],
                    [-14, 22],
                    [-3, 49],
                    [-5, -25],
                    [5, -38],
                    [-18, 10],
                    [19, -19],
                    [1, -57],
                    [8, -4],
                    [3, -20],
                    [4, -59],
                    [-17, -44],
                    [-29, -18],
                    [-18, -34],
                    [-14, -4],
                    [-14, -22],
                    [-4, -20],
                    [-31, -38],
                    [-16, -28],
                    [-13, -35],
                    [-4, -42],
                    [5, -41],
                    [9, -51],
                    [13, -41],
                    [0, -26],
                    [13, -69],
                    [-1, -39],
                    [-1, -23],
                    [-7, -36],
                    [-8, -8],
                    [-14, 7],
                    [-4, 26],
                    [-11, 14],
                    [-15, 51],
                    [-13, 45],
                    [-4, 23],
                    [6, 39],
                    [-8, 33],
                    [-22, 49],
                    [-10, 9],
                    [-28, -27],
                    [-5, 3],
                    [-14, 28],
                    [-17, 14],
                    [-32, -7],
                    [-24, 7],
                    [-21, -5],
                    [-12, -9],
                    [5, -15],
                    [0, -24],
                    [5, -12],
                    [-5, -8],
                    [-10, 9],
                    [-11, -11],
                    [-20, 2],
                    [-20, 31],
                    [-25, -8],
                    [-20, 14],
                    [-17, -4],
                    [-24, -14],
                    [-25, -44],
                    [-27, -25],
                    [-16, -28],
                    [-6, -27],
                    [0, -41],
                    [1, -28],
                    [5, -20]
                ],
                [
                    [1746, 6980],
                    [-4, 30],
                    [-18, 34],
                    [-13, 7],
                    [-3, 17],
                    [-16, 3],
                    [-10, 16],
                    [-26, 6],
                    [-7, 9],
                    [-3, 32],
                    [-27, 60],
                    [-23, 82],
                    [1, 14],
                    [-13, 19],
                    [-21, 50],
                    [-4, 48],
                    [-15, 32],
                    [6, 49],
                    [-1, 51],
                    [-8, 45],
                    [10, 56],
                    [4, 53],
                    [3, 54],
                    [-5, 79],
                    [-9, 51],
                    [-8, 27],
                    [4, 12],
                    [40, -20],
                    [15, -56],
                    [7, 15],
                    [-5, 49],
                    [-9, 48]
                ],
                [
                    [750, 8432],
                    [-28, -23],
                    [-14, 15],
                    [-4, 28],
                    [25, 21],
                    [15, 9],
                    [18, -4],
                    [12, -18],
                    [-24, -28]
                ],
                [
                    [401, 8597],
                    [-18, -9],
                    [-18, 11],
                    [-17, 16],
                    [28, 10],
                    [22, -6],
                    [3, -22]
                ],
                [
                    [230, 8826],
                    [17, -12],
                    [17, 6],
                    [23, -15],
                    [27, -8],
                    [-2, -7],
                    [-21, -12],
                    [-21, 13],
                    [-11, 11],
                    [-24, -4],
                    [-7, 5],
                    [2, 23]
                ],
                [
                    [1374, 8295],
                    [-15, 22],
                    [-25, 19],
                    [-8, 52],
                    [-36, 47],
                    [-15, 56],
                    [-26, 4],
                    [-44, 2],
                    [-33, 17],
                    [-57, 61],
                    [-27, 11],
                    [-49, 21],
                    [-38, -5],
                    [-55, 27],
                    [-33, 25],
                    [-30, -12],
                    [5, -41],
                    [-15, -4],
                    [-32, -12],
                    [-25, -20],
                    [-30, -13],
                    [-4, 35],
                    [12, 58],
                    [30, 18],
                    [-8, 15],
                    [-35, -33],
                    [-19, -39],
                    [-40, -42],
                    [20, -29],
                    [-26, -42],
                    [-30, -25],
                    [-28, -18],
                    [-7, -26],
                    [-43, -31],
                    [-9, -28],
                    [-32, -25],
                    [-20, 5],
                    [-25, -17],
                    [-29, -20],
                    [-23, -20],
                    [-47, -16],
                    [-5, 9],
                    [31, 28],
                    [27, 18],
                    [29, 33],
                    [35, 6],
                    [14, 25],
                    [38, 35],
                    [6, 12],
                    [21, 21],
                    [5, 44],
                    [14, 35],
                    [-32, -18],
                    [-9, 11],
                    [-15, -22],
                    [-18, 30],
                    [-8, -21],
                    [-10, 29],
                    [-28, -23],
                    [-17, 0],
                    [-3, 35],
                    [5, 21],
                    [-17, 22],
                    [-37, -12],
                    [-23, 28],
                    [-19, 14],
                    [0, 34],
                    [-22, 25],
                    [11, 34],
                    [23, 33],
                    [10, 30],
                    [22, 4],
                    [19, -9],
                    [23, 28],
                    [20, -5],
                    [21, 19],
                    [-5, 27],
                    [-16, 10],
                    [21, 23],
                    [-17, -1],
                    [-30, -13],
                    [-8, -13],
                    [-22, 13],
                    [-39, -6],
                    [-41, 14],
                    [-12, 24],
                    [-35, 34],
                    [39, 25],
                    [62, 29],
                    [23, 0],
                    [-4, -30],
                    [59, 2],
                    [-23, 37],
                    [-34, 23],
                    [-20, 29],
                    [-26, 25],
                    [-38, 19],
                    [15, 31],
                    [49, 2],
                    [35, 27],
                    [7, 29],
                    [28, 28],
                    [28, 6],
                    [52, 27],
                    [26, -4],
                    [42, 31],
                    [42, -12],
                    [21, -27],
                    [12, 11],
                    [47, -3],
                    [-2, -14],
                    [43, -10],
                    [28, 6],
                    [59, -18],
                    [53, -6],
                    [21, -8],
                    [37, 10],
                    [42, -18],
                    [31, -8]
                ],
                [
                    [3018, 5753],
                    [-1, -14],
                    [-16, -7],
                    [9, -26],
                    [0, -31],
                    [-12, -35],
                    [10, -47],
                    [12, 4],
                    [6, 43],
                    [-8, 21],
                    [-2, 45],
                    [35, 24],
                    [-4, 27],
                    [10, 19],
                    [10, -41],
                    [19, -1],
                    [18, -33],
                    [1, -20],
                    [25, 0],
                    [30, 6],
                    [16, -27],
                    [21, -7],
                    [16, 18],
                    [0, 15],
                    [34, 4],
                    [34, 1],
                    [-24, -18],
                    [10, -28],
                    [22, -4],
                    [21, -29],
                    [4, -48],
                    [15, 2],
                    [11, -14]
                ],
                [
                    [8001, 6331],
                    [-37, -51],
                    [-24, -56],
                    [-6, -41],
                    [22, -62],
                    [25, -77],
                    [26, -37],
                    [17, -47],
                    [12, -109],
                    [-3, -104],
                    [-24, -39],
                    [-31, -38],
                    [-23, -49],
                    [-35, -55],
                    [-10, 37],
                    [8, 40],
                    [-21, 34]
                ],
                [
                    [9661, 4085],
                    [-9, -8],
                    [-9, 26],
                    [1, 16],
                    [17, -34]
                ],
                [
                    [9641, 4175],
                    [4, -47],
                    [-7, 7],
                    [-6, -3],
                    [-4, 16],
                    [0, 45],
                    [13, -18]
                ],
                [
                    [6475, 6041],
                    [-21, -16],
                    [-5, -26],
                    [-1, -20],
                    [-27, -25],
                    [-45, -28],
                    [-24, -41],
                    [-13, -3],
                    [-8, 3],
                    [-16, -25],
                    [-18, -11],
                    [-23, -3],
                    [-7, -3],
                    [-6, -16],
                    [-8, -4],
                    [-4, -15],
                    [-14, 1],
                    [-9, -8],
                    [-19, 3],
                    [-7, 35],
                    [1, 32],
                    [-5, 17],
                    [-5, 44],
                    [-8, 24],
                    [5, 3],
                    [-2, 27],
                    [3, 12],
                    [-1, 25]
                ],
                [
                    [5817, 3752],
                    [11, 0],
                    [14, -10],
                    [9, 7],
                    [15, -6]
                ],
                [
                    [5911, 3478],
                    [-7, -43],
                    [-3, -49],
                    [-7, -27],
                    [-19, -30],
                    [-5, -8],
                    [-12, -30],
                    [-8, -31],
                    [-16, -42],
                    [-31, -61],
                    [-20, -36],
                    [-21, -26],
                    [-29, -23],
                    [-14, -3],
                    [-3, -17],
                    [-17, 9],
                    [-14, -11],
                    [-30, 11],
                    [-17, -7],
                    [-12, 3],
                    [-28, -23],
                    [-24, -10],
                    [-17, -22],
                    [-13, -1],
                    [-11, 21],
                    [-10, 1],
                    [-12, 26],
                    [-1, -8],
                    [-4, 16],
                    [0, 34],
                    [-9, 40],
                    [9, 11],
                    [0, 45],
                    [-19, 55],
                    [-14, 50],
                    [0, 1],
                    [-20, 76]
                ],
                [
                    [5840, 4141],
                    [-21, -8],
                    [-15, -23],
                    [-4, -21],
                    [-10, -4],
                    [-24, -49],
                    [-15, -38],
                    [-10, -2],
                    [-9, 7],
                    [-31, 7]
                ]
            ],
            transform: {
                scale: [.036003600360036005, .016927109510951093],
                translate: [-180, -85.609038]
            }
        }, d.prototype.abwTopo = "__ABW__", d.prototype.afgTopo = "__AFG__", d.prototype.agoTopo = "__AGO__", d.prototype.aiaTopo = "__AIA__", d.prototype.albTopo = "__ALB__", d.prototype.aldTopo = "__ALD__", d.prototype.andTopo = "__AND__", d.prototype.areTopo = "__ARE__", d.prototype.argTopo = "__ARG__", d.prototype.armTopo = "__ARM__", d.prototype.asmTopo = "__ASM__", d.prototype.ataTopo = "__ATA__", d.prototype.atcTopo = "__ATC__", d.prototype.atfTopo = "__ATF__", d.prototype.atgTopo = "__ATG__", d.prototype.ausTopo = "__AUS__", d.prototype.autTopo = "__AUT__", d.prototype.azeTopo = "__AZE__", d.prototype.bdiTopo = "__BDI__", d.prototype.belTopo = "__BEL__", d.prototype.benTopo = "__BEN__", d.prototype.bfaTopo = "__BFA__", d.prototype.bgdTopo = "__BGD__", d.prototype.bgrTopo = "__BGR__", d.prototype.bhrTopo = "__BHR__", d.prototype.bhsTopo = "__BHS__", d.prototype.bihTopo = "__BIH__", d.prototype.bjnTopo = "__BJN__", d.prototype.blmTopo = "__BLM__", d.prototype.blrTopo = "__BLR__", d.prototype.blzTopo = "__BLZ__", d.prototype.bmuTopo = "__BMU__", d.prototype.bolTopo = "__BOL__", d.prototype.braTopo = "__BRA__", d.prototype.brbTopo = "__BRB__", d.prototype.brnTopo = "__BRN__", d.prototype.btnTopo = "__BTN__", d.prototype.norTopo = "__NOR__", d.prototype.bwaTopo = "__BWA__", d.prototype.cafTopo = "__CAF__", d.prototype.canTopo = "__CAN__", d.prototype.cheTopo = "__CHE__", d.prototype.chlTopo = "__CHL__", d.prototype.chnTopo = "__CHN__", d.prototype.civTopo = "__CIV__", d.prototype.clpTopo = "__CLP__", d.prototype.cmrTopo = "__CMR__", d.prototype.codTopo = "__COD__", d.prototype.cogTopo = "__COG__", d.prototype.cokTopo = "__COK__", d.prototype.colTopo = "__COL__", d.prototype.comTopo = "__COM__", d.prototype.cpvTopo = "__CPV__", d.prototype.criTopo = "__CRI__", d.prototype.csiTopo = "__CSI__", d.prototype.cubTopo = "__CUB__", d.prototype.cuwTopo = "__CUW__", d.prototype.cymTopo = "__CYM__", d.prototype.cynTopo = "__CYN__", d.prototype.cypTopo = "__CYP__", d.prototype.czeTopo = "__CZE__", d.prototype.deuTopo = "__DEU__", d.prototype.djiTopo = "__DJI__", d.prototype.dmaTopo = "__DMA__", d.prototype.dnkTopo = "__DNK__", d.prototype.domTopo = "__DOM__", d.prototype.dzaTopo = "__DZA__", d.prototype.ecuTopo = "__ECU__", d.prototype.egyTopo = "__EGY__", d.prototype.eriTopo = "__ERI__", d.prototype.esbTopo = "__ESB__", d.prototype.espTopo = "__ESP__", d.prototype.estTopo = "__EST__", d.prototype.ethTopo = "__ETH__", d.prototype.finTopo = "__FIN__", d.prototype.fjiTopo = "__FJI__", d.prototype.flkTopo = "__FLK__", d.prototype.fraTopo = "__FRA__", d.prototype.froTopo = "__FRO__", d.prototype.fsmTopo = "__FSM__", d.prototype.gabTopo = "__GAB__", d.prototype.psxTopo = "__PSX__", d.prototype.gbrTopo = "__GBR__", d.prototype.geoTopo = "__GEO__", d.prototype.ggyTopo = "__GGY__", d.prototype.ghaTopo = "__GHA__", d.prototype.gibTopo = "__GIB__", d.prototype.ginTopo = "__GIN__", d.prototype.gmbTopo = "__GMB__", d.prototype.gnbTopo = "__GNB__", d.prototype.gnqTopo = "__GNQ__", d.prototype.grcTopo = "__GRC__", d.prototype.grdTopo = "__GRD__", d.prototype.grlTopo = "__GRL__", d.prototype.gtmTopo = "__GTM__", d.prototype.gumTopo = "__GUM__", d.prototype.guyTopo = "__GUY__", d.prototype.hkgTopo = "__HKG__", d.prototype.hmdTopo = "__HMD__", d.prototype.hndTopo = "__HND__", d.prototype.hrvTopo = "__HRV__", d.prototype.htiTopo = "__HTI__", d.prototype.hunTopo = "__HUN__", d.prototype.idnTopo = "__IDN__", d.prototype.imnTopo = "__IMN__", d.prototype.indTopo = "__IND__", d.prototype.ioaTopo = "__IOA__", d.prototype.iotTopo = "__IOT__", d.prototype.irlTopo = "__IRL__", d.prototype.irnTopo = "__IRN__", d.prototype.irqTopo = "__IRQ__", d.prototype.islTopo = "__ISL__", d.prototype.isrTopo = "__ISR__", d.prototype.itaTopo = "__ITA__", d.prototype.jamTopo = "__JAM__", d.prototype.jeyTopo = "__JEY__", d.prototype.jorTopo = "__JOR__", d.prototype.jpnTopo = "__JPN__", d.prototype.kabTopo = "__KAB__", d.prototype.kasTopo = "__KAS__", d.prototype.kazTopo = "__KAZ__", d.prototype.kenTopo = "__KEN__", d.prototype.kgzTopo = "__KGZ__", d.prototype.khmTopo = "__KHM__", d.prototype.kirTopo = "__KIR__", d.prototype.knaTopo = "__KNA__", d.prototype.korTopo = "__KOR__", d.prototype.kosTopo = "__KOS__", d.prototype.kwtTopo = "__KWT__", d.prototype.laoTopo = "__LAO__", d.prototype.lbnTopo = "__LBN__", d.prototype.lbrTopo = "__LBR__", d.prototype.lbyTopo = "__LBY__", d.prototype.lcaTopo = "__LCA__", d.prototype.lieTopo = "__LIE__", d.prototype.lkaTopo = "__LKA__", d.prototype.lsoTopo = "__LSO__", d.prototype.ltuTopo = "__LTU__", d.prototype.luxTopo = "__LUX__", d.prototype.lvaTopo = "__LVA__", d.prototype.macTopo = "__MAC__", d.prototype.mafTopo = "__MAF__", d.prototype.marTopo = "__MAR__", d.prototype.mcoTopo = "__MCO__", d.prototype.mdaTopo = "__MDA__", d.prototype.mdgTopo = "__MDG__", d.prototype.mdvTopo = "__MDV__", d.prototype.mexTopo = "__MEX__", d.prototype.mhlTopo = "__MHL__", d.prototype.mkdTopo = "__MKD__", d.prototype.mliTopo = "__MLI__", d.prototype.mltTopo = "__MLT__", d.prototype.mmrTopo = "__MMR__", d.prototype.mneTopo = "__MNE__", d.prototype.mngTopo = "__MNG__", d.prototype.mnpTopo = "__MNP__", d.prototype.mozTopo = "__MOZ__", d.prototype.mrtTopo = "__MRT__", d.prototype.msrTopo = "__MSR__", d.prototype.musTopo = "__MUS__", d.prototype.mwiTopo = "__MWI__", d.prototype.mysTopo = "__MYS__", d.prototype.namTopo = "__NAM__", d.prototype.nclTopo = "__NCL__", d.prototype.nerTopo = "__NER__", d.prototype.nfkTopo = "__NFK__", d.prototype.ngaTopo = "__NGA__", d.prototype.nicTopo = "__NIC__", d.prototype.niuTopo = "__NIU__", d.prototype.nldTopo = "__NLD__", d.prototype.nplTopo = "__NPL__", d.prototype.nruTopo = "__NRU__", d.prototype.nulTopo = "__NUL__", d.prototype.nzlTopo = "__NZL__", d.prototype.omnTopo = "__OMN__", d.prototype.pakTopo = "__PAK__", d.prototype.panTopo = "__PAN__", d.prototype.pcnTopo = "__PCN__", d.prototype.perTopo = "__PER__", d.prototype.pgaTopo = "__PGA__", d.prototype.phlTopo = "__PHL__", d.prototype.plwTopo = "__PLW__", d.prototype.pngTopo = "__PNG__", d.prototype.polTopo = "__POL__", d.prototype.priTopo = "__PRI__", d.prototype.prkTopo = "__PRK__", d.prototype.prtTopo = "__PRT__", d.prototype.pryTopo = "__PRY__", d.prototype.pyfTopo = "__PYF__", d.prototype.qatTopo = "__QAT__", d.prototype.rouTopo = "__ROU__", d.prototype.rusTopo = "__RUS__", d.prototype.rwaTopo = "__RWA__", d.prototype.sahTopo = "__SAH__", d.prototype.sauTopo = "__SAU__", d.prototype.scrTopo = "__SCR__", d.prototype.sdnTopo = "__SDN__";
        d.prototype.sdsTopo = "__SDS__", d.prototype.senTopo = "__SEN__", d.prototype.serTopo = "__SER__", d.prototype.sgpTopo = "__SGP__", d.prototype.sgsTopo = "__SGS__", d.prototype.shnTopo = "__SHN__", d.prototype.slbTopo = "__SLB__", d.prototype.sleTopo = "__SLE__", d.prototype.slvTopo = "__SLV__", d.prototype.smrTopo = "__SMR__", d.prototype.solTopo = "__SOL__", d.prototype.somTopo = "__SOM__", d.prototype.spmTopo = "__SPM__", d.prototype.srbTopo = "__SRB__", d.prototype.stpTopo = "__STP__", d.prototype.surTopo = "__SUR__", d.prototype.svkTopo = "__SVK__", d.prototype.svnTopo = "__SVN__", d.prototype.sweTopo = "__SWE__", d.prototype.swzTopo = "__SWZ__", d.prototype.sxmTopo = "__SXM__", d.prototype.sycTopo = "__SYC__", d.prototype.syrTopo = "__SYR__", d.prototype.tcaTopo = "__TCA__", d.prototype.tcdTopo = "__TCD__", d.prototype.tgoTopo = "__TGO__", d.prototype.thaTopo = "__THA__", d.prototype.tjkTopo = "__TJK__", d.prototype.tkmTopo = "__TKM__", d.prototype.tlsTopo = "__TLS__", d.prototype.tonTopo = "__TON__", d.prototype.ttoTopo = "__TTO__", d.prototype.tunTopo = "__TUN__", d.prototype.turTopo = "__TUR__", d.prototype.tuvTopo = "__TUV__", d.prototype.twnTopo = "__TWN__", d.prototype.tzaTopo = "__TZA__", d.prototype.ugaTopo = "__UGA__", d.prototype.ukrTopo = "__UKR__", d.prototype.umiTopo = "__UMI__", d.prototype.uryTopo = "__URY__", d.prototype.usaTopo = {
            type: "Topology",
            transform: {
                scale: [.03514630243024302, .005240860686068607],
                translate: [-178.123152, 18.948267]
            },
            objects: {
                usa: {
                    type: "GeometryCollection",
                    geometries: [{
                        type: "Polygon",
                        id: "AL",
                        arcs: [
                            [0, 1, 2, 3, 4]
                        ],
                        properties: {
                            name: "Alabama"
                        }
                    }, {
                        type: "MultiPolygon",
                        id: "AK",
                        arcs: [
                            [
                                [5]
                            ],
                            [
                                [6]
                            ],
                            [
                                [7]
                            ],
                            [
                                [8]
                            ],
                            [
                                [9]
                            ],
                            [
                                [10]
                            ],
                            [
                                [11]
                            ],
                            [
                                [12]
                            ],
                            [
                                [13]
                            ],
                            [
                                [14]
                            ],
                            [
                                [15]
                            ],
                            [
                                [16]
                            ],
                            [
                                [17]
                            ],
                            [
                                [18]
                            ],
                            [
                                [19]
                            ],
                            [
                                [20]
                            ],
                            [
                                [21]
                            ],
                            [
                                [22]
                            ],
                            [
                                [23]
                            ],
                            [
                                [24]
                            ],
                            [
                                [25]
                            ],
                            [
                                [26]
                            ],
                            [
                                [27]
                            ],
                            [
                                [28]
                            ],
                            [
                                [29]
                            ],
                            [
                                [30]
                            ],
                            [
                                [31]
                            ],
                            [
                                [32]
                            ],
                            [
                                [33]
                            ],
                            [
                                [34]
                            ],
                            [
                                [35]
                            ],
                            [
                                [36]
                            ],
                            [
                                [37]
                            ],
                            [
                                [38]
                            ],
                            [
                                [39]
                            ],
                            [
                                [40]
                            ],
                            [
                                [41]
                            ],
                            [
                                [42]
                            ],
                            [
                                [43]
                            ]
                        ],
                        properties: {
                            name: "Alaska"
                        }
                    }, {
                        type: "Polygon",
                        id: "AZ",
                        arcs: [
                            [44, 45, 46, 47, 48]
                        ],
                        properties: {
                            name: "Arizona"
                        }
                    }, {
                        type: "Polygon",
                        id: "AR",
                        arcs: [
                            [49, 50, 51, 52, 53, 54]
                        ],
                        properties: {
                            name: "Arkansas"
                        }
                    }, {
                        type: "Polygon",
                        id: "CA",
                        arcs: [
                            [55, -47, 56, 57]
                        ],
                        properties: {
                            name: "California"
                        }
                    }, {
                        type: "Polygon",
                        id: "CO",
                        arcs: [
                            [58, 59, 60, 61, 62, 63]
                        ],
                        properties: {
                            name: "Colorado"
                        }
                    }, {
                        type: "Polygon",
                        id: "CT",
                        arcs: [
                            [64, 65, 66, 67]
                        ],
                        properties: {
                            name: "Connecticut"
                        }
                    }, {
                        type: "Polygon",
                        id: "DE",
                        arcs: [
                            [68, 69, 70, 71]
                        ],
                        properties: {
                            name: "Delaware"
                        }
                    }, {
                        type: "Polygon",
                        id: "DC",
                        arcs: [
                            [72, 73]
                        ],
                        properties: {
                            name: "District of Columbia"
                        }
                    }, {
                        type: "Polygon",
                        id: "FL",
                        arcs: [
                            [74, 75, -2]
                        ],
                        properties: {
                            name: "Florida"
                        }
                    }, {
                        type: "Polygon",
                        id: "GA",
                        arcs: [
                            [76, 77, -75, -1, 78, 79]
                        ],
                        properties: {
                            name: "Georgia"
                        }
                    }, {
                        type: "MultiPolygon",
                        id: "HI",
                        arcs: [
                            [
                                [80]
                            ],
                            [
                                [81]
                            ],
                            [
                                [82]
                            ],
                            [
                                [83]
                            ],
                            [
                                [84]
                            ]
                        ],
                        properties: {
                            name: "Hawaii"
                        }
                    }, {
                        type: "Polygon",
                        id: "ID",
                        arcs: [
                            [85, 86, 87, 88, 89, 90, 91]
                        ],
                        properties: {
                            name: "Idaho"
                        }
                    }, {
                        type: "Polygon",
                        id: "IL",
                        arcs: [
                            [92, 93, 94, 95, 96, 97]
                        ],
                        properties: {
                            name: "Illinois"
                        }
                    }, {
                        type: "Polygon",
                        id: "IN",
                        arcs: [
                            [98, 99, -95, 100, 101]
                        ],
                        properties: {
                            name: "Indiana"
                        }
                    }, {
                        type: "Polygon",
                        id: "IA",
                        arcs: [
                            [102, -98, 103, 104, 105, 106]
                        ],
                        properties: {
                            name: "Iowa"
                        }
                    }, {
                        type: "Polygon",
                        id: "KS",
                        arcs: [
                            [107, 108, -60, 109]
                        ],
                        properties: {
                            name: "Kansas"
                        }
                    }, {
                        type: "Polygon",
                        id: "KY",
                        arcs: [
                            [110, 111, 112, 113, -96, -100, 114]
                        ],
                        properties: {
                            name: "Kentucky"
                        }
                    }, {
                        type: "Polygon",
                        id: "LA",
                        arcs: [
                            [115, 116, 117, -52]
                        ],
                        properties: {
                            name: "Louisiana"
                        }
                    }, {
                        type: "Polygon",
                        id: "ME",
                        arcs: [
                            [118, 119]
                        ],
                        properties: {
                            name: "Maine"
                        }
                    }, {
                        type: "MultiPolygon",
                        id: "MD",
                        arcs: [
                            [
                                [120]
                            ],
                            [
                                [-71, 121, 122, 123, 124, -74, 125, 126, 127]
                            ]
                        ],
                        properties: {
                            name: "Maryland"
                        }
                    }, {
                        type: "Polygon",
                        id: "MA",
                        arcs: [
                            [128, 129, 130, 131, -68, 132, 133, 134]
                        ],
                        properties: {
                            name: "Massachusetts"
                        }
                    }, {
                        type: "MultiPolygon",
                        id: "MI",
                        arcs: [
                            [
                                [-102, 135, 136]
                            ],
                            [
                                [137]
                            ],
                            [
                                [138, 139]
                            ],
                            [
                                [140]
                            ]
                        ],
                        properties: {
                            name: "Michigan"
                        }
                    }, {
                        type: "Polygon",
                        id: "MN",
                        arcs: [
                            [-107, 141, 142, 143, 144]
                        ],
                        properties: {
                            name: "Minnesota"
                        }
                    }, {
                        type: "Polygon",
                        id: "MS",
                        arcs: [
                            [-4, 145, -116, -51, 146]
                        ],
                        properties: {
                            name: "Mississippi"
                        }
                    }, {
                        type: "Polygon",
                        id: "MO",
                        arcs: [
                            [-97, -114, 147, -55, 148, -108, 149, -104]
                        ],
                        properties: {
                            name: "Missouri"
                        }
                    }, {
                        type: "Polygon",
                        id: "MT",
                        arcs: [
                            [150, 151, -92, 152, 153]
                        ],
                        properties: {
                            name: "Montana"
                        }
                    }, {
                        type: "Polygon",
                        id: "NE",
                        arcs: [
                            [-105, -150, -110, -59, 154, 155]
                        ],
                        properties: {
                            name: "Nebraska"
                        }
                    }, {
                        type: "Polygon",
                        id: "NV",
                        arcs: [
                            [156, -48, -56, 157, -88]
                        ],
                        properties: {
                            name: "Nevada"
                        }
                    }, {
                        type: "Polygon",
                        id: "NH",
                        arcs: [
                            [-135, 158, 159, -120, 160]
                        ],
                        properties: {
                            name: "New Hampshire"
                        }
                    }, {
                        type: "Polygon",
                        id: "NJ",
                        arcs: [
                            [161, -69, 162, 163]
                        ],
                        properties: {
                            name: "New Jersey"
                        }
                    }, {
                        type: "Polygon",
                        id: "NM",
                        arcs: [
                            [164, 165, 166, -45, -62]
                        ],
                        properties: {
                            name: "New Mexico"
                        }
                    }, {
                        type: "Polygon",
                        id: "NY",
                        arcs: [
                            [-133, -67, 167, -164, 168, 169, 170]
                        ],
                        properties: {
                            name: "New York"
                        }
                    }, {
                        type: "Polygon",
                        id: "NC",
                        arcs: [
                            [171, 172, -80, 173, 174]
                        ],
                        properties: {
                            name: "North Carolina"
                        }
                    }, {
                        type: "Polygon",
                        id: "ND",
                        arcs: [
                            [175, -154, 176, -143]
                        ],
                        properties: {
                            name: "North Dakota"
                        }
                    }, {
                        type: "Polygon",
                        id: "OH",
                        arcs: [
                            [177, -115, -99, -137, 178, 179]
                        ],
                        properties: {
                            name: "Ohio"
                        }
                    }, {
                        type: "Polygon",
                        id: "OK",
                        arcs: [
                            [-149, -54, 180, -165, -61, -109]
                        ],
                        properties: {
                            name: "Oklahoma"
                        }
                    }, {
                        type: "Polygon",
                        id: "OR",
                        arcs: [
                            [-89, -158, -58, 181, 182]
                        ],
                        properties: {
                            name: "Oregon"
                        }
                    }, {
                        type: "Polygon",
                        id: "PA",
                        arcs: [
                            [-163, -72, -128, 183, -180, 184, -169]
                        ],
                        properties: {
                            name: "Pennsylvania"
                        }
                    }, {
                        type: "MultiPolygon",
                        id: "RI",
                        arcs: [
                            [
                                [185, -130]
                            ],
                            [
                                [186, -65, -132]
                            ]
                        ],
                        properties: {
                            name: "Rhode Island"
                        }
                    }, {
                        type: "Polygon",
                        id: "SC",
                        arcs: [
                            [187, -77, -173]
                        ],
                        properties: {
                            name: "South Carolina"
                        }
                    }, {
                        type: "Polygon",
                        id: "SD",
                        arcs: [
                            [-142, -106, -156, 188, -151, -176]
                        ],
                        properties: {
                            name: "South Dakota"
                        }
                    }, {
                        type: "Polygon",
                        id: "TN",
                        arcs: [
                            [189, -174, -79, -5, -147, -50, -148, -113]
                        ],
                        properties: {
                            name: "Tennessee"
                        }
                    }, {
                        type: "Polygon",
                        id: "TX",
                        arcs: [
                            [-53, -118, 190, -166, -181]
                        ],
                        properties: {
                            name: "Texas"
                        }
                    }, {
                        type: "Polygon",
                        id: "UT",
                        arcs: [
                            [191, -63, -49, -157, -87]
                        ],
                        properties: {
                            name: "Utah"
                        }
                    }, {
                        type: "Polygon",
                        id: "VT",
                        arcs: [
                            [-134, -171, 192, -159]
                        ],
                        properties: {
                            name: "Vermont"
                        }
                    }, {
                        type: "MultiPolygon",
                        id: "VA",
                        arcs: [
                            [
                                [193, -123]
                            ],
                            [
                                [120]
                            ],
                            [
                                [-126, -73, -125, 194, -175, -190, -112, 195]
                            ]
                        ],
                        properties: {
                            name: "Virginia"
                        }
                    }, {
                        type: "MultiPolygon",
                        id: "WA",
                        arcs: [
                            [
                                [-183, 196, -90]
                            ],
                            [
                                [197]
                            ],
                            [
                                [198]
                            ]
                        ],
                        properties: {
                            name: "Washington"
                        }
                    }, {
                        type: "Polygon",
                        id: "WV",
                        arcs: [
                            [-184, -127, -196, -111, -178]
                        ],
                        properties: {
                            name: "West Virginia"
                        }
                    }, {
                        type: "Polygon",
                        id: "WI",
                        arcs: [
                            [199, -93, -103, -145, 200, -140]
                        ],
                        properties: {
                            name: "Wisconsin"
                        }
                    }, {
                        type: "Polygon",
                        id: "WY",
                        arcs: [
                            [-189, -155, -64, -192, -86, -152]
                        ],
                        properties: {
                            name: "Wyoming"
                        }
                    }]
                }
            },
            arcs: [
                [
                    [2632, 3060],
                    [5, -164],
                    [7, -242],
                    [4, -53],
                    [3, -30],
                    [-2, -19],
                    [4, -11],
                    [-5, -25],
                    [0, -24],
                    [-2, -32],
                    [2, -57],
                    [-2, -51],
                    [3, -52]
                ],
                [
                    [2649, 2300],
                    [-14, -1],
                    [-59, 0],
                    [-1, -25],
                    [6, -37],
                    [-1, -31],
                    [2, -16],
                    [-4, -28]
                ],
                [
                    [2578, 2162],
                    [-4, -6],
                    [-7, 31],
                    [-1, 47],
                    [-2, 6],
                    [-3, -36],
                    [-1, -34],
                    [-7, 9]
                ],
                [
                    [2553, 2179],
                    [-2, 291],
                    [6, 363],
                    [4, 209],
                    [-3, 20]
                ],
                [
                    [2558, 3062],
                    [24, 1],
                    [50, -3]
                ],
                [
                    [1324, 6901],
                    [1, 32],
                    [6, -19],
                    [-1, -32],
                    [-8, 4],
                    [2, 15]
                ],
                [
                    [1317, 6960],
                    [5, -23],
                    [-3, -33],
                    [-2, 11],
                    [0, 45]
                ],
                [
                    [1285, 7153],
                    [6, 5],
                    [3, -8],
                    [-1, -28],
                    [-6, -6],
                    [-5, 17],
                    [3, 20]
                ],
                [
                    [1267, 7137],
                    [12, -7],
                    [3, -36],
                    [13, -41],
                    [4, -25],
                    [0, -21],
                    [3, -4],
                    [1, -27],
                    [5, -27],
                    [0, -25],
                    [3, 8],
                    [2, -19],
                    [1, -74],
                    [-3, -17],
                    [-7, 3],
                    [-3, 38],
                    [-2, -3],
                    [-6, 28],
                    [-2, -10],
                    [-5, 10],
                    [1, -28],
                    [5, 7],
                    [3, -10],
                    [-2, -39],
                    [-5, 4],
                    [-9, 49],
                    [-2, 25],
                    [1, 26],
                    [-7, -2],
                    [0, 20],
                    [5, 2],
                    [5, 18],
                    [-2, 31],
                    [-6, 7],
                    [-1, 50],
                    [-2, 25],
                    [-4, -18],
                    [-2, 28],
                    [4, 14],
                    [-3, 32],
                    [2, 8]
                ],
                [
                    [1263, 6985],
                    [5, -12],
                    [4, 15],
                    [4, -7],
                    [-4, -28],
                    [-6, 8],
                    [-3, 24]
                ],
                [
                    [1258, 7247],
                    [-4, 19],
                    [5, 13],
                    [15, -18],
                    [7, 1],
                    [5, -36],
                    [9, -29],
                    [-1, -22],
                    [-5, -11],
                    [-6, 5],
                    [-5, -14],
                    [-6, 9],
                    [-7, -9],
                    [-1, 45],
                    [0, 30],
                    [-5, 1],
                    [-1, 16]
                ],
                [
                    [1252, 7162],
                    [-4, 14],
                    [-4, 32],
                    [0, 24],
                    [3, 11],
                    [4, -11],
                    [0, 20],
                    [12, -35],
                    [1, -33],
                    [-4, -5],
                    [-3, -37],
                    [3, -11],
                    [-3, -43],
                    [-5, 9],
                    [0, -27],
                    [-3, 13],
                    [-2, 54],
                    [5, 25]
                ],
                [
                    [1207, 7331],
                    [8, 38],
                    [3, -16],
                    [7, -13],
                    [6, -2],
                    [0, -30],
                    [6, -99],
                    [0, -85],
                    [-1, -22],
                    [-4, 13],
                    [-10, 84],
                    [-7, 25],
                    [3, 20],
                    [-3, 48],
                    [-8, 39]
                ],
                [
                    [1235, 7494],
                    [10, -15],
                    [5, 2],
                    [0, -14],
                    [8, -52],
                    [-5, 8],
                    [-2, -18],
                    [6, -27],
                    [2, -48],
                    [-6, -13],
                    [-2, -16],
                    [-10, -35],
                    [-3, 1],
                    [-1, 37],
                    [2, 22],
                    [-1, 32],
                    [-3, 40],
                    [0, 21],
                    [-2, 51],
                    [-4, 22],
                    [-1, 38],
                    [7, -36]
                ],
                [
                    [1203, 7324],
                    [4, 0],
                    [4, -35],
                    [-2, -24],
                    [-6, -5],
                    [0, 38],
                    [0, 26]
                ],
                [
                    [1207, 7331],
                    [-5, 7],
                    [-3, 26],
                    [-6, 18],
                    [-5, 37],
                    [-6, 17],
                    [1, 30],
                    [4, 10],
                    [1, 26],
                    [3, -11],
                    [8, -1],
                    [6, 17],
                    [8, -23],
                    [-5, -26],
                    [2, -9],
                    [4, 28],
                    [10, -9],
                    [5, -21],
                    [-3, -38],
                    [3, -3],
                    [3, -50],
                    [-7, -7],
                    [-14, 41],
                    [0, -42],
                    [-4, -17]
                ],
                [
                    [883, 7871],
                    [-12, -48],
                    [-1, -19],
                    [-9, -12],
                    [2, 29],
                    [10, 30],
                    [7, 34],
                    [3, -14]
                ],
                [
                    [870, 7943],
                    [-2, -39],
                    [-4, -41],
                    [-6, 14],
                    [5, 47],
                    [7, 19]
                ],
                [
                    [863, 9788],
                    [3, -8],
                    [15, -9],
                    [8, 5],
                    [10, 0],
                    [12, -7],
                    [7, 4],
                    [7, -15],
                    [12, -18],
                    [16, -4],
                    [5, 10],
                    [11, 6],
                    [4, 14],
                    [12, 2],
                    [0, -9],
                    [7, 5],
                    [15, -15],
                    [9, -24],
                    [10, -11],
                    [2, -11],
                    [8, -2],
                    [8, -18],
                    [1, -11],
                    [5, 9],
                    [6, -7],
                    [0, -1783],
                    [13, -16],
                    [2, 17],
                    [14, -24],
                    [8, 30],
                    [18, 4],
                    [-3, -52],
                    [4, -17],
                    [10, -17],
                    [2, -27],
                    [29, -101],
                    [4, -63],
                    [6, 17],
                    [12, 31],
                    [7, 1],
                    [3, 23],
                    [0, 34],
                    [5, 0],
                    [1, 31],
                    [9, 7],
                    [13, 26],
                    [13, -45],
                    [-1, -27],
                    [3, -27],
                    [7, -7],
                    [10, -40],
                    [-1, -12],
                    [4, -22],
                    [12, -25],
                    [19, -110],
                    [3, -29],
                    [6, -29],
                    [8, -65],
                    [9, -55],
                    [-3, -23],
                    [9, -9],
                    [-2, -33],
                    [7, -14],
                    [1, -38],
                    [7, 2],
                    [14, -40],
                    [9, -7],
                    [5, -19],
                    [4, -5],
                    [1, -19],
                    [9, -5],
                    [3, -23],
                    [-4, -43],
                    [1, -36],
                    [4, -58],
                    [-4, -15],
                    [-6, -53],
                    [-10, -39],
                    [-3, 20],
                    [-4, -6],
                    [-3, 39],
                    [1, 17],
                    [-3, 20],
                    [7, 21],
                    [-2, 7],
                    [-7, -26],
                    [-3, 17],
                    [-4, -10],
                    [-12, 42],
                    [4, 46],
                    [-8, -15],
                    [0, -23],
                    [-6, 17],
                    [-1, 22],
                    [4, 24],
                    [-1, 24],
                    [-6, -19],
                    [-6, 42],
                    [-3, -8],
                    [-2, 36],
                    [5, 23],
                    [6, 0],
                    [-2, 28],
                    [3, 36],
                    [-5, -1],
                    [-9, 32],
                    [-6, 37],
                    [-15, 27],
                    [0, 77],
                    [-4, 9],
                    [1, 31],
                    [-5, 9],
                    [-8, 42],
                    [-2, 22],
                    [-12, 7],
                    [-14, 56],
                    [-6, 132],
                    [-3, -30],
                    [1, -27],
                    [6, -53],
                    [-1, -8],
                    [3, -43],
                    [0, -28],
                    [-6, 6],
                    [-4, 31],
                    [-6, 6],
                    [-8, -9],
                    [0, 45],
                    [-5, 38],
                    [-5, -12],
                    [-17, 40],
                    [-2, -11],
                    [10, -13],
                    [7, -31],
                    [3, -1],
                    [1, -25],
                    [4, -30],
                    [-10, -16],
                    [-5, 10],
                    [0, -26],
                    [-8, 20],
                    [-2, 14],
                    [-5, 0],
                    [-13, 38],
                    [-10, 33],
                    [-1, 20],
                    [-5, 30],
                    [-14, 21],
                    [-9, 21],
                    [-14, 26],
                    [-9, 24],
                    [1, 26],
                    [2, -9],
                    [3, 17],
                    [-3, 38],
                    [4, 21],
                    [-2, 9],
                    [-7, -40],
                    [-14, -26],
                    [-18, 10],
                    [-14, 24],
                    [-1, 18],
                    [-7, -4],
                    [-7, 14],
                    [-17, 12],
                    [-9, 1],
                    [-21, -10],
                    [-8, -7],
                    [-10, 27],
                    [-12, 12],
                    [-3, 17],
                    [-2, 28],
                    [-8, -2],
                    [-3, -25],
                    [-15, 34],
                    [-2, 14],
                    [-15, -27],
                    [-7, -32],
                    [-3, 30],
                    [3, 17],
                    [4, -5],
                    [14, 22],
                    [-2, 17],
                    [-6, -8],
                    [-3, 22],
                    [-6, 3],
                    [-6, 55],
                    [-3, -13],
                    [-8, -8],
                    [-3, 8],
                    [-3, -18],
                    [-11, 6],
                    [-1, -20],
                    [-7, -5],
                    [-3, 7],
                    [2, 36],
                    [-3, -1],
                    [-5, -38],
                    [7, -12],
                    [1, -27],
                    [4, -30],
                    [-3, -31],
                    [-5, 10],
                    [-2, -15],
                    [6, -7],
                    [3, -41],
                    [-8, -9],
                    [-4, 9],
                    [-7, -12],
                    [-3, 10],
                    [-9, -2],
                    [0, 16],
                    [-4, -10],
                    [-3, -20],
                    [-3, 18],
                    [-5, -25],
                    [2, -12],
                    [-6, -15],
                    [-6, -2],
                    [-3, -20],
                    [-6, -17],
                    [-4, 6],
                    [-5, -21],
                    [-4, 1],
                    [-8, -43],
                    [-9, -3],
                    [-3, 14],
                    [-5, -23],
                    [-11, 17],
                    [2, 33],
                    [8, 11],
                    [4, -2],
                    [2, 13],
                    [8, 25],
                    [0, 21],
                    [-11, -28],
                    [-9, 16],
                    [-1, 12],
                    [5, 48],
                    [8, 34],
                    [1, 29],
                    [2, 5],
                    [1, 30],
                    [-4, 34],
                    [10, 12],
                    [19, 48],
                    [4, -19],
                    [6, -5],
                    [9, 20],
                    [-10, 26],
                    [-4, 20],
                    [-7, -2],
                    [-5, 9],
                    [-2, -8],
                    [-9, -14],
                    [-4, -26],
                    [-9, -6],
                    [-9, -30],
                    [-1, -20],
                    [-7, -11],
                    [-2, -22],
                    [-5, -13],
                    [-2, -39],
                    [-10, -25],
                    [5, -20],
                    [-4, -29],
                    [-9, -5],
                    [-1, -38],
                    [-8, -13],
                    [-3, 15],
                    [-4, -29],
                    [-5, -1],
                    [1, -21],
                    [-11, -13],
                    [-2, -57],
                    [12, -3],
                    [10, -16],
                    [3, -19],
                    [-4, -30],
                    [-7, -19],
                    [-6, -1],
                    [0, -17],
                    [-4, -6],
                    [1, -21],
                    [-4, -31],
                    [-9, -29],
                    [-5, 0],
                    [-5, -11],
                    [-5, 2],
                    [-4, -11],
                    [2, -16],
                    [-7, -8],
                    [-2, -23],
                    [-5, 14],
                    [-5, -45],
                    [-9, 4],
                    [1, -24],
                    [-6, 6],
                    [-3, -11],
                    [0, -32],
                    [-6, -50],
                    [-10, -6],
                    [-7, -23],
                    [-2, -13],
                    [-5, 18],
                    [-8, -48],
                    [-2, 13],
                    [-5, -4],
                    [-1, -27],
                    [-5, -10],
                    [-6, 4],
                    [-4, -27],
                    [8, -9],
                    [-9, -60],
                    [-25, -20],
                    [-6, -54],
                    [-2, 12],
                    [1, 33],
                    [-5, 6],
                    [-6, -13],
                    [-1, -14],
                    [-10, -22],
                    [-4, -25],
                    [-1, 18],
                    [-2, -21],
                    [-6, 14],
                    [-10, -33],
                    [-8, 2],
                    [1, 25],
                    [-4, 24],
                    [-3, -20],
                    [1, -21],
                    [-11, -64],
                    [-3, 16],
                    [-1, -24],
                    [-8, 4],
                    [-1, 38],
                    [-4, 8],
                    [-2, -14],
                    [4, -16],
                    [-2, -27],
                    [-5, -13],
                    [-5, 29],
                    [-5, 2],
                    [-1, -11],
                    [5, -17],
                    [-9, -27],
                    [6, -7],
                    [0, -13],
                    [-5, 9],
                    [-7, -25],
                    [-15, 1],
                    [-7, -16],
                    [0, -13],
                    [-8, -15],
                    [-6, 6],
                    [-2, 35],
                    [6, 12],
                    [4, 43],
                    [6, 1],
                    [13, 28],
                    [10, 1],
                    [4, -27],
                    [3, 20],
                    [-1, 23],
                    [6, 10],
                    [7, 0],
                    [8, 50],
                    [10, 45],
                    [12, 40],
                    [15, 18],
                    [6, -9],
                    [6, 12],
                    [1, -17],
                    [-3, -19],
                    [4, -14],
                    [1, 23],
                    [7, 2],
                    [2, -15],
                    [5, -5],
                    [0, 18],
                    [-8, 15],
                    [0, 11],
                    [5, 49],
                    [6, 28],
                    [9, 27],
                    [15, 24],
                    [10, 35],
                    [5, -13],
                    [4, 5],
                    [-1, 22],
                    [1, 21],
                    [8, 44],
                    [11, 28],
                    [8, 38],
                    [0, 21],
                    [7, 148],
                    [11, 40],
                    [-1, 31],
                    [-27, -45],
                    [-8, 6],
                    [-2, 18],
                    [-5, 9],
                    [-1, 21],
                    [-4, -10],
                    [-3, -32],
                    [5, -41],
                    [-6, -18],
                    [-5, 7],
                    [-9, 64],
                    [-6, 33],
                    [-4, 0],
                    [-2, -24],
                    [-3, -4],
                    [-4, 19],
                    [-5, 4],
                    [-2, 32],
                    [-16, -37],
                    [-13, -26],
                    [-1, -14],
                    [-11, -22],
                    [-6, 20],
                    [5, 23],
                    [-1, 54],
                    [-4, 57],
                    [7, 24],
                    [-6, 49],
                    [-5, 27],
                    [-4, 39],
                    [-6, 17],
                    [-2, -34],
                    [-7, -8],
                    [-12, -22],
                    [-14, -9],
                    [-7, 2],
                    [-7, 12],
                    [-1, 30],
                    [-5, 9],
                    [-9, 42],
                    [-8, 8],
                    [-8, 46],
                    [6, 21],
                    [1, 39],
                    [-5, -8],
                    [0, 24],
                    [2, 19],
                    [-6, 18],
                    [0, -19],
                    [-7, 8],
                    [-1, 32],
                    [-6, 4],
                    [-3, 22],
                    [0, 27],
                    [-5, -12],
                    [-1, 26],
                    [7, 6],
                    [-6, 30],
                    [10, 2],
                    [0, 35],
                    [2, 24],
                    [18, 77],
                    [4, 23],
                    [3, -5],
                    [-2, 33],
                    [7, 55],
                    [6, 22],
                    [11, 9],
                    [8, -9],
                    [12, -33],
                    [8, 4],
                    [11, 32],
                    [11, 49],
                    [6, 6],
                    [1, -13],
                    [13, 0],
                    [12, 10],
                    [11, 52],
                    [0, 12],
                    [-5, 48],
                    [-1, 28],
                    [-8, 31],
                    [-3, 26],
                    [8, -7],
                    [8, 22],
                    [0, 20],
                    [-10, 39],
                    [-8, -30],
                    [-7, 5],
                    [-6, -17],
                    [-8, -4],
                    [-2, -11],
                    [-9, -17],
                    [-2, -28],
                    [-5, -12],
                    [-2, 34],
                    [-5, 7],
                    [-4, -26],
                    [-2, 12],
                    [-10, 19],
                    [-20, -1],
                    [-14, -21],
                    [-6, -3],
                    [-11, 13],
                    [-22, 14],
                    [-6, 12],
                    [-3, 19],
                    [2, 26],
                    [-8, 22],
                    [2, 24],
                    [5, 12],
                    [-2, 31],
                    [-8, 0],
                    [-6, 8],
                    [-13, 6],
                    [-7, 16],
                    [-10, 16],
                    [-1, 19],
                    [16, 27],
                    [20, 43],
                    [15, 27],
                    [8, -15],
                    [8, -3],
                    [2, 21],
                    [-5, 3],
                    [-1, 18],
                    [20, 29],
                    [22, 22],
                    [12, 2],
                    [7, -7],
                    [-4, -32],
                    [2, -22],
                    [-3, -15],
                    [4, -26],
                    [8, 5],
                    [10, -5],
                    [11, 6],
                    [4, -10],
                    [7, -2],
                    [7, 10],
                    [8, -11],
                    [9, 42],
                    [5, 2],
                    [5, -8],
                    [2, 24],
                    [-12, 11],
                    [-11, -9],
                    [1, 31],
                    [-8, 34],
                    [-10, 10],
                    [-2, 30],
                    [7, 8],
                    [9, -31],
                    [-1, -24],
                    [4, -18],
                    [10, -22],
                    [2, 23],
                    [-11, 30],
                    [5, 54],
                    [-4, 10],
                    [-11, -12],
                    [-11, 3],
                    [-2, 10],
                    [-6, -10],
                    [-24, 23],
                    [0, 24],
                    [-7, 54],
                    [-6, 19],
                    [-9, 17],
                    [-19, 46],
                    [-9, 18],
                    [-8, 4],
                    [-13, 31],
                    [-12, 18],
                    [-1, 6],
                    [9, 10],
                    [4, 29],
                    [1, 59],
                    [25, -4],
                    [31, 13],
                    [8, 11],
                    [12, 29],
                    [12, 45],
                    [3, 45],
                    [5, 38],
                    [10, 33],
                    [5, 24],
                    [13, 38],
                    [2, -10],
                    [11, -3],
                    [16, 20],
                    [10, 21],
                    [24, 64],
                    [9, 4],
                    [1, -10],
                    [9, 7],
                    [9, -2],
                    [18, 9],
                    [17, 28],
                    [17, 58],
                    [7, 13],
                    [2, -10],
                    [26, -24],
                    [2, -17],
                    [-9, -22],
                    [-4, -1],
                    [0, -29],
                    [14, 9],
                    [0, 16],
                    [6, 14],
                    [2, -8],
                    [5, 33],
                    [13, -30],
                    [-2, -23],
                    [8, -6],
                    [5, -14],
                    [7, 22],
                    [13, 1],
                    [7, 7],
                    [18, -7],
                    [10, -8],
                    [-5, -45],
                    [17, -12],
                    [2, -11],
                    [16, -20],
                    [1, 9],
                    [12, 13],
                    [11, -1],
                    [0, -11],
                    [7, -1],
                    [7, 15],
                    [11, 2],
                    [9, -6],
                    [11, -16],
                    [5, 3],
                    [7, -22],
                    [4, 9],
                    [7, -7],
                    [5, -13]
                ],
                [
                    [717, 7456],
                    [-1, -8],
                    [-9, 13],
                    [7, 49],
                    [6, 4],
                    [4, 45],
                    [5, -40],
                    [4, 14],
                    [8, -22],
                    [0, -31],
                    [-11, -4],
                    [-5, -13],
                    [-8, -7]
                ],
                [
                    [688, 7363],
                    [8, 25],
                    [-8, 6],
                    [0, 22],
                    [6, 14],
                    [5, -10],
                    [0, -22],
                    [3, 15],
                    [0, 32],
                    [5, -15],
                    [1, 21],
                    [5, -12],
                    [5, 0],
                    [5, 11],
                    [7, -20],
                    [0, -55],
                    [9, 4],
                    [-6, -37],
                    [-11, 15],
                    [4, -24],
                    [-3, -20],
                    [-6, 10],
                    [0, -38],
                    [-8, -10],
                    [-3, -16],
                    [-5, 15],
                    [-6, -40],
                    [-4, -4],
                    [-5, -18],
                    [-2, 43],
                    [-6, -23],
                    [-1, 13],
                    [-6, 14],
                    [0, 39],
                    [-6, 15],
                    [4, 45],
                    [11, 28],
                    [7, -2],
                    [1, -21]
                ],
                [
                    [671, 7185],
                    [-6, -39],
                    [-2, 6],
                    [8, 33]
                ],
                [
                    [640, 7055],
                    [4, -2],
                    [-1, -40],
                    [-8, 6],
                    [-1, 13],
                    [6, 23]
                ],
                [
                    [519, 6933],
                    [-2, -41],
                    [-9, -33],
                    [5, 51],
                    [2, -5],
                    [4, 28]
                ],
                [
                    [501, 6947],
                    [5, 0],
                    [0, -20],
                    [-5, -23],
                    [-5, 15],
                    [-3, -14],
                    [-2, 35],
                    [2, 12],
                    [8, -5]
                ],
                [
                    [451, 6875],
                    [1, -16],
                    [-3, -11],
                    [-3, 18],
                    [5, 9]
                ],
                [
                    [447, 8527],
                    [-4, -19],
                    [-2, 16],
                    [6, 3]
                ],
                [
                    [436, 6781],
                    [6, -7],
                    [-1, -16],
                    [-5, 1],
                    [0, 22]
                ],
                [
                    [358, 6745],
                    [2, -22],
                    [-5, -10],
                    [-1, 23],
                    [4, 9]
                ],
                [
                    [352, 6718],
                    [-8, -21],
                    [-2, 14],
                    [3, 19],
                    [7, -12]
                ],
                [
                    [335, 7902],
                    [6, 7],
                    [2, -14],
                    [5, 3],
                    [6, -12],
                    [1, -54],
                    [-3, -18],
                    [-7, -11],
                    [-2, -18],
                    [-11, 20],
                    [-5, -1],
                    [-10, 28],
                    [-4, 0],
                    [-6, 15],
                    [-3, 25],
                    [4, 7],
                    [10, -7],
                    [5, 20],
                    [5, 2],
                    [3, 14],
                    [4, -6]
                ],
                [
                    [334, 6690],
                    [5, -14],
                    [-10, -36],
                    [1, -6],
                    [12, 26],
                    [0, -15],
                    [-5, -17],
                    [-8, -12],
                    [-1, -18],
                    [-8, -18],
                    [-7, -1],
                    [-5, -18],
                    [-9, -16],
                    [-5, 17],
                    [9, 20],
                    [3, -3],
                    [8, 16],
                    [-2, 19],
                    [4, 20],
                    [6, -9],
                    [1, 12],
                    [-7, 4],
                    [-4, 14],
                    [4, 23],
                    [11, 13],
                    [2, -26],
                    [5, 25]
                ],
                [
                    [266, 6527],
                    [10, 37],
                    [1, 16],
                    [4, 17],
                    [7, 9],
                    [3, -10],
                    [1, -25],
                    [-12, -27],
                    [-6, -40],
                    [-6, -13],
                    [-2, 36]
                ],
                [
                    [238, 6477],
                    [2, -19],
                    [-8, -1],
                    [-1, 13],
                    [7, 7]
                ],
                [
                    [227, 7303],
                    [-4, -18],
                    [-1, 18],
                    [5, 0]
                ],
                [
                    [212, 6440],
                    [2, -18],
                    [-5, -13],
                    [-1, 19],
                    [4, 12]
                ],
                [
                    [182, 8542],
                    [22, -28],
                    [13, 24],
                    [6, -2],
                    [5, -14],
                    [2, -23],
                    [11, -12],
                    [4, -12],
                    [15, -5],
                    [8, -8],
                    [-4, -28],
                    [-7, 6],
                    [-8, -5],
                    [-4, -13],
                    [-4, -28],
                    [-5, 26],
                    [-6, 18],
                    [-6, 2],
                    [-3, 20],
                    [-15, 25],
                    [-6, 1],
                    [-11, -22],
                    [-7, 11],
                    [-4, 23],
                    [4, 44]
                ],
                [
                    [162, 6381],
                    [0, -22],
                    [-5, -4],
                    [1, 19],
                    [4, 7]
                ],
                [
                    [128, 6335],
                    [4, -8],
                    [10, 1],
                    [1, -7],
                    [-13, -9],
                    [-2, 23]
                ],
                [
                    [108, 6360],
                    [0, 19],
                    [4, 7],
                    [6, -19],
                    [-2, -17],
                    [-4, 1],
                    [1, -20],
                    [-5, -2],
                    [-12, -21],
                    [-6, 6],
                    [2, 15],
                    [7, -2],
                    [9, 33]
                ],
                [
                    [47, 6279],
                    [5, 3],
                    [0, -24],
                    [-6, 3],
                    [-8, -28],
                    [-4, 37],
                    [4, 1],
                    [0, 29],
                    [5, 1],
                    [0, -21],
                    [4, -1]
                ],
                [
                    [28, 6296],
                    [3, -9],
                    [-2, -32],
                    [-5, -10],
                    [0, 20],
                    [4, 31]
                ],
                [
                    [0, 6291],
                    [5, -1],
                    [4, -23],
                    [-4, -27],
                    [-5, 51]
                ],
                [
                    [9993, 6496],
                    [6, -13],
                    [0, -19],
                    [-11, -12],
                    [-8, 31],
                    [0, 15],
                    [13, -2]
                ],
                [
                    [1966, 3444],
                    [-1, -1081]
                ],
                [
                    [1965, 2363],
                    [-57, 0],
                    [-34, 71],
                    [-73, 150],
                    [3, 43]
                ],
                [
                    [1804, 2627],
                    [6, 8],
                    [1, 16],
                    [-1, 36],
                    [-4, 1],
                    [-2, 71],
                    [6, 27],
                    [0, 28],
                    [-1, 45],
                    [4, 34],
                    [4, 12],
                    [4, 25],
                    [-6, 27],
                    [-4, 51],
                    [-5, 31],
                    [0, 24]
                ],
                [
                    [1806, 3063],
                    [2, 26],
                    [0, 36],
                    [-3, 36],
                    [-2, 112],
                    [11, 7],
                    [3, -23],
                    [3, 1],
                    [3, 33],
                    [0, 153]
                ],
                [
                    [1823, 3444],
                    [101, 2],
                    [42, -2]
                ],
                [
                    [2515, 3253],
                    [-1, -35],
                    [-4, -11],
                    [-1, -29],
                    [-5, -31],
                    [0, -46],
                    [-3, -34],
                    [-3, -5]
                ],
                [
                    [2498, 3062],
                    [2, -17],
                    [-4, -14],
                    [-2, -33],
                    [-3, -8],
                    [0, -38],
                    [-5, -10],
                    [0, -13],
                    [-6, -31],
                    [2, -21],
                    [-5, -30],
                    [-5, -59],
                    [5, -25],
                    [-2, -16],
                    [1, -39],
                    [-2, -26]
                ],
                [
                    [2474, 2682],
                    [-69, 3],
                    [-13, 0]
                ],
                [
                    [2392, 2685],
                    [0, 101],
                    [-4, 8],
                    [-5, -9],
                    [-3, 18]
                ],
                [
                    [2380, 2803],
                    [1, 335],
                    [-5, 211]
                ],
                [
                    [2376, 3349],
                    [4, 0],
                    [123, -1],
                    [2, -36],
                    [-4, -23],
                    [-4, -36],
                    [18, 0]
                ],
                [
                    [1654, 4398],
                    [0, -331],
                    [0, -241],
                    [36, -171],
                    [35, -169],
                    [27, -137],
                    [20, -101],
                    [34, -185]
                ],
                [
                    [1804, 2627],
                    [-38, -18],
                    [-30, -16],
                    [-4, 25],
                    [0, 40],
                    [-2, 47],
                    [-4, 33],
                    [-9, 46],
                    [-12, 43],
                    [-2, -12],
                    [-4, 8],
                    [1, 18],
                    [-5, 39],
                    [-7, -8],
                    [-12, 28],
                    [-2, 23],
                    [-8, 28],
                    [-9, -1],
                    [-7, 13],
                    [-10, -6],
                    [-5, 26],
                    [1, 53],
                    [-1, 8],
                    [1, 38],
                    [-8, 28],
                    [0, 39],
                    [-3, 2],
                    [-4, 33],
                    [-4, 8],
                    [-1, 20],
                    [-11, 79],
                    [-5, 23],
                    [-1, 61],
                    [2, -5],
                    [2, 37],
                    [-4, 33],
                    [-5, -4],
                    [-7, 30],
                    [-2, 24],
                    [0, 23],
                    [-3, 31],
                    [0, 50],
                    [5, 0],
                    [-2, 70],
                    [-2, -7],
                    [-1, -35],
                    [-5, -7],
                    [-7, 26],
                    [-1, 45],
                    [-4, 35],
                    [-6, 22],
                    [-3, 25],
                    [-9, 50],
                    [2, 14],
                    [-4, 64],
                    [2, 35],
                    [-3, 54],
                    [-7, 52],
                    [-7, 29],
                    [-2, 35],
                    [7, 83],
                    [2, 29],
                    [-2, 22],
                    [3, 57],
                    [-2, 52],
                    [-3, 13],
                    [1, 42]
                ],
                [
                    [1534, 4399],
                    [28, 1],
                    [24, 1],
                    [38, -3],
                    [30, 0]
                ],
                [
                    [2107, 4208],
                    [57, 0],
                    [0, -191]
                ],
                [
                    [2164, 4017],
                    [1, -574]
                ],
                [
                    [2165, 3443],
                    [-28, 1]
                ],
                [
                    [2137, 3444],
                    [-38, -1],
                    [-72, 0],
                    [-15, 1],
                    [-46, 0]
                ],
                [
                    [1966, 3444],
                    [0, 223],
                    [-1, 21],
                    [0, 162],
                    [0, 357]
                ],
                [
                    [1965, 4207],
                    [32, 1],
                    [63, -1],
                    [47, 1]
                ],
                [
                    [3025, 4400],
                    [0, -113],
                    [-2, -18]
                ],
                [
                    [3023, 4269],
                    [-2, 3],
                    [-12, -14],
                    [-15, 4],
                    [-7, -26],
                    [-7, -9],
                    [-8, -22]
                ],
                [
                    [2972, 4205],
                    [-2, 22],
                    [7, 21],
                    [-2, 16],
                    [2, 144]
                ],
                [
                    [2977, 4408],
                    [12, -2],
                    [36, -3],
                    [0, -3]
                ],
                [
                    [2922, 3980],
                    [-2, -23]
                ],
                [
                    [2920, 3957],
                    [-3, -13],
                    [0, -30],
                    [5, -29],
                    [1, -47],
                    [6, -49],
                    [3, -2],
                    [1, -66]
                ],
                [
                    [2933, 3721],
                    [-19, 2],
                    [-2, 241]
                ],
                [
                    [2912, 3964],
                    [5, 21],
                    [5, -5]
                ],
                [
                    [2876, 3786],
                    [-2, 27]
                ],
                [
                    [2874, 3813],
                    [2, 12],
                    [4, -19],
                    [-4, -20]
                ],
                [
                    [2649, 2300],
                    [4, -55],
                    [39, -13],
                    [37, -14],
                    [1, -41],
                    [4, 1],
                    [1, 39],
                    [-1, 35],
                    [2, 15],
                    [7, -16],
                    [8, -7]
                ],
                [
                    [2751, 2244],
                    [1, -83],
                    [4, -93],
                    [8, -122],
                    [13, -131],
                    [-2, -9],
                    [1, -61],
                    [5, -68],
                    [8, -137],
                    [2, -42],
                    [0, -44],
                    [-3, -158],
                    [-3, -3],
                    [-3, -49],
                    [1, -16],
                    [-5, -36],
                    [-2, 9],
                    [-6, -15],
                    [-9, -8],
                    [-2, 20],
                    [1, 29],
                    [-7, 85],
                    [-5, 15],
                    [-4, -11],
                    [-3, 47],
                    [-1, 38],
                    [-6, 43],
                    [-2, 28],
                    [1, 41],
                    [-3, 8],
                    [1, -24],
                    [-3, -7],
                    [-9, 104],
                    [-4, 26],
                    [9, 76],
                    [-6, -4],
                    [-4, -24],
                    [-3, 38],
                    [5, 104],
                    [1, 87],
                    [-4, 21],
                    [-1, 28],
                    [-5, 6],
                    [-7, 46],
                    [-5, 19],
                    [0, 28],
                    [-4, 11],
                    [-3, 31],
                    [-11, 42],
                    [-9, -10],
                    [0, -29],
                    [-3, 5],
                    [-12, -35],
                    [-12, -9],
                    [0, 21],
                    [-3, 25],
                    [-15, 57],
                    [-10, 24],
                    [-10, 6],
                    [-8, -4],
                    [-17, -18]
                ],
                [
                    [2703, 3063],
                    [-6, -41],
                    [0, -20],
                    [9, -40],
                    [3, 3],
                    [5, -42],
                    [1, -22],
                    [4, -40],
                    [7, -24],
                    [3, -35],
                    [8, -33],
                    [0, -22],
                    [5, -35],
                    [7, -29],
                    [2, -32],
                    [1, -40],
                    [3, -14],
                    [5, -51],
                    [0, -33],
                    [7, -16]
                ],
                [
                    [2767, 2497],
                    [-7, -65],
                    [-2, -34],
                    [-3, -29],
                    [0, -30],
                    [-3, -14],
                    [-1, -81]
                ],
                [
                    [2632, 3060],
                    [37, 1]
                ],
                [
                    [2669, 3061],
                    [20, -1],
                    [14, 3]
                ],
                [
                    [640, 0],
                    [-7, 17],
                    [-1, 16],
                    [1, 43],
                    [-5, 73],
                    [4, 24],
                    [2, 34],
                    [-2, 22],
                    [1, 23],
                    [8, -27],
                    [9, -20],
                    [5, -29],
                    [0, -26],
                    [8, -40],
                    [-5, -34],
                    [-8, -15],
                    [-7, -25],
                    [-3, -36]
                ],
                [
                    [613, 397],
                    [3, -26],
                    [4, 11],
                    [9, -30],
                    [-1, -27],
                    [-9, -14],
                    [-2, 6],
                    [-1, 33],
                    [-5, 7],
                    [-1, 19],
                    [3, 21]
                ],
                [
                    [602, 432],
                    [-3, -20],
                    [-7, 0],
                    [2, 22],
                    [8, -2]
                ],
                [
                    [574, 525],
                    [3, -45],
                    [-2, -26],
                    [-6, -5],
                    [-4, 54],
                    [4, 1],
                    [5, 21]
                ],
                [
                    [531, 626],
                    [3, -2],
                    [2, -20],
                    [-1, -28],
                    [-4, -18],
                    [-9, 22],
                    [1, 31],
                    [8, 15]
                ],
                [
                    [1908, 4871],
                    [0, -472]
                ],
                [
                    [1908, 4399],
                    [-31, -1],
                    [-54, 0]
                ],
                [
                    [1823, 4398],
                    [-85, 1]
                ],
                [
                    [1738, 4399],
                    [0, 349],
                    [4, 62],
                    [-2, 16],
                    [-6, 3],
                    [-2, 26],
                    [6, 68],
                    [3, 6],
                    [3, 29],
                    [-1, 17],
                    [4, 23],
                    [1, 34],
                    [6, 56],
                    [-2, 26],
                    [-7, 14],
                    [-4, 32]
                ],
                [
                    [1741, 5160],
                    [0, 34],
                    [-3, 33],
                    [0, 16],
                    [0, 255],
                    [0, 236]
                ],
                [
                    [1738, 5734],
                    [28, 0]
                ],
                [
                    [1766, 5734],
                    [0, -195],
                    [9, -54],
                    [1, -52],
                    [5, -23],
                    [6, -8],
                    [0, -14],
                    [11, -51],
                    [1, -21],
                    [8, -20],
                    [0, -12],
                    [8, 1],
                    [-4, -71],
                    [-1, -45],
                    [3, -29],
                    [-5, -21],
                    [2, -20],
                    [-1, -21],
                    [6, -20],
                    [7, 26],
                    [3, 21],
                    [5, -19],
                    [-1, -15],
                    [3, -37],
                    [5, -39],
                    [3, -13],
                    [0, -37],
                    [3, -16],
                    [6, -2],
                    [4, -61],
                    [3, -11],
                    [3, 18],
                    [9, -1],
                    [7, 17],
                    [3, -10],
                    [7, 9],
                    [2, -11],
                    [5, 8],
                    [7, 39],
                    [4, -33],
                    [5, -20]
                ],
                [
                    [2489, 4496],
                    [53, -3],
                    [28, 0]
                ],
                [
                    [2570, 4493],
                    [-1, -37],
                    [4, -43],
                    [5, -70]
                ],
                [
                    [2578, 4343],
                    [0, -450],
                    [-3, -35],
                    [3, -40],
                    [1, -34],
                    [-4, -27],
                    [-1, -25],
                    [-5, -41],
                    [-3, -3],
                    [0, -24],
                    [-2, -9],
                    [-1, -45],
                    [0, -13]
                ],
                [
                    [2563, 3597],
                    [-3, -27],
                    [2, -34],
                    [-11, -17],
                    [-1, -20],
                    [2, -25],
                    [-3, -16],
                    [-11, 29],
                    [-3, -2],
                    [-4, -33],
                    [1, -11]
                ],
                [
                    [2532, 3441],
                    [-5, 2],
                    [-6, 55],
                    [2, 12],
                    [-2, 37],
                    [0, 29],
                    [-9, 41],
                    [-3, -4],
                    [-3, 25],
                    [-9, 38],
                    [0, 31],
                    [5, 49],
                    [-1, 18],
                    [3, 23],
                    [-4, 13],
                    [-6, 9],
                    [-3, -18],
                    [-3, 11],
                    [-1, 63],
                    [-10, 41],
                    [-9, 49],
                    [-3, 58],
                    [-1, 39],
                    [3, 27]
                ],
                [
                    [2467, 4089],
                    [0, 35],
                    [8, 21],
                    [1, 29],
                    [4, 19],
                    [0, 33],
                    [-4, 27],
                    [2, 34],
                    [11, 9],
                    [9, 24],
                    [0, 29],
                    [4, 13],
                    [1, 37],
                    [0, 24],
                    [-7, 18],
                    [-1, 20],
                    [-6, 35]
                ],
                [
                    [2655, 4340],
                    [0, -228],
                    [0, -266]
                ],
                [
                    [2655, 3846],
                    [-2, -9],
                    [2, -52],
                    [-5, -1],
                    [-5, -18],
                    [-8, 9],
                    [1, -38],
                    [-5, -16],
                    [-2, -24],
                    [-5, -9],
                    [-3, -48],
                    [-3, -13],
                    [-6, 18],
                    [-1, 22],
                    [-7, -24],
                    [1, -21],
                    [-7, -7],
                    [-1, 19],
                    [-8, -19],
                    [-2, -20],
                    [-7, 28],
                    [-4, -6],
                    [-2, 13],
                    [-3, -13],
                    [-7, -2],
                    [-3, -18]
                ],
                [
                    [2578, 4343],
                    [3, -12],
                    [8, 0],
                    [9, 22]
                ],
                [
                    [2598, 4353],
                    [23, 0],
                    [34, 0],
                    [0, -13]
                ],
                [
                    [2473, 4685],
                    [0, -28],
                    [4, -19],
                    [-3, -23],
                    [1, -43],
                    [2, -30],
                    [10, -22],
                    [2, -24]
                ],
                [
                    [2467, 4089],
                    [-3, 7],
                    [-6, 38],
                    [-3, -1],
                    [-40, -5],
                    [-39, -2],
                    [-33, 3]
                ],
                [
                    [2343, 4129],
                    [-3, 25],
                    [2, 49],
                    [-3, 43],
                    [0, 48],
                    [-5, 17],
                    [-1, 26],
                    [2, 23],
                    [-2, 33],
                    [-4, 13],
                    [-5, 86]
                ],
                [
                    [2324, 4492],
                    [-5, 41],
                    [2, 29],
                    [1, 37],
                    [2, 14],
                    [-3, 19],
                    [1, 33],
                    [-2, 16],
                    [4, 4]
                ],
                [
                    [2324, 4685],
                    [144, 0],
                    [5, 0]
                ],
                [
                    [2356, 4017],
                    [3, -18],
                    [9, -14],
                    [-6, -56],
                    [4, -18],
                    [4, -45],
                    [6, -10],
                    [0, -412]
                ],
                [
                    [2376, 3444],
                    [-156, 0],
                    [-55, -1]
                ],
                [
                    [2164, 4017],
                    [5, 0],
                    [187, 0]
                ],
                [
                    [2718, 3716],
                    [-1, -57],
                    [4, -37],
                    [4, -28],
                    [2, -22],
                    [5, -22],
                    [4, -3]
                ],
                [
                    [2736, 3547],
                    [-11, -51],
                    [-11, -29],
                    [0, -14],
                    [-4, -13],
                    [0, -16],
                    [-6, -8],
                    [-1, -21],
                    [-16, -27]
                ],
                [
                    [2687, 3368],
                    [0, -3],
                    [-24, 2],
                    [-22, 6],
                    [-5, -2],
                    [-32, 8],
                    [-36, -5],
                    [-6, 9],
                    [1, -35],
                    [-36, 2],
                    [-3, -2]
                ],
                [
                    [2524, 3348],
                    [1, 24],
                    [5, -8],
                    [2, 77]
                ],
                [
                    [2655, 3846],
                    [11, 0],
                    [5, -40],
                    [1, -17],
                    [9, -7],
                    [6, -26],
                    [5, 13],
                    [10, -14],
                    [4, 19],
                    [4, 6],
                    [1, -32],
                    [3, -6],
                    [4, -26]
                ],
                [
                    [2474, 2682],
                    [3, -22],
                    [-2, -9],
                    [-1, -38],
                    [5, -24],
                    [0, -57],
                    [-3, -44],
                    [-7, -27],
                    [-2, -43],
                    [-2, 4],
                    [-1, -70],
                    [-3, -2],
                    [2, -37],
                    [-2, -14],
                    [54, 0],
                    [-3, -63],
                    [4, -41],
                    [1, -32],
                    [4, -20]
                ],
                [
                    [2521, 2143],
                    [-9, -26],
                    [0, -19],
                    [7, -12],
                    [3, 30],
                    [6, -30],
                    [-1, -24],
                    [-3, -11],
                    [-7, 10],
                    [1, -18],
                    [-2, -27],
                    [5, -24],
                    [9, -7],
                    [3, -29],
                    [3, -4],
                    [-5, -32],
                    [-5, 6],
                    [-4, 33],
                    [-10, 18],
                    [0, 33],
                    [-6, -11],
                    [1, -27],
                    [-3, -25],
                    [-3, -4],
                    [-3, 28],
                    [-7, 1],
                    [-2, -29],
                    [-4, -9],
                    [-5, 18],
                    [-4, 2],
                    [-3, 47],
                    [-7, 21],
                    [-2, -3],
                    [-3, 40],
                    [-7, -5],
                    [0, 24],
                    [-8, -23],
                    [1, -18],
                    [-5, -17],
                    [-9, 8],
                    [-10, 27],
                    [-7, 11],
                    [-16, -9],
                    [-2, -8]
                ],
                [
                    [2398, 2049],
                    [-2, 19],
                    [6, 68],
                    [-2, 37],
                    [2, 20],
                    [-1, 26],
                    [3, 19],
                    [3, 50],
                    [0, 40],
                    [-8, 78],
                    [0, 41],
                    [-7, 42],
                    [0, 196]
                ],
                [
                    [3046, 5029],
                    [12, 26],
                    [-2, 13],
                    [5, 30],
                    [4, 13],
                    [-1, 12],
                    [5, 18],
                    [-1, 33],
                    [2, 50],
                    [5, 17],
                    [1, 53],
                    [22, 147],
                    [6, -7],
                    [0, -35],
                    [4, -13],
                    [9, 21],
                    [6, 0],
                    [4, 14],
                    [8, -31],
                    [4, -25],
                    [1, -214],
                    [-1, -51],
                    [10, -14],
                    [-2, -22],
                    [3, -21],
                    [-2, -18],
                    [4, -30],
                    [5, 7],
                    [5, -68],
                    [-6, -31],
                    [-3, 12],
                    [-3, -21],
                    [-4, 5],
                    [0, -18],
                    [-6, 2],
                    [-8, -40],
                    [-2, 28],
                    [-3, 2],
                    [1, -30],
                    [-6, -15],
                    [-2, 24],
                    [-3, -12],
                    [-7, 0],
                    [0, 28],
                    [-5, -6],
                    [1, -20],
                    [-4, -42],
                    [1, -12],
                    [-6, -23],
                    [-5, 9],
                    [-3, -24],
                    [-4, -3],
                    [-4, -20],
                    [-4, 4],
                    [-1, 21],
                    [-7, -34],
                    [2, -21],
                    [-5, -7],
                    [0, -18],
                    [-5, -22],
                    [-5, -50]
                ],
                [
                    [3056, 4600],
                    [-3, 14],
                    [0, 19],
                    [-4, 22],
                    [-2, 250],
                    [-1, 124]
                ],
                [
                    [2904, 3626],
                    [2, 0],
                    [-1, 0],
                    [-1, 0]
                ],
                [
                    [2933, 3721],
                    [-6, -80]
                ],
                [
                    [2927, 3641],
                    [-4, -3],
                    [-8, -12]
                ],
                [
                    [2915, 3626],
                    [-6, -8],
                    [0, 31],
                    [-2, 13],
                    [3, 13],
                    [-4, 32],
                    [-2, -14],
                    [-6, 3],
                    [-2, 35],
                    [2, 0],
                    [0, 45],
                    [2, 18],
                    [-2, 60],
                    [3, 36],
                    [5, 6],
                    [0, 37],
                    [-3, -5],
                    [0, -18],
                    [-8, -25],
                    [-2, -21],
                    [0, -56],
                    [-3, -26],
                    [1, -44],
                    [4, -30],
                    [-1, -23],
                    [3, -23],
                    [-2, -16],
                    [-6, 30],
                    [-10, 15],
                    [-2, 29],
                    [-6, -16],
                    [-2, 23],
                    [5, 29]
                ],
                [
                    [2874, 3756],
                    [2, 30]
                ],
                [
                    [2874, 3813],
                    [-4, 18],
                    [-6, 10],
                    [0, 28],
                    [-3, 15],
                    [-4, 4]
                ],
                [
                    [2857, 3888],
                    [-4, 53],
                    [-4, 0],
                    [-5, 18],
                    [-3, -15],
                    [-5, 1],
                    [-1, -21],
                    [-8, 14],
                    [-6, -28],
                    [-3, 6],
                    [-6, -33],
                    [-6, -17],
                    [1, 98]
                ],
                [
                    [2807, 3964],
                    [105, 0]
                ],
                [
                    [3053, 4565],
                    [1, -34],
                    [-1, -27],
                    [-5, -25],
                    [0, -29],
                    [6, -4],
                    [4, -31],
                    [0, -24],
                    [3, -6],
                    [0, -22],
                    [8, -19],
                    [9, 18],
                    [-2, -26],
                    [-13, -23],
                    [-5, -1],
                    [-3, 18],
                    [-5, -6],
                    [0, -13],
                    [-5, -9]
                ],
                [
                    [3045, 4302],
                    [-3, 35]
                ],
                [
                    [3042, 4337],
                    [0, 6]
                ],
                [
                    [3042, 4343],
                    [-3, 14],
                    [-2, 45],
                    [-4, 0],
                    [-8, -2]
                ],
                [
                    [2977, 4408],
                    [0, 7],
                    [6, 126]
                ],
                [
                    [2983, 4541],
                    [23, -3]
                ],
                [
                    [3006, 4538],
                    [34, -7],
                    [3, 18],
                    [7, 19],
                    [3, -3]
                ],
                [
                    [2598, 4353],
                    [5, 25],
                    [4, 43],
                    [4, 26],
                    [3, 36],
                    [1, 52],
                    [0, 57],
                    [-9, 111],
                    [3, 42],
                    [-2, 50],
                    [6, 51],
                    [2, 43],
                    [-1, 23],
                    [5, 9],
                    [0, 31],
                    [8, 9],
                    [5, 34],
                    [0, -69],
                    [3, -3],
                    [3, 35],
                    [1, 58],
                    [2, 15],
                    [8, 9],
                    [-3, 41],
                    [5, 35],
                    [7, 2],
                    [7, -22],
                    [7, -3],
                    [3, -28],
                    [6, -2],
                    [9, -25],
                    [3, 1],
                    [4, -41],
                    [-3, -21],
                    [3, -29],
                    [2, -32],
                    [-2, -71],
                    [-6, -18],
                    [-1, -37],
                    [-7, -12],
                    [-4, -44],
                    [2, -17],
                    [6, -15],
                    [6, 24],
                    [6, 49],
                    [10, 19],
                    [5, -15],
                    [3, -27],
                    [3, -80],
                    [0, -39],
                    [3, -48],
                    [-3, -69],
                    [-4, -11],
                    [-1, 25],
                    [-3, -7],
                    [-3, -58],
                    [-6, -21],
                    [-2, -44],
                    [-7, -37],
                    [0, -16]
                ],
                [
                    [2694, 4347],
                    [-39, -7]
                ],
                [
                    [2635, 5110],
                    [1, -23],
                    [-4, -4],
                    [1, 33],
                    [2, -6]
                ],
                [
                    [2496, 5270],
                    [11, 20],
                    [5, 23],
                    [12, 9],
                    [8, 29],
                    [4, 1],
                    [3, 20],
                    [9, 28],
                    [4, 24],
                    [7, 15],
                    [6, -13],
                    [-11, -59],
                    [-2, -19],
                    [0, -36],
                    [5, 27],
                    [10, -4],
                    [8, -19],
                    [7, -52],
                    [3, -10],
                    [7, 9],
                    [2, -12],
                    [7, -6],
                    [16, 44],
                    [8, 4],
                    [10, -2],
                    [7, 15],
                    [6, 1],
                    [1, -54],
                    [5, -7],
                    [6, 8],
                    [2, -12],
                    [4, 16],
                    [8, 5],
                    [1, -67],
                    [3, -28],
                    [6, -8],
                    [1, 19],
                    [5, 0],
                    [3, -20],
                    [-3, -14],
                    [-15, 12],
                    [-8, -8],
                    [-8, 23],
                    [-2, -21],
                    [1, -18],
                    [-4, 4],
                    [-5, 27],
                    [-9, 15],
                    [-5, 1],
                    [-4, -25],
                    [-8, -6],
                    [-8, 5],
                    [-3, -10],
                    [-1, -21],
                    [-9, -18],
                    [1, 25],
                    [-4, 5],
                    [-2, -26],
                    [-6, -1],
                    [-3, -11],
                    [-5, -45],
                    [-8, -58],
                    [1, -5]
                ],
                [
                    [2576, 4989],
                    [-4, 20],
                    [2, 27],
                    [-7, 4],
                    [3, 26],
                    [0, 34],
                    [-5, 23],
                    [-4, 24],
                    [-12, 19],
                    [-4, -7],
                    [-12, 29],
                    [-29, 38],
                    [-3, 33],
                    [-5, 11]
                ],
                [
                    [2541, 5539],
                    [-7, -24],
                    [-4, -3],
                    [1, 19],
                    [18, 45],
                    [-4, -31],
                    [-4, -6]
                ],
                [
                    [2324, 4685],
                    [0, 343],
                    [-7, 22],
                    [-5, 36],
                    [8, 41],
                    [1, 22]
                ],
                [
                    [2321, 5149],
                    [-1, 76],
                    [-4, 20],
                    [-2, 42],
                    [0, 51],
                    [-1, 8],
                    [-1, 123],
                    [-5, 65],
                    [-3, 36],
                    [0, 77],
                    [1, 27],
                    [-3, 60]
                ],
                [
                    [2302, 5734],
                    [59, 0],
                    [0, 73],
                    [5, -2],
                    [4, -14],
                    [4, -100],
                    [3, -11],
                    [9, -3],
                    [1, -10],
                    [11, -4],
                    [1, -21],
                    [10, 5],
                    [0, 9],
                    [7, 10],
                    [6, -4],
                    [8, -16],
                    [2, -19],
                    [4, 2],
                    [4, -43],
                    [2, 18],
                    [7, 8],
                    [1, -18],
                    [9, -12],
                    [0, -17],
                    [4, -14],
                    [8, 8],
                    [5, 18],
                    [8, 12],
                    [2, -28],
                    [5, 6],
                    [6, -6],
                    [6, 4],
                    [8, -24],
                    [7, 4],
                    [0, -10],
                    [-10, -24],
                    [-13, -19],
                    [-9, -20],
                    [-12, -49],
                    [-5, -31],
                    [-8, -34],
                    [-13, -46],
                    [2, -16]
                ],
                [
                    [2450, 5296],
                    [-2, 9],
                    [-6, -16],
                    [0, -113],
                    [-2, -11],
                    [-8, -16],
                    [-6, -41],
                    [-1, -27],
                    [3, -2],
                    [4, -24],
                    [-3, -29],
                    [0, -33],
                    [-2, -70],
                    [8, -34],
                    [6, -3],
                    [3, -21],
                    [8, -21],
                    [2, -25],
                    [8, -33],
                    [5, -7],
                    [5, -42],
                    [-1, -30],
                    [2, -22]
                ],
                [
                    [2553, 2179],
                    [-3, -8],
                    [-7, 4],
                    [-3, 12],
                    [-7, -8],
                    [-9, -22],
                    [-3, -14]
                ],
                [
                    [2498, 3062],
                    [53, 0],
                    [7, 0]
                ],
                [
                    [2524, 3348],
                    [-2, 0],
                    [-2, 0],
                    [1, -47],
                    [-6, -48]
                ],
                [
                    [2376, 3349],
                    [0, 95]
                ],
                [
                    [2356, 4017],
                    [-7, 50],
                    [-6, 62]
                ],
                [
                    [2108, 5151],
                    [0, -181],
                    [-1, 0]
                ],
                [
                    [2107, 4970],
                    [-53, 1],
                    [-90, 0],
                    [-56, 0],
                    [0, -100]
                ],
                [
                    [1766, 5734],
                    [130, -1],
                    [58, 1],
                    [154, 0]
                ],
                [
                    [2108, 5734],
                    [0, -217],
                    [0, -366]
                ],
                [
                    [2107, 4208],
                    [0, 382]
                ],
                [
                    [2107, 4590],
                    [21, 0],
                    [49, -1],
                    [88, 0],
                    [1, -10],
                    [15, -34],
                    [4, 19],
                    [4, -4],
                    [13, 0],
                    [15, -36],
                    [2, -27],
                    [5, -5]
                ],
                [
                    [1823, 4398],
                    [0, -954]
                ],
                [
                    [1654, 4398],
                    [37, -1],
                    [47, 2]
                ],
                [
                    [3006, 4538],
                    [-2, 14],
                    [0, 28],
                    [3, 11],
                    [-1, 27],
                    [3, 81],
                    [5, 37],
                    [2, 43],
                    [3, 16],
                    [-1, 47],
                    [10, 17],
                    [5, 33],
                    [-3, 31],
                    [4, 32],
                    [0, 18]
                ],
                [
                    [3034, 4973],
                    [4, 49],
                    [6, -5],
                    [2, 12]
                ],
                [
                    [3056, 4600],
                    [-3, -35]
                ],
                [
                    [2962, 4152],
                    [-5, -13],
                    [-2, -29],
                    [8, -14],
                    [0, -22],
                    [-3, -103],
                    [-9, -76],
                    [-6, -22],
                    [-5, -48],
                    [-3, 31],
                    [-8, 16],
                    [-10, 42],
                    [-1, 28],
                    [0, 4],
                    [2, 11]
                ],
                [
                    [2922, 3980],
                    [8, 15],
                    [0, 15],
                    [9, 31],
                    [2, 17],
                    [-9, 39],
                    [0, 24],
                    [-3, 6],
                    [-1, 22],
                    [5, 33],
                    [-3, 20],
                    [7, 40],
                    [2, 21],
                    [4, 13]
                ],
                [
                    [2943, 4276],
                    [13, -41],
                    [9, -28],
                    [-3, -55]
                ],
                [
                    [2137, 3444],
                    [0, -95]
                ],
                [
                    [2137, 3349],
                    [-1, 0],
                    [0, -474],
                    [0, -193],
                    [0, -192],
                    [-101, 0],
                    [-1, -18],
                    [3, -22]
                ],
                [
                    [2037, 2450],
                    [-48, 0],
                    [0, -87],
                    [-24, 0]
                ],
                [
                    [2972, 4205],
                    [13, -15],
                    [2, 11],
                    [10, 0],
                    [6, 6],
                    [8, 31],
                    [1, -22],
                    [5, -10],
                    [-11, -28],
                    [-22, -42],
                    [-9, -8],
                    [-6, 2],
                    [-5, -9],
                    [-2, 31]
                ],
                [
                    [2943, 4276],
                    [-2, 14],
                    [-4, 1],
                    [-5, 32],
                    [1, 29],
                    [-4, 22],
                    [-2, -2],
                    [-3, 27],
                    [-125, 0],
                    [0, 48],
                    [0, 3]
                ],
                [
                    [2799, 4450],
                    [17, 54],
                    [3, 26],
                    [5, 18],
                    [-2, 32],
                    [-2, 7],
                    [-2, 52],
                    [17, 22],
                    [15, -1],
                    [6, -5],
                    [6, -21],
                    [4, 8],
                    [12, -1],
                    [8, 14],
                    [8, 34],
                    [5, 1],
                    [0, 52],
                    [3, 31],
                    [-7, 21],
                    [2, 24],
                    [11, 32],
                    [4, 28],
                    [14, 64],
                    [13, 32],
                    [19, -5],
                    [23, 4]
                ],
                [
                    [2981, 4973],
                    [1, -39],
                    [-2, -36],
                    [3, -34],
                    [-1, -37],
                    [-3, -39],
                    [2, -52],
                    [-1, -16],
                    [4, -31],
                    [-1, -132],
                    [0, -16]
                ],
                [
                    [2909, 3359],
                    [4, -77],
                    [-8, 8],
                    [-1, -10],
                    [-10, -11],
                    [-1, -11],
                    [-7, -3],
                    [0, -13],
                    [8, 9],
                    [1, -8],
                    [9, 9],
                    [3, -18],
                    [5, 8],
                    [2, -46],
                    [-2, -22],
                    [-3, -2],
                    [-8, -47],
                    [-9, -2],
                    [-2, -33],
                    [4, -32],
                    [4, -6],
                    [-6, -54],
                    [-6, 7],
                    [-9, -6],
                    [-6, -11],
                    [-10, -37],
                    [-7, -48],
                    [-4, -60],
                    [-6, 13],
                    [-11, -12]
                ],
                [
                    [2833, 2844],
                    [-32, 181],
                    [-32, 4],
                    [1, 21],
                    [-5, 33],
                    [-3, -12],
                    [0, 20],
                    [-35, 10],
                    [-8, -8],
                    [-6, -17],
                    [-10, -13]
                ],
                [
                    [2669, 3061],
                    [1, 45],
                    [5, 4],
                    [3, 31],
                    [7, 29],
                    [7, 1],
                    [7, 29],
                    [8, 10],
                    [6, 43],
                    [4, 13],
                    [1, -19],
                    [11, 37],
                    [5, -8],
                    [4, 36],
                    [5, 9],
                    [1, 45]
                ],
                [
                    [2744, 3366],
                    [20, -5],
                    [19, -3],
                    [23, -1],
                    [103, 2]
                ],
                [
                    [2321, 5149],
                    [-213, 2]
                ],
                [
                    [2108, 5734],
                    [194, 0]
                ],
                [
                    [2777, 4138],
                    [-4, -10],
                    [2, -21],
                    [0, -29],
                    [-4, -46],
                    [-3, -70],
                    [-11, -62],
                    [-3, -8],
                    [-4, 12],
                    [-3, -27],
                    [-3, 1],
                    [-4, -36],
                    [1, -22],
                    [-3, -18],
                    [-4, 29],
                    [-5, -46],
                    [1, -29],
                    [-3, -11],
                    [-1, -25],
                    [-8, -4]
                ],
                [
                    [2694, 4347],
                    [11, -26],
                    [3, -15],
                    [3, 14],
                    [6, -30],
                    [4, -9],
                    [14, 25],
                    [7, -6],
                    [9, 36],
                    [12, 34],
                    [14, 24]
                ],
                [
                    [2777, 4394],
                    [0, -256]
                ],
                [
                    [2380, 2803],
                    [-11, 21],
                    [-3, 22],
                    [-7, 18],
                    [-2, -16],
                    [-8, 1],
                    [-1, 10],
                    [-7, -19],
                    [-3, 11],
                    [-6, -10],
                    [-5, -29],
                    [-2, 17],
                    [-6, 14],
                    [-7, 0],
                    [-2, 21],
                    [-7, -42],
                    [-2, 24],
                    [-3, -8],
                    [-3, 16],
                    [-7, 15],
                    [-5, -25],
                    [-2, 26],
                    [-4, 3],
                    [-2, 21],
                    [-6, 8],
                    [-3, -18],
                    [-3, 16],
                    [-5, -2],
                    [-6, 17],
                    [-6, -2],
                    [-2, 36],
                    [-9, 2],
                    [-4, -6],
                    [-6, 37],
                    [-2, -3],
                    [0, 370],
                    [-52, 0],
                    [-34, 0]
                ],
                [
                    [1534, 4399],
                    [-4, 22],
                    [-2, 61],
                    [0, 43],
                    [-4, 33],
                    [3, 32],
                    [2, 51],
                    [4, 54],
                    [2, 48],
                    [3, 162],
                    [0, 22],
                    [3, 71],
                    [1, 99],
                    [-2, 54],
                    [1, 32],
                    [12, 29]
                ],
                [
                    [1553, 5212],
                    [5, -22],
                    [4, 5],
                    [3, 2],
                    [6, -20],
                    [3, -23],
                    [1, -57],
                    [15, -21],
                    [12, 30],
                    [8, 3],
                    [9, -10],
                    [1, -13],
                    [16, 27],
                    [3, -9],
                    [9, 5],
                    [7, 19],
                    [12, 17],
                    [12, 4],
                    [4, 12],
                    [58, -1]
                ],
                [
                    [2807, 3964],
                    [-30, 0],
                    [0, 174]
                ],
                [
                    [2777, 4394],
                    [5, 11],
                    [17, 45]
                ],
                [
                    [3045, 4302],
                    [-6, -4],
                    [3, 39]
                ],
                [
                    [3042, 4343],
                    [-4, 3],
                    [-3, -28],
                    [-1, -40],
                    [-11, -9]
                ],
                [
                    [2833, 2844],
                    [-5, -10],
                    [-6, -31],
                    [-6, -49],
                    [-1, -40],
                    [-5, -31],
                    [-6, 0],
                    [-2, -23],
                    [-6, -25],
                    [-4, -28],
                    [-6, -11],
                    [-6, -29],
                    [-1, -14],
                    [-6, -16],
                    [-6, -40]
                ],
                [
                    [2107, 4590],
                    [0, 380]
                ],
                [
                    [2687, 3368],
                    [57, -2]
                ],
                [
                    [2398, 2049],
                    [-5, -1],
                    [-14, -26],
                    [-6, 15],
                    [-1, 31],
                    [-3, -22],
                    [-3, 5],
                    [-1, -27],
                    [3, -11],
                    [0, -36],
                    [-5, -37],
                    [-9, -47],
                    [-17, -51],
                    [-2, 9],
                    [-5, -13],
                    [0, 12],
                    [-7, -9],
                    [-3, 24],
                    [-2, -5],
                    [7, -49],
                    [-5, -16],
                    [-5, 10],
                    [-1, -35],
                    [-7, -35],
                    [-6, -66],
                    [-4, -69],
                    [-3, 5],
                    [-1, -25],
                    [3, 6],
                    [-2, -50],
                    [-2, -2],
                    [0, -28],
                    [3, -16],
                    [1, -57],
                    [3, -20],
                    [0, -37],
                    [3, -32],
                    [-9, -20],
                    [-3, 25],
                    [-7, 10],
                    [-9, -3],
                    [-8, 32],
                    [-5, 3],
                    [-5, 25],
                    [-6, 8],
                    [-4, 24],
                    [-2, 58],
                    [-5, 34],
                    [0, 30],
                    [-2, 31],
                    [1, 27],
                    [-4, 30],
                    [-3, 4],
                    [-5, 27],
                    [-1, 34],
                    [-5, 32],
                    [-6, 26],
                    [-3, 57],
                    [-2, 16],
                    [-4, 46],
                    [-1, 38],
                    [-4, 27],
                    [-6, 24],
                    [-1, 16],
                    [-6, 15],
                    [-4, 42],
                    [-13, 9],
                    [-7, -2],
                    [-7, 15],
                    [-1, -20],
                    [-7, -6],
                    [-5, -40],
                    [-3, -64],
                    [-2, -1],
                    [-4, -37],
                    [-5, -1],
                    [-7, 29],
                    [-17, 47],
                    [-4, 25],
                    [-6, 24],
                    [-5, 54],
                    [-1, 49],
                    [-4, 40],
                    [-2, 35],
                    [-3, 22],
                    [-11, 32],
                    [-6, 44],
                    [-4, 15],
                    [-6, 38],
                    [-7, 20],
                    [-5, 50],
                    [-4, 11]
                ],
                [
                    [1908, 4399],
                    [0, -192],
                    [57, 0]
                ],
                [
                    [2981, 4973],
                    [30, -2],
                    [23, 2]
                ],
                [
                    [2927, 3641],
                    [-4, -32],
                    [-3, -12],
                    [-3, -44],
                    [-6, -71],
                    [-5, -15],
                    [-1, 27],
                    [2, 58],
                    [8, 74]
                ],
                [
                    [2874, 3756],
                    [-4, -8],
                    [-2, -28],
                    [1, -19],
                    [8, 6],
                    [1, -31],
                    [10, -12],
                    [3, -24],
                    [8, -26],
                    [-4, -54],
                    [4, -41],
                    [-4, -20],
                    [-1, -24],
                    [4, -15],
                    [-4, -23],
                    [-6, 30],
                    [-1, -10],
                    [5, -22],
                    [14, -5],
                    [3, -71]
                ],
                [
                    [2736, 3547],
                    [-1, -16],
                    [4, -32],
                    [5, -16],
                    [4, 1],
                    [5, 25],
                    [4, -20],
                    [7, 11],
                    [13, 36],
                    [1, -11],
                    [5, 17],
                    [0, 34],
                    [4, 30],
                    [5, 29],
                    [2, 34],
                    [6, 36],
                    [2, 44],
                    [5, -27],
                    [4, -8],
                    [3, 16],
                    [6, 68],
                    [4, -17],
                    [13, 77],
                    [2, 57],
                    [15, -64],
                    [3, 37]
                ],
                [
                    [1553, 5212],
                    [-5, 7],
                    [-4, -12],
                    [-6, 17],
                    [1, 26],
                    [4, 14],
                    [-6, 40],
                    [-4, 103],
                    [-2, 14],
                    [-3, 73],
                    [-6, 28],
                    [-2, 56],
                    [3, 38],
                    [6, -18],
                    [11, -24],
                    [8, 1],
                    [8, -9],
                    [8, 9],
                    [3, -16],
                    [7, 1],
                    [5, -42],
                    [3, 3],
                    [1, -56],
                    [2, -52],
                    [3, 6],
                    [-3, 43],
                    [1, 43],
                    [4, 44],
                    [-3, 18],
                    [-1, 31],
                    [-3, 35],
                    [2, 25],
                    [-2, 29],
                    [-5, 4],
                    [-4, 22],
                    [1, 21],
                    [163, 0]
                ],
                [
                    [1576, 5602],
                    [4, 9],
                    [0, -39],
                    [-5, 15],
                    [1, 15]
                ],
                [
                    [1568, 5655],
                    [3, 25],
                    [4, -30],
                    [-1, -27],
                    [-7, 8],
                    [1, 24]
                ],
                [
                    [2576, 4989],
                    [-1, -23],
                    [-6, -4],
                    [-4, -44],
                    [-2, -30],
                    [3, -6],
                    [5, 20],
                    [4, 38],
                    [6, 15],
                    [5, 48],
                    [6, 10],
                    [-1, -25],
                    [-4, -23],
                    [-8, -79],
                    [-2, -44],
                    [0, -32],
                    [-3, -10],
                    [-2, -43],
                    [1, -37],
                    [-3, -24],
                    [-3, -59],
                    [0, -47],
                    [4, -42],
                    [-1, -55]
                ],
                [
                    [2450, 5296],
                    [6, -2],
                    [20, 33],
                    [8, 17],
                    [2, -13],
                    [-4, -25],
                    [9, -33],
                    [5, -3]
                ]
            ]
        }, d.prototype.usgTopo = "__USG__", d.prototype.uzbTopo = "__UZB__", d.prototype.vatTopo = "__VAT__", d.prototype.vctTopo = "__VCT__", d.prototype.venTopo = "__VEN__", d.prototype.vgbTopo = "__VGB__", d.prototype.virTopo = "__VIR__", d.prototype.vnmTopo = "__VNM__", d.prototype.vutTopo = "__VUT__", d.prototype.wlfTopo = "__WLF__", d.prototype.wsbTopo = "__WSB__", d.prototype.wsmTopo = "__WSM__", d.prototype.yemTopo = "__YEM__", d.prototype.zafTopo = "__ZAF__", d.prototype.zmbTopo = "__ZMB__", d.prototype.zweTopo = "__ZWE__", d.prototype.latLngToXY = function(t, n) {
            return this.projection([n, t])
        }, d.prototype.addLayer = function(t, n, e) {
            var r;
            return r = e ? this.svg.insert("g", ":first-child") : this.svg.append("g"), r.attr("id", n || "").attr("class", t || "")
        }, d.prototype.updateChoropleth = function(t, n) {
            var e = this.svg;
            n && !0 === n.reset && e.selectAll(".datamaps-subunit").attr("data-info", function() {
                return "{}"
            }).transition().style("fill", this.options.fills.defaultFill);
            for (var r in t)
                if (t.hasOwnProperty(r)) {
                    var o, i = t[r];
                    if (!r) continue;
                    if (o = "string" == typeof i ? i : "string" == typeof i.color ? i.color : "string" == typeof i.fillColor ? i.fillColor : this.options.fills[i.fillKey], i === Object(i)) {
                        this.options.data[r] = h(i, this.options.data[r] || {});
                        this.svg.select("." + r).attr("data-info", JSON.stringify(this.options.data[r]))
                    }
                    e.selectAll("." + r).transition().style("fill", o)
                }
        }, d.prototype.updatePopup = function(t, n, e) {
            var r = this;
            t.on("mousemove", null), t.on("mousemove", function() {
                var o = g.mouse(r.options.element);
                g.select(r.svg[0][0].parentNode).select(".datamaps-hoverover").style("top", o[1] + 30 + "px").html(function() {
                    var r = JSON.parse(t.attr("data-info"));
                    try {
                        return e.popupTemplate(n, r)
                    } catch (t) {
                        return ""
                    }
                }).style("left", o[0] + "px")
            }), g.select(r.svg[0][0].parentNode).select(".datamaps-hoverover").style("display", "block")
        }, d.prototype.addPlugin = function(t, n) {
            var e = this;
            void 0 === d.prototype[t] && (d.prototype[t] = function(r, o, i, a) {
                var s;
                void 0 === a && (a = !1), "function" == typeof o && (i = o, o = void 0), o = h(o || {}, e.options[t + "Config"]), !a && this.options[t + "Layer"] ? (s = this.options[t + "Layer"], o = o || this.options[t + "Options"]) : (s = this.addLayer(t), this.options[t + "Layer"] = s, this.options[t + "Options"] = o), n.apply(this, [s, r, o]), i && i(s)
            })
        }, g = e(1125), v = e(1126), t.exports = d, window.jQuery && (window.jQuery.fn.datamaps = function(t, n) {
            t = t || {}, t.element = this[0];
            var e = new d(t);
            return "function" == typeof n && n(e, t), this
        })
    }()
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    "use strict";

    function r(t) {
        if (Array.isArray(t)) {
            for (var n = 0, e = Array(t.length); n < t.length; n++) e[n] = t[n];
            return e
        }
        return Array.from(t)
    }
    Object.defineProperty(n, "__esModule", {
        value: !0
    });
    var o = e(22),
        i = e.n(o),
        a = e(453),
        s = (e.n(a), e(1545)),
        u = (e.n(s), e(1164)),
        l = (e.n(u), e(1011)),
        c = e(1012),
        p = e(1047),
        f = e(158);
    i()(document).ready(function() {
            function t(t) {
                var n = E[window.LRTT_CURRENCY],
                    e = t.indexOf(n);
                return e >= 0 ? t[e] : t[0]
            }

            function n() {
                var n = d.trips.tree[parseInt(T.val())] || {},
                    e = Object.keys(n),
                    r = t(e);
                S.children().remove(), e.forEach(function(t) {
                    return S.append(N[t])
                }), S.val(r)
            }

            function o() {
                d.trips && d.trips.tree && function() {
                    var t = parseInt(S.val()),
                        n = d.trips.tree[parseInt(T.val())],
                        r = n && n[t] || [],
                        o = i()('<div class="row"></div>');
                    x.html(P[t] ? "Dates fit within " + P[t] + " teaching summer" : ""), e.i(f.c)().forEach(function(t) {
                        var n = void 0;
                        n = e.i(f.d)(r, t), n = e.i(f.e)(n, "Fellowship");
                        var i = e.i(f.f)(n.map(function(t) {
                                return {
                                    name: t.name,
                                    location: t.location,
                                    slug: t.slug,
                                    key: t.fillKey,
                                    start: t.start_date,
                                    end: t.end_date
                                }
                            })),
                            u = e.i(f.g)(n.map(function(t) {
                                return g[a(t.start_date)]
                            }));
                        u.length > 0 ? M.text("Starting in " + u.join(2 === u.length ? " and " : ", ")) : M.text("No dates available"), o.append(s(t, i))
                    }), k.html(o)
                }()
            }

            function a(t) {
                return parseInt(t.split("-")[1].replace("0", "")) - 1
            }

            function s(t, n) {
                var r = i()('<div class="col-sm-4"></div>').append("<h5><strong>" + e.i(f.h)(t) + "</strong></h5>"),
                    o = i()('<ul class="region-list"></ul>');
                return n.length > 0 ? (n.forEach(function(t) {
                    o.append(u(t))
                }), r.append(o)) : r = "", r
            }

            function u(t) {
                return i()('<li><a href="/fellowships/' + t.slug.toLowerCase() + '"><i class="flag-icon flag-icon-' + e.i(f.i)(t.key) + '"></i> ' + e.i(f.h)(t.name.replace("-", " ")) + "</a></li>")
            }

            function h(t) {
                var n = t.serializeArray(),
                    e = {};
                return n.map(function(t) {
                    e[t.name] = t.value
                }), e
            }
            var d = {},
                g = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                v = i()(".ajax-form"),
                y = i()(".navbar-collapse"),
                m = i()(".navbar-lrtt"),
                _ = i()("#fellowships-dropdown").parent(),
                b = i()('[data-target="#fellowships-dropdown"]'),
                w = i()("#fellowships-dropdown-close"),
                x = i()("#nav-suitability"),
                T = i()("#nav-year"),
                S = i()("#nav-month"),
                M = i()("#when-text"),
                k = i()("#nav-fellowships"),
                C = i()(".included-collapse-item"),
                A = i()("body"),
                P = {
                    0: "Australian",
                    6: "UK & US",
                    7: "UK"
                },
                E = {
                    GBP: "7",
                    USD: "6",
                    AUD: "0"
                },
                N = [].concat(r(S.children()));
            v.submit(function(t) {
                t.preventDefault();
                var n = i()(this);
                return n.find("button").prop("disabled", !0), p.a.createLead(h(n)).then(function(t) {
                    n.append("<div class='form-group'><div class='alert alert-" + t.type + " enquiry-notification'>" + t.message + "</div></div>"), n.find("button").prop("disabled", !1), fbq("track", "Lead")
                }).catch(function() {
                    n.append("<div class='alert alert-danger'>Sorry, something went wrong! Please use the live chat</div>"), n.find("button").prop("disabled", !1)
                }), !1
            }), i()('form input[name="screen"]').each(function() {
                i()(this).val(window.screen.availHeight)
            }), i()(window).scroll(function() {
                i()(window).scrollTop() >= 175 ? m.addClass("scrolled") : m.removeClass("scrolled")
            }), i()(window).scroll(), i()(window).width() <= 768 && (y.on("hidden.bs.collapse", function() {
                A.removeClass("locked")
            }), y.on("shown.bs.collapse", function() {
                A.removeClass("locked")
            }), _.on("hidden.bs.dropdown", function() {
                A.removeClass("locked")
            }), _.on("shown.bs.dropdown", function() {
                A.addClass("locked")
            })), b.on("click touch", function() {
                m.toggleClass("fellowships-open"), _.toggleClass("open")
            }), w.on("click", function() {
                b.trigger("click")
            }), T.on("change", function() {
                n(), o()
            }), S.on("change", function() {
                o()
            }), p.a.getAllTrips().then(function(t) {
                d.trips = {
                    raw: t,
                    tree: e.i(f.a)(t)
                };
                var r = Object.keys(d.trips.tree);
                T.children().remove(), T.append(r.reduce(function(t, n) {
                    return t + '<option value="' + n + '">' + n + "</option>"
                }, "")), n(), o()
            }), i()(".slider").not(".slick-initialized").each(function() {
                i()(this).slick({
                    arrows: "feedback" === i()(this).attr("id") || "testimonials" === i()(this).attr("id"),
                    autoplay: "feedback" === i()(this).attr("id") || "testimonials" === i()(this).attr("id"),
                    infinite: !0,
                    autoplaySpeed: 3e3,
                    speed: 400
                }).on("afterChange", function(t, n) {
                    i()('[data-target="#' + i()(this).attr("id") + '"]').removeClass("active"), i()('[data-target="#' + i()(this).attr("id") + '"][data-slide="' + n.slickCurrentSlide() + '"]').addClass("active")
                })
            }), i()("#timeline-nav").slick({
                slidesToShow: 1,
                slidesToScroll: 1,
                asNavFor: "#timeline-slider",
                arrows: !0,
                centerMode: !0,
                infinite: !1,
                focusOnSelect: !0
            }), i()("#timeline-slider").slick({
                slidesToShow: 1,
                slidesToScroll: 1,
                arrows: !1,
                centerMode: !0,
                asNavFor: "#timeline-nav",
                infinite: !1,
                centerPadding: "30px"
            }), i()("#also-interested-slider").slick({
                respondTo: "window",
                mobileFirst: !0,
                slidesToShow: 1,
                slidesToScroll: 1,
                responsive: [{
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 4
                    }
                }, {
                    breakpoint: 860,
                    settings: {
                        slidesToShow: 3
                    }
                }, {
                    breakpoint: 540,
                    settings: {
                        slidesToShow: 2
                    }
                }],
                arrows: !1,
                infinite: !1
            });
            var O = i()("#included-slider"),
                $ = i()(".included-slider-control");
            O.slick({
                    arrows: !1
                }), $.on("click", function() {
                    var t = i()(this);
                    $.removeClass("active"), t.addClass("active"), O.slick("slickGoTo", t.attr("data-index"))
                }), C.on("click", function() {
                    var t = i()(this),
                        n = t.hasClass("expand");
                    C.removeClass("expand"), n ? t.removeClass("expand") : t.addClass("expand")
                }), i()('[data-toggle="slider"]').on("click", function() {
                    var t = i()(this).data("target"),
                        n = i()(this).data("slide");
                    i()(t).slick("slickGoTo", n), i()(".slider-btn").removeClass("active"), i()(this).addClass("active")
                }), i()("[data-convertable-amount]").each(function() {
                    i()(this).text(e.i(f.b)(window.LRTT_CURRENCY) + (parseInt(i()(this).data("convertable-amount")) * window.CONVERSION_RATE).toFixed(0))
                }),
                function() {
                    i()("body").find("[data-video]").click(function() {
                        var t = i()(this).data("target"),
                            n = i()(this).attr("data-video"),
                            e = n + "?autoplay=1";
                        i()(t + " iframe").attr("src", e), i()(t + " button.close").click(function() {
                            i()(t + " iframe").attr("src", "")
                        }), i()(".modal").click(function() {
                            i()(t + " iframe").attr("src", "")
                        })
                    })
                }(),
                function() {
                    i()("body").find("[data-excursion]").click(function() {
                        var t = i()(this).data("target"),
                            n = i()(this).attr("data-excursion"),
                            e = (i()(this).attr("data-quote"), i()(this).attr("data-body")),
                            r = i()(this).attr("data-image");
                        i()(t + " .excursion-modal-header").css({
                            "background-image": "url(" + r + ")",
                            "background-size": "cover",
                            "background-position": "25% 50%"
                        }), i()(t + " .excursion-modal-title").text(n), i()(t + " .excursion-modal-body").text(e)
                    })
                }(), e.i(c.a)("project-map"), e.i(l.a)("reach-map"), i()("#homeCarousel").carousel({
                    interval: 6e3
                }), i()("#partnersCarousel").carousel({
                    interval: 2e3
                }), i()('[data-toggle="popover"]').popover({
                    trigger: "focus",
                    placement: "bottom"
                }), navigator.userAgent.match(/(iPod|iPhone|iPad)/) && (i()(".info-button").bind("click tap", function() {
                    return i()(this).popover("show"), !1
                }), i()(document).bind("click touchstart", function(t) {
                    i()('[data-toggle="popover"], [data-original-title]').each(function() {
                        i()(this).is(t.target) || 0 !== i()(this).has(t.target).length || 0 !== i()(".popover").has(t.target).length || 0 !== i()(".info-button").has(t.target).length || i()(this).popover("hide")
                    })
                })), i()("#homePageArrow").click(function() {
                    i()("html, body").stop().animate({
                        scrollTop: i()(window).height()
                    }, "500", "swing", function() {})
                }), i()("body > footer .livechat").click(function() {
                    return window.LC_API ? window.LC_API.open_chat_window() : console.log("LiveChat not Available"), !1
                })
        }),
        function() {
            if (window.location.search) {
                var t = function() {
                    var t = window.location.search.replace(/^\?/, "").split(/\&/),
                        n = {};
                    return t.forEach(function(t) {
                        var e = t.split(/\=/);
                        e.length > 1 && (n[e[0]] = e[1].replace(/\+/, " ").toString())
                    }), n
                }();
                if (t.utm_source)
                    for (var n = ["utm_source", "utm_content", "utm_campaign", "utm_medium"], e = 0; e < n.length; e++) window.localStorage.setItem(n[e], t[n[e]] ? t[n[e]] : "not set");
                t.gclid && window.localStorage.setItem("gclid", t.gclid)
            }
        }()
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    "use strict";
    var r = e(782),
        o = e.n(r),
        i = e(135),
        a = e.n(i),
        s = e(736),
        u = e(2),
        l = (e.n(u), e(22)),
        c = e.n(l),
        p = function(t) {
            var n = document.getElementById(t);
            n && function() {
                var t = s.a.projects;
                t = t.map(function(t) {
                    return window.innerWidth < 1024 && ("UGANDA" === t.name && (t.latitude = 10), t.radius = 10), t
                }), new o.a({
                    element: n,
                    scope: "world",
                    responsive: !0,
                    geographyConfig: s.a.geographyConfig,
                    fills: s.a.fills,
                    data: s.a.data,
                    done: function(n) {
                        n.bubbles(t, {
                            popupOnHover: !1
                        }), c()(window).on("resize", function() {
                            n.resize()
                        }), d(f)
                    }
                })
            }()
        },
        f = function(t) {
            var n = c()(".datamaps-bubble");
            n.popover({
                trigger: "manual",
                title: function() {
                    var t = c()(this).data("info"),
                        n = h(t.name);
                    return '\n               <img src="images/flags/' + t.flag + '" height="16" width="24"/> LRTT ' + n + "\n            "
                },
                content: function() {
                    var n = c()(this).data("info"),
                        e = n.fillKey.toLowerCase();
                    return ['<div class="container-fluid">'].concat(t.filter(function(t) {
                        return void 0 !== t.fillKey && -1 !== t.fillKey.toLowerCase().indexOf(e)
                    }).map(function(t) {
                        var n = t.teachers,
                            e = t.children,
                            r = t.fellows,
                            o = t.fellowships,
                            i = t.startYear,
                            a = t.partners.trim(),
                            s = t.featuredVideo,
                            u = t.blog,
                            l = "";
                        return void 0 !== s && (l += '<a href="' + s + '" class="btn btn-orange" target="_blank">Watch Video</a>'), void 0 !== u && (l += '<a href="' + u + '" class="btn btn-grey-ghost" target="_blank">Read Blog</a>'), '\n                                <div class="row">\n                                    <div class="col-xs-6">\n                                        <span>Teachers Trained:</span>\n                                    </div>\n                                    <div class="col-xs-6">\n                                        <b>' + n + '</b>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-xs-6">\n                                        <span>Children Reached:</span>\n                                    </div>\n                                    <div class="col-xs-6">\n                                        <b>' + e + '</b>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-xs-6">\n                                        <span>Fellows:</span>\n                                    </div>\n                                    <div class="col-xs-6">\n                                        <b>' + r + '</b>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-xs-6">\n                                        <span>Fellowships:</span>\n                                    </div>\n                                    <div class="col-xs-6">\n                                        <b>' + o + '</b>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-xs-6">\n                                        <span>Established:</span>\n                                    </div>\n                                    <div class="col-xs-6">\n                                        <b>' + i + '</b>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-xs-6">\n                                        <span>Partners:</span>\n                                    </div>\n                                    <div class="col-xs-6">\n                                        <b>' + a + '</b>\n                                    </div>\n                                </div>\n                                <div class="row">\n                                    <div class="col-xs-12">\n                                        ' + l + "\n                                    </div>\n                                </div>\n                        "
                    })).concat("</div>").join("")
                },
                placement: function(t) {
                    c()(t).addClass("bottom")
                },
                template: '\n            <div class="popover global-reach" role="tooltip">\n                <div class="arrow hidden-xs"></div>\n                <h4 class="popover-title"></h4>\n                <div class="popover-content"></div>\n            </div>\n        ',
                container: "#reach-map",
                html: !0
            }), n.click(function(t) {
                var e = c()(t.currentTarget),
                    r = parseInt(e.attr("cx")),
                    o = parseInt(e.attr("cy")),
                    i = null;
                e.on("hidden.bs.popover", function() {
                    c()(".datamap").unbind("click")
                }).on("inserted.bs.popover", function() {
                    i = c()("#" + e.attr("aria-describedby")), i.addClass("map-popover"), i.css("display", "none")
                }).on("shown.bs.popover", function() {
                    var t = parseInt(i.css("width"));
                    window.innerWidth < 768 ? i.css({
                        top: "0px",
                        left: "0px",
                        display: "block"
                    }) : i.css({
                        top: o + 10 + "px",
                        left: r - t / 2 + "px",
                        display: "block"
                    }), c()(".datamap").click(function() {
                        n.popover("hide")
                    })
                }).popover("toggle")
            })
        },
        h = function(t) {
            return t.replace(/\b\w/g, function(t) {
                return t.toUpperCase()
            })
        },
        d = function(t) {
            a.a.get("/api/globalreach").set({
                Accept: "application/json",
                "Content-Type": "application/json"
            }).then(function(n) {
                console.log(n.body), t(n.body)
            }, function(n) {
                422 !== n.status && window.Bugsnag && Bugsnag.notify("Load Global Reach Statistics Error", n.response.body), t([])
            })
        };
    n.a = p
}, function(t, n, e) {
    "use strict";
    var r = e(782),
        o = e.n(r),
        i = e(135),
        a = e.n(i),
        s = e(736),
        u = e(2),
        l = e.n(u),
        c = e(22),
        p = e.n(c),
        f = function(t) {
            var n = document.getElementById(t);
            n && function() {
                var t = s.a.projects;
                t = t.map(function(t) {
                    return window.innerWidth < 1024 && ("UGANDA" === t.name && (t.latitude = 10), t.radius = 10), t
                }), new o.a({
                    element: n,
                    scope: "world",
                    responsive: !0,
                    geographyConfig: s.a.geographyConfig,
                    fills: s.a.fills,
                    data: s.a.data,
                    done: function(n) {
                        n.bubbles(t, {
                            popupOnHover: !1
                        }), p()(window).on("resize", function() {
                            n.resize()
                        }), g(h)
                    }
                })
            }()
        },
        h = function(t) {
            var n = p()(".datamaps-bubble");
            n.popover({
                trigger: "manual",
                title: function() {
                    var t = p()(this).data("info"),
                        n = d(t.name);
                    return '\n               <img src="images/flags/' + t.flag + '" height="24" width="32"/> LRTT ' + n + "\n            "
                },
                content: function() {
                    var n = p()(this).data("info"),
                        e = n.fillKey.toLowerCase();
                    return ['<div class="container-fluid inner-container">'].concat(t.filter(function(t) {
                        return -1 !== t.fillKey.toLowerCase().indexOf(e)
                    }).map(function(t) {
                        var n = l()(t.start_date).format("DD MMM"),
                            e = l()(t.end_date).format("DD MMM YY");
                        return '\n                        <div class="row">\n                            <div class="col-xs-12 col-md-6">\n                                <div class="row">\n                                    <div class="col-md-12">\n                                        <span>' + t.name.trim() + '</span>\n                                    </div>\n                                    <div class="col-md-12">\n                                        <span>' + n + " - " + e + '</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="col-xs-12 col-md-6">\n                                <a href="/fellowships/' + t.slug + '" class="btn btn-orange">Find out more</a>\n                            </div>\n                        </div>\n                       '
                    })).concat("</div>").join("")
                },
                placement: function(t) {
                    p()(t).addClass("bottom")
                },
                template: '\n            <div class="popover" role="tooltip">\n                <div class="arrow hidden-xs"></div>\n                <h4 class="popover-title"></h4>\n                <div class="popover-content"></div>\n            </div>\n        ',
                container: "#project-map",
                html: !0
            }), n.click(function(t) {
                var e = p()(t.currentTarget),
                    r = parseInt(e.attr("cx")),
                    o = parseInt(e.attr("cy")),
                    i = null;
                e.on("hidden.bs.popover", function() {
                    p()(".datamap").unbind("click")
                }).on("inserted.bs.popover", function() {
                    i = p()("#" + e.attr("aria-describedby")), i.addClass("map-popover"), i.css("display", "none")
                }).on("shown.bs.popover", function() {
                    var t = parseInt(i.css("width"));
                    window.innerWidth < 768 ? i.css({
                        top: "0px",
                        left: "0px",
                        display: "block"
                    }) : i.css({
                        top: o + 10 + "px",
                        left: r - t / 2 + "px",
                        display: "block"
                    }), p()(".datamap").click(function() {
                        n.popover("hide")
                    })
                }).popover("toggle")
            })
        },
        d = function(t) {
            return t.replace(/\b\w/g, function(t) {
                return t.toUpperCase()
            })
        },
        g = function(t) {
            a.a.get("/api/fellowships/trips").query({
                trip_type: "Fellowship"
            }).set({
                Accept: "application/json",
                "Content-Type": "application/json"
            }).then(function(n) {
                t(n.body)
            }, function(n) {
                422 !== n.status && window.Bugsnag && Bugsnag.notify("Load Project Trips Error", n.response.body), t([])
            })
        };
    n.a = f
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    "use strict";

    function r(t, n) {
        if (!(t instanceof n)) throw new TypeError("Cannot call a class as a function")
    }
    var o = e(135),
        i = e.n(o),
        a = function() {
            function t(t, n) {
                for (var e = 0; e < n.length; e++) {
                    var r = n[e];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            return function(n, e, r) {
                return e && t(n.prototype, e), r && t(n, r), n
            }
        }(),
        s = {
            GET: "GET",
            POST: "POST",
            PUT: "PUT",
            PATCH: "PATCH",
            DELETE: "DELETE"
        },
        u = function() {
            function t(n, e) {
                r(this, t), t.validateUrl(n), this.baseUrl = n, this.currency = e
            }
            return a(t, [{
                key: "getAllTrips",
                value: function() {
                    return this.call("/api/fellowships/trips", s.GET)
                }
            }, {
                key: "getAllTripsByFellowshipId",
                value: function(t) {
                    return this.call("/api/fellowships/" + t + "/trips", s.GET)
                }
            }, {
                key: "getExcursions",
                value: function(t) {
                    return this.call("/api/excursions/" + t, s.GET)
                }
            }, {
                key: "createLead",
                value: function(t) {
                    return this.call("/api/leads", s.POST, t)
                }
            }, {
                key: "createOpportunity",
                value: function(t) {
                    return this.call("/api/opportunities", s.POST, t)
                }
            }, {
                key: "convertLead",
                value: function(t, n) {
                    return this.call("/api/opportunities/lead/" + t, s.POST, n)
                }
            }, {
                key: "saveOpportunity",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        n = arguments[1],
                        e = t ? "/api/opportunities/save/" + t : "/api/opportunities/save";
                    return this.call(e, s.POST, n)
                }
            }, {
                key: "call",
                value: function(t, n) {
                    var e = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                        r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                        o = this.baseUrl + t.replace(/^\/+/g, "");
                    if (!s.hasOwnProperty(n)) throw new Error("Invalid method supplied");
                    var a = i()(n, o).set(Object.assign({}, r, {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        })),
                        u = Object.assign(n === s.GET ? e : {}, {
                            currency: this.currency
                        });
                    return a.query(u).send(e).then(function(t) {
                        return t.body
                    }).catch(this.handleError)
                }
            }, {
                key: "handleError",
                value: function(t) {
                    throw 422 !== t.status && Bugsnag.notify("Load Project Page Trips Error", t.response.body), t
                }
            }], [{
                key: "validateUrl",
                value: function(t) {
                    if (!t) throw new Error("Invalid URL supplied")
                }
            }]), t
        }(),
        l = new u(window.location.protocol + "//" + window.location.host + "/", window.LRTT_CURRENCY);
    n.a = l
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n, e) {
    var r, o;
    ! function() {
        function i(t) {
            return t && (t.ownerDocument || t.document || t).documentElement
        }

        function a(t) {
            return t && (t.ownerDocument && t.ownerDocument.defaultView || t.document && t || t.defaultView)
        }

        function s(t, n) {
            return t < n ? -1 : t > n ? 1 : t >= n ? 0 : NaN
        }

        function u(t) {
            return null === t ? NaN : +t
        }

        function l(t) {
            return !isNaN(t)
        }

        function c(t) {
            return {
                left: function(n, e, r, o) {
                    for (arguments.length < 3 && (r = 0), arguments.length < 4 && (o = n.length); r < o;) {
                        var i = r + o >>> 1;
                        t(n[i], e) < 0 ? r = i + 1 : o = i
                    }
                    return r
                },
                right: function(n, e, r, o) {
                    for (arguments.length < 3 && (r = 0), arguments.length < 4 && (o = n.length); r < o;) {
                        var i = r + o >>> 1;
                        t(n[i], e) > 0 ? o = i : r = i + 1
                    }
                    return r
                }
            }
        }

        function p(t) {
            return t.length
        }

        function f(t) {
            for (var n = 1; t * n % 1;) n *= 10;
            return n
        }

        function h(t, n) {
            for (var e in n) Object.defineProperty(t.prototype, e, {
                value: n[e],
                enumerable: !1
            })
        }

        function d() {
            this._ = Object.create(null)
        }

        function g(t) {
            return (t += "") === Sa || t[0] === Ma ? Ma + t : t
        }

        function v(t) {
            return (t += "")[0] === Ma ? t.slice(1) : t
        }

        function y(t) {
            return g(t) in this._
        }

        function m(t) {
            return (t = g(t)) in this._ && delete this._[t]
        }

        function _() {
            var t = [];
            for (var n in this._) t.push(v(n));
            return t
        }

        function b() {
            var t = 0;
            for (var n in this._) ++t;
            return t
        }

        function w() {
            for (var t in this._) return !1;
            return !0
        }

        function x() {
            this._ = Object.create(null)
        }

        function T(t) {
            return t
        }

        function S(t, n, e) {
            return function() {
                var r = e.apply(n, arguments);
                return r === n ? t : r
            }
        }

        function M(t, n) {
            if (n in t) return n;
            n = n.charAt(0).toUpperCase() + n.slice(1);
            for (var e = 0, r = ka.length; e < r; ++e) {
                var o = ka[e] + n;
                if (o in t) return o
            }
        }

        function k() {}

        function C() {}

        function A(t) {
            function n() {
                for (var n, r = e, o = -1, i = r.length; ++o < i;)(n = r[o].on) && n.apply(this, arguments);
                return t
            }
            var e = [],
                r = new d;
            return n.on = function(n, o) {
                var i, a = r.get(n);
                return arguments.length < 2 ? a && a.on : (a && (a.on = null, e = e.slice(0, i = e.indexOf(a)).concat(e.slice(i + 1)), r.remove(n)), o && e.push(r.set(n, {
                    on: o
                })), t)
            }, n
        }

        function P() {
            ha.event.preventDefault()
        }

        function E() {
            for (var t, n = ha.event; t = n.sourceEvent;) n = t;
            return n
        }

        function N(t) {
            for (var n = new C, e = 0, r = arguments.length; ++e < r;) n[arguments[e]] = A(n);
            return n.of = function(e, r) {
                return function(o) {
                    try {
                        var i = o.sourceEvent = ha.event;
                        o.target = t, ha.event = o, n[o.type].apply(e, r)
                    } finally {
                        ha.event = i
                    }
                }
            }, n
        }

        function O(t) {
            return Aa(t, Oa), t
        }

        function $(t) {
            return "function" == typeof t ? t : function() {
                return Pa(t, this)
            }
        }

        function L(t) {
            return "function" == typeof t ? t : function() {
                return Ea(t, this)
            }
        }

        function I(t, n) {
            function e() {
                this.removeAttribute(t)
            }

            function r() {
                this.removeAttributeNS(t.space, t.local)
            }

            function o() {
                this.setAttribute(t, n)
            }

            function i() {
                this.setAttributeNS(t.space, t.local, n)
            }

            function a() {
                var e = n.apply(this, arguments);
                null == e ? this.removeAttribute(t) : this.setAttribute(t, e)
            }

            function s() {
                var e = n.apply(this, arguments);
                null == e ? this.removeAttributeNS(t.space, t.local) : this.setAttributeNS(t.space, t.local, e)
            }
            return t = ha.ns.qualify(t), null == n ? t.local ? r : e : "function" == typeof n ? t.local ? s : a : t.local ? i : o
        }

        function R(t) {
            return t.trim().replace(/\s+/g, " ")
        }

        function D(t) {
            return new RegExp("(?:^|\\s+)" + ha.requote(t) + "(?:\\s+|$)", "g")
        }

        function F(t) {
            return (t + "").trim().split(/^|\s+/)
        }

        function j(t, n) {
            function e() {
                for (var e = -1; ++e < o;) t[e](this, n)
            }

            function r() {
                for (var e = -1, r = n.apply(this, arguments); ++e < o;) t[e](this, r)
            }
            t = F(t).map(U);
            var o = t.length;
            return "function" == typeof n ? r : e
        }

        function U(t) {
            var n = D(t);
            return function(e, r) {
                if (o = e.classList) return r ? o.add(t) : o.remove(t);
                var o = e.getAttribute("class") || "";
                r ? (n.lastIndex = 0, n.test(o) || e.setAttribute("class", R(o + " " + t))) : e.setAttribute("class", R(o.replace(n, " ")))
            }
        }

        function z(t, n, e) {
            function r() {
                this.style.removeProperty(t)
            }

            function o() {
                this.style.setProperty(t, n, e)
            }

            function i() {
                var r = n.apply(this, arguments);
                null == r ? this.style.removeProperty(t) : this.style.setProperty(t, r, e)
            }
            return null == n ? r : "function" == typeof n ? i : o
        }

        function H(t, n) {
            function e() {
                delete this[t]
            }

            function r() {
                this[t] = n
            }

            function o() {
                var e = n.apply(this, arguments);
                null == e ? delete this[t] : this[t] = e
            }
            return null == n ? e : "function" == typeof n ? o : r
        }

        function B(t) {
            function n() {
                var n = this.ownerDocument,
                    e = this.namespaceURI;
                return e === $a && n.documentElement.namespaceURI === $a ? n.createElement(t) : n.createElementNS(e, t)
            }

            function e() {
                return this.ownerDocument.createElementNS(t.space, t.local)
            }
            return "function" == typeof t ? t : (t = ha.ns.qualify(t)).local ? e : n
        }

        function W() {
            var t = this.parentNode;
            t && t.removeChild(this)
        }

        function G(t) {
            return {
                __data__: t
            }
        }

        function q(t) {
            return function() {
                return Na(this, t)
            }
        }

        function Y(t) {
            return arguments.length || (t = s),
                function(n, e) {
                    return n && e ? t(n.__data__, e.__data__) : !n - !e
                }
        }

        function V(t, n) {
            for (var e = 0, r = t.length; e < r; e++)
                for (var o, i = t[e], a = 0, s = i.length; a < s; a++)(o = i[a]) && n(o, a, e);
            return t
        }

        function K(t) {
            return Aa(t, Ia), t
        }

        function Z(t) {
            var n, e;
            return function(r, o, i) {
                var a, s = t[i].update,
                    u = s.length;
                for (i != e && (e = i, n = 0), o >= n && (n = o + 1); !(a = s[n]) && ++n < u;);
                return a
            }
        }

        function X(t, n, e) {
            function r() {
                var n = this[a];
                n && (this.removeEventListener(t, n, n.$), delete this[a])
            }

            function o() {
                var o = u(n, ga(arguments));
                r.call(this), this.addEventListener(t, this[a] = o, o.$ = e), o._ = n
            }

            function i() {
                var n, e = new RegExp("^__on([^.]+)" + ha.requote(t) + "$");
                for (var r in this)
                    if (n = r.match(e)) {
                        var o = this[r];
                        this.removeEventListener(n[1], o, o.$), delete this[r]
                    }
            }
            var a = "__on" + t,
                s = t.indexOf("."),
                u = J;
            s > 0 && (t = t.slice(0, s));
            var l = Ra.get(t);
            return l && (t = l, u = Q), s ? n ? o : r : n ? k : i
        }

        function J(t, n) {
            return function(e) {
                var r = ha.event;
                ha.event = e, n[0] = this.__data__;
                try {
                    t.apply(this, n)
                } finally {
                    ha.event = r
                }
            }
        }

        function Q(t, n) {
            var e = J(t, n);
            return function(t) {
                var n = this,
                    r = t.relatedTarget;
                r && (r === n || 8 & r.compareDocumentPosition(n)) || e.call(n, t)
            }
        }

        function tt(t) {
            var n = ".dragsuppress-" + ++Fa,
                e = "click" + n,
                r = ha.select(a(t)).on("touchmove" + n, P).on("dragstart" + n, P).on("selectstart" + n, P);
            if (null == Da && (Da = !("onselectstart" in t) && M(t.style, "userSelect")), Da) {
                var o = i(t).style,
                    s = o[Da];
                o[Da] = "none"
            }
            return function(t) {
                if (r.on(n, null), Da && (o[Da] = s), t) {
                    var i = function() {
                        r.on(e, null)
                    };
                    r.on(e, function() {
                        P(), i()
                    }, !0), setTimeout(i, 0)
                }
            }
        }

        function nt(t, n) {
            n.changedTouches && (n = n.changedTouches[0]);
            var e = t.ownerSVGElement || t;
            if (e.createSVGPoint) {
                var r = e.createSVGPoint();
                if (ja < 0) {
                    var o = a(t);
                    if (o.scrollX || o.scrollY) {
                        e = ha.select("body").append("svg").style({
                            position: "absolute",
                            top: 0,
                            left: 0,
                            margin: 0,
                            padding: 0,
                            border: "none"
                        }, "important");
                        var i = e[0][0].getScreenCTM();
                        ja = !(i.f || i.e), e.remove()
                    }
                }
                return ja ? (r.x = n.pageX, r.y = n.pageY) : (r.x = n.clientX, r.y = n.clientY), r = r.matrixTransform(t.getScreenCTM().inverse()), [r.x, r.y]
            }
            var s = t.getBoundingClientRect();
            return [n.clientX - s.left - t.clientLeft, n.clientY - s.top - t.clientTop]
        }

        function et() {
            return ha.event.changedTouches[0].identifier
        }

        function rt(t) {
            return t > 0 ? 1 : t < 0 ? -1 : 0
        }

        function ot(t, n, e) {
            return (n[0] - t[0]) * (e[1] - t[1]) - (n[1] - t[1]) * (e[0] - t[0])
        }

        function it(t) {
            return t > 1 ? 0 : t < -1 ? Ha : Math.acos(t)
        }

        function at(t) {
            return t > 1 ? Ga : t < -1 ? -Ga : Math.asin(t)
        }

        function st(t) {
            return ((t = Math.exp(t)) - 1 / t) / 2
        }

        function ut(t) {
            return ((t = Math.exp(t)) + 1 / t) / 2
        }

        function lt(t) {
            return ((t = Math.exp(2 * t)) - 1) / (t + 1)
        }

        function ct(t) {
            return (t = Math.sin(t / 2)) * t
        }

        function pt() {}

        function ft(t, n, e) {
            return this instanceof ft ? (this.h = +t, this.s = +n, void(this.l = +e)) : arguments.length < 2 ? t instanceof ft ? new ft(t.h, t.s, t.l) : kt("" + t, Ct, ft) : new ft(t, n, e)
        }

        function ht(t, n, e) {
            function r(t) {
                return t > 360 ? t -= 360 : t < 0 && (t += 360), t < 60 ? i + (a - i) * t / 60 : t < 180 ? a : t < 240 ? i + (a - i) * (240 - t) / 60 : i
            }

            function o(t) {
                return Math.round(255 * r(t))
            }
            var i, a;
            return t = isNaN(t) ? 0 : (t %= 360) < 0 ? t + 360 : t, n = isNaN(n) ? 0 : n < 0 ? 0 : n > 1 ? 1 : n, e = e < 0 ? 0 : e > 1 ? 1 : e, a = e <= .5 ? e * (1 + n) : e + n - e * n, i = 2 * e - a, new xt(o(t + 120), o(t), o(t - 120))
        }

        function dt(t, n, e) {
            return this instanceof dt ? (this.h = +t, this.c = +n, void(this.l = +e)) : arguments.length < 2 ? t instanceof dt ? new dt(t.h, t.c, t.l) : t instanceof vt ? mt(t.l, t.a, t.b) : mt((t = At((t = ha.rgb(t)).r, t.g, t.b)).l, t.a, t.b) : new dt(t, n, e)
        }

        function gt(t, n, e) {
            return isNaN(t) && (t = 0), isNaN(n) && (n = 0), new vt(e, Math.cos(t *= qa) * n, Math.sin(t) * n)
        }

        function vt(t, n, e) {
            return this instanceof vt ? (this.l = +t, this.a = +n, void(this.b = +e)) : arguments.length < 2 ? t instanceof vt ? new vt(t.l, t.a, t.b) : t instanceof dt ? gt(t.h, t.c, t.l) : At((t = xt(t)).r, t.g, t.b) : new vt(t, n, e)
        }

        function yt(t, n, e) {
            var r = (t + 16) / 116,
                o = r + n / 500,
                i = r - e / 200;
            return o = _t(o) * ns, r = _t(r) * es, i = _t(i) * rs, new xt(wt(3.2404542 * o - 1.5371385 * r - .4985314 * i), wt(-.969266 * o + 1.8760108 * r + .041556 * i), wt(.0556434 * o - .2040259 * r + 1.0572252 * i))
        }

        function mt(t, n, e) {
            return t > 0 ? new dt(Math.atan2(e, n) * Ya, Math.sqrt(n * n + e * e), t) : new dt(NaN, NaN, t)
        }

        function _t(t) {
            return t > .206893034 ? t * t * t : (t - 4 / 29) / 7.787037
        }

        function bt(t) {
            return t > .008856 ? Math.pow(t, 1 / 3) : 7.787037 * t + 4 / 29
        }

        function wt(t) {
            return Math.round(255 * (t <= .00304 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - .055))
        }

        function xt(t, n, e) {
            return this instanceof xt ? (this.r = ~~t, this.g = ~~n, void(this.b = ~~e)) : arguments.length < 2 ? t instanceof xt ? new xt(t.r, t.g, t.b) : kt("" + t, xt, ht) : new xt(t, n, e)
        }

        function Tt(t) {
            return new xt(t >> 16, t >> 8 & 255, 255 & t)
        }

        function St(t) {
            return Tt(t) + ""
        }

        function Mt(t) {
            return t < 16 ? "0" + Math.max(0, t).toString(16) : Math.min(255, t).toString(16)
        }

        function kt(t, n, e) {
            var r, o, i, a = 0,
                s = 0,
                u = 0;
            if (r = /([a-z]+)\((.*)\)/.exec(t = t.toLowerCase())) switch (o = r[2].split(","), r[1]) {
                case "hsl":
                    return e(parseFloat(o[0]), parseFloat(o[1]) / 100, parseFloat(o[2]) / 100);
                case "rgb":
                    return n(Et(o[0]), Et(o[1]), Et(o[2]))
            }
            return (i = as.get(t)) ? n(i.r, i.g, i.b) : (null == t || "#" !== t.charAt(0) || isNaN(i = parseInt(t.slice(1), 16)) || (4 === t.length ? (a = (3840 & i) >> 4, a |= a >> 4, s = 240 & i, s |= s >> 4, u = 15 & i, u |= u << 4) : 7 === t.length && (a = (16711680 & i) >> 16, s = (65280 & i) >> 8, u = 255 & i)), n(a, s, u))
        }

        function Ct(t, n, e) {
            var r, o, i = Math.min(t /= 255, n /= 255, e /= 255),
                a = Math.max(t, n, e),
                s = a - i,
                u = (a + i) / 2;
            return s ? (o = u < .5 ? s / (a + i) : s / (2 - a - i), r = t == a ? (n - e) / s + (n < e ? 6 : 0) : n == a ? (e - t) / s + 2 : (t - n) / s + 4, r *= 60) : (r = NaN, o = u > 0 && u < 1 ? 0 : r), new ft(r, o, u)
        }

        function At(t, n, e) {
            t = Pt(t), n = Pt(n), e = Pt(e);
            var r = bt((.4124564 * t + .3575761 * n + .1804375 * e) / ns),
                o = bt((.2126729 * t + .7151522 * n + .072175 * e) / es);
            return vt(116 * o - 16, 500 * (r - o), 200 * (o - bt((.0193339 * t + .119192 * n + .9503041 * e) / rs)))
        }

        function Pt(t) {
            return (t /= 255) <= .04045 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4)
        }

        function Et(t) {
            var n = parseFloat(t);
            return "%" === t.charAt(t.length - 1) ? Math.round(2.55 * n) : n
        }

        function Nt(t) {
            return "function" == typeof t ? t : function() {
                return t
            }
        }

        function Ot(t) {
            return function(n, e, r) {
                return 2 === arguments.length && "function" == typeof e && (r = e, e = null), $t(n, e, t, r)
            }
        }

        function $t(t, n, e, r) {
            function o() {
                var t, n = u.status;
                if (!n && It(u) || n >= 200 && n < 300 || 304 === n) {
                    try {
                        t = e.call(i, u)
                    } catch (t) {
                        return void a.error.call(i, t)
                    }
                    a.load.call(i, t)
                } else a.error.call(i, u)
            }
            var i = {},
                a = ha.dispatch("beforesend", "progress", "load", "error"),
                s = {},
                u = new XMLHttpRequest,
                l = null;
            return !this.XDomainRequest || "withCredentials" in u || !/^(http(s)?:)?\/\//.test(t) || (u = new XDomainRequest), "onload" in u ? u.onload = u.onerror = o : u.onreadystatechange = function() {
                u.readyState > 3 && o()
            }, u.onprogress = function(t) {
                var n = ha.event;
                ha.event = t;
                try {
                    a.progress.call(i, u)
                } finally {
                    ha.event = n
                }
            }, i.header = function(t, n) {
                return t = (t + "").toLowerCase(), arguments.length < 2 ? s[t] : (null == n ? delete s[t] : s[t] = n + "", i)
            }, i.mimeType = function(t) {
                return arguments.length ? (n = null == t ? null : t + "", i) : n
            }, i.responseType = function(t) {
                return arguments.length ? (l = t, i) : l
            }, i.response = function(t) {
                return e = t, i
            }, ["get", "post"].forEach(function(t) {
                i[t] = function() {
                    return i.send.apply(i, [t].concat(ga(arguments)))
                }
            }), i.send = function(e, r, o) {
                if (2 === arguments.length && "function" == typeof r && (o = r, r = null), u.open(e, t, !0), null == n || "accept" in s || (s.accept = n + ",*/*"), u.setRequestHeader)
                    for (var c in s) u.setRequestHeader(c, s[c]);
                return null != n && u.overrideMimeType && u.overrideMimeType(n), null != l && (u.responseType = l), null != o && i.on("error", o).on("load", function(t) {
                    o(null, t)
                }), a.beforesend.call(i, u), u.send(null == r ? null : r), i
            }, i.abort = function() {
                return u.abort(), i
            }, ha.rebind(i, a, "on"), null == r ? i : i.get(Lt(r))
        }

        function Lt(t) {
            return 1 === t.length ? function(n, e) {
                t(null == n ? e : null)
            } : t
        }

        function It(t) {
            var n = t.responseType;
            return n && "text" !== n ? t.response : t.responseText
        }

        function Rt(t, n, e) {
            var r = arguments.length;
            r < 2 && (n = 0), r < 3 && (e = Date.now());
            var o = e + n,
                i = {
                    c: t,
                    t: o,
                    n: null
                };
            return us ? us.n = i : ss = i, us = i, ls || (cs = clearTimeout(cs), ls = 1, ps(Dt)), i
        }

        function Dt() {
            var t = Ft(),
                n = jt() - t;
            n > 24 ? (isFinite(n) && (clearTimeout(cs), cs = setTimeout(Dt, n)), ls = 0) : (ls = 1, ps(Dt))
        }

        function Ft() {
            for (var t = Date.now(), n = ss; n;) t >= n.t && n.c(t - n.t) && (n.c = null), n = n.n;
            return t
        }

        function jt() {
            for (var t, n = ss, e = 1 / 0; n;) n.c ? (n.t < e && (e = n.t), n = (t = n).n) : n = t ? t.n = n.n : ss = n.n;
            return us = t, e
        }

        function Ut(t, n) {
            return n - (t ? Math.ceil(Math.log(t) / Math.LN10) : 1)
        }

        function zt(t, n) {
            var e = Math.pow(10, 3 * Ta(8 - n));
            return {
                scale: n > 8 ? function(t) {
                    return t / e
                } : function(t) {
                    return t * e
                },
                symbol: t
            }
        }

        function Ht(t) {
            var n = t.decimal,
                e = t.thousands,
                r = t.grouping,
                o = t.currency,
                i = r && e ? function(t, n) {
                    for (var o = t.length, i = [], a = 0, s = r[0], u = 0; o > 0 && s > 0 && (u + s + 1 > n && (s = Math.max(1, n - u)), i.push(t.substring(o -= s, o + s)), !((u += s + 1) > n));) s = r[a = (a + 1) % r.length];
                    return i.reverse().join(e)
                } : T;
            return function(t) {
                var e = hs.exec(t),
                    r = e[1] || " ",
                    a = e[2] || ">",
                    s = e[3] || "-",
                    u = e[4] || "",
                    l = e[5],
                    c = +e[6],
                    p = e[7],
                    f = e[8],
                    h = e[9],
                    d = 1,
                    g = "",
                    v = "",
                    y = !1,
                    m = !0;
                switch (f && (f = +f.substring(1)), (l || "0" === r && "=" === a) && (l = r = "0", a = "="), h) {
                    case "n":
                        p = !0, h = "g";
                        break;
                    case "%":
                        d = 100, v = "%", h = "f";
                        break;
                    case "p":
                        d = 100, v = "%", h = "r";
                        break;
                    case "b":
                    case "o":
                    case "x":
                    case "X":
                        "#" === u && (g = "0" + h.toLowerCase());
                    case "c":
                        m = !1;
                    case "d":
                        y = !0, f = 0;
                        break;
                    case "s":
                        d = -1, h = "r"
                }
                "$" === u && (g = o[0], v = o[1]), "r" != h || f || (h = "g"), null != f && ("g" == h ? f = Math.max(1, Math.min(21, f)) : "e" != h && "f" != h || (f = Math.max(0, Math.min(20, f)))), h = ds.get(h) || Bt;
                var _ = l && p;
                return function(t) {
                    var e = v;
                    if (y && t % 1) return "";
                    var o = t < 0 || 0 === t && 1 / t < 0 ? (t = -t, "-") : "-" === s ? "" : s;
                    if (d < 0) {
                        var u = ha.formatPrefix(t, f);
                        t = u.scale(t), e = u.symbol + v
                    } else t *= d;
                    t = h(t, f);
                    var b, w, x = t.lastIndexOf(".");
                    if (x < 0) {
                        var T = m ? t.lastIndexOf("e") : -1;
                        T < 0 ? (b = t, w = "") : (b = t.substring(0, T), w = t.substring(T))
                    } else b = t.substring(0, x), w = n + t.substring(x + 1);
                    !l && p && (b = i(b, 1 / 0));
                    var S = g.length + b.length + w.length + (_ ? 0 : o.length),
                        M = S < c ? new Array(S = c - S + 1).join(r) : "";
                    return _ && (b = i(M + b, M.length ? c - w.length : 1 / 0)), o += g, t = b + w, ("<" === a ? o + t + M : ">" === a ? M + o + t : "^" === a ? M.substring(0, S >>= 1) + o + t + M.substring(S) : o + (_ ? t : M + t)) + e
                }
            }
        }

        function Bt(t) {
            return t + ""
        }

        function Wt() {
            this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0])
        }

        function Gt(t, n, e) {
            function r(n) {
                var e = t(n),
                    r = i(e, 1);
                return n - e < r - n ? e : r
            }

            function o(e) {
                return n(e = t(new vs(e - 1)), 1), e
            }

            function i(t, e) {
                return n(t = new vs(+t), e), t
            }

            function a(t, r, i) {
                var a = o(t),
                    s = [];
                if (i > 1)
                    for (; a < r;) e(a) % i || s.push(new Date(+a)), n(a, 1);
                else
                    for (; a < r;) s.push(new Date(+a)), n(a, 1);
                return s
            }

            function s(t, n, e) {
                try {
                    vs = Wt;
                    var r = new Wt;
                    return r._ = t, a(r, n, e)
                } finally {
                    vs = Date
                }
            }
            t.floor = t, t.round = r, t.ceil = o, t.offset = i, t.range = a;
            var u = t.utc = qt(t);
            return u.floor = u, u.round = qt(r), u.ceil = qt(o), u.offset = qt(i), u.range = s, t
        }

        function qt(t) {
            return function(n, e) {
                try {
                    vs = Wt;
                    var r = new Wt;
                    return r._ = n, t(r, e)._
                } finally {
                    vs = Date
                }
            }
        }

        function Yt(t) {
            function n(t) {
                function n(n) {
                    for (var e, o, i, a = [], s = -1, u = 0; ++s < r;) 37 === t.charCodeAt(s) && (a.push(t.slice(u, s)), null != (o = ms[e = t.charAt(++s)]) && (e = t.charAt(++s)), (i = A[e]) && (e = i(n, null == o ? "e" === e ? " " : "0" : o)), a.push(e), u = s + 1);
                    return a.push(t.slice(u, s)), a.join("")
                }
                var r = t.length;
                return n.parse = function(n) {
                    var r = {
                        y: 1900,
                        m: 0,
                        d: 1,
                        H: 0,
                        M: 0,
                        S: 0,
                        L: 0,
                        Z: null
                    };
                    if (e(r, t, n, 0) != n.length) return null;
                    "p" in r && (r.H = r.H % 12 + 12 * r.p);
                    var o = null != r.Z && vs !== Wt,
                        i = new(o ? Wt : vs);
                    return "j" in r ? i.setFullYear(r.y, 0, r.j) : "W" in r || "U" in r ? ("w" in r || (r.w = "W" in r ? 1 : 0), i.setFullYear(r.y, 0, 1), i.setFullYear(r.y, 0, "W" in r ? (r.w + 6) % 7 + 7 * r.W - (i.getDay() + 5) % 7 : r.w + 7 * r.U - (i.getDay() + 6) % 7)) : i.setFullYear(r.y, r.m, r.d), i.setHours(r.H + (r.Z / 100 | 0), r.M + r.Z % 100, r.S, r.L), o ? i._ : i
                }, n.toString = function() {
                    return t
                }, n
            }

            function e(t, n, e, r) {
                for (var o, i, a, s = 0, u = n.length, l = e.length; s < u;) {
                    if (r >= l) return -1;
                    if (37 === (o = n.charCodeAt(s++))) {
                        if (a = n.charAt(s++), !(i = P[a in ms ? n.charAt(s++) : a]) || (r = i(t, e, r)) < 0) return -1
                    } else if (o != e.charCodeAt(r++)) return -1
                }
                return r
            }

            function r(t, n, e) {
                x.lastIndex = 0;
                var r = x.exec(n.slice(e));
                return r ? (t.w = T.get(r[0].toLowerCase()), e + r[0].length) : -1
            }

            function o(t, n, e) {
                b.lastIndex = 0;
                var r = b.exec(n.slice(e));
                return r ? (t.w = w.get(r[0].toLowerCase()), e + r[0].length) : -1
            }

            function i(t, n, e) {
                k.lastIndex = 0;
                var r = k.exec(n.slice(e));
                return r ? (t.m = C.get(r[0].toLowerCase()), e + r[0].length) : -1
            }

            function a(t, n, e) {
                S.lastIndex = 0;
                var r = S.exec(n.slice(e));
                return r ? (t.m = M.get(r[0].toLowerCase()), e + r[0].length) : -1
            }

            function s(t, n, r) {
                return e(t, A.c.toString(), n, r)
            }

            function u(t, n, r) {
                return e(t, A.x.toString(), n, r)
            }

            function l(t, n, r) {
                return e(t, A.X.toString(), n, r)
            }

            function c(t, n, e) {
                var r = _.get(n.slice(e, e += 2).toLowerCase());
                return null == r ? -1 : (t.p = r, e)
            }
            var p = t.dateTime,
                f = t.date,
                h = t.time,
                d = t.periods,
                g = t.days,
                v = t.shortDays,
                y = t.months,
                m = t.shortMonths;
            n.utc = function(t) {
                function e(t) {
                    try {
                        vs = Wt;
                        var n = new vs;
                        return n._ = t, r(n)
                    } finally {
                        vs = Date
                    }
                }
                var r = n(t);
                return e.parse = function(t) {
                    try {
                        vs = Wt;
                        var n = r.parse(t);
                        return n && n._
                    } finally {
                        vs = Date
                    }
                }, e.toString = r.toString, e
            }, n.multi = n.utc.multi = dn;
            var _ = ha.map(),
                b = Kt(g),
                w = Zt(g),
                x = Kt(v),
                T = Zt(v),
                S = Kt(y),
                M = Zt(y),
                k = Kt(m),
                C = Zt(m);
            d.forEach(function(t, n) {
                _.set(t.toLowerCase(), n)
            });
            var A = {
                    a: function(t) {
                        return v[t.getDay()]
                    },
                    A: function(t) {
                        return g[t.getDay()]
                    },
                    b: function(t) {
                        return m[t.getMonth()]
                    },
                    B: function(t) {
                        return y[t.getMonth()]
                    },
                    c: n(p),
                    d: function(t, n) {
                        return Vt(t.getDate(), n, 2)
                    },
                    e: function(t, n) {
                        return Vt(t.getDate(), n, 2)
                    },
                    H: function(t, n) {
                        return Vt(t.getHours(), n, 2)
                    },
                    I: function(t, n) {
                        return Vt(t.getHours() % 12 || 12, n, 2)
                    },
                    j: function(t, n) {
                        return Vt(1 + gs.dayOfYear(t), n, 3)
                    },
                    L: function(t, n) {
                        return Vt(t.getMilliseconds(), n, 3)
                    },
                    m: function(t, n) {
                        return Vt(t.getMonth() + 1, n, 2)
                    },
                    M: function(t, n) {
                        return Vt(t.getMinutes(), n, 2)
                    },
                    p: function(t) {
                        return d[+(t.getHours() >= 12)]
                    },
                    S: function(t, n) {
                        return Vt(t.getSeconds(), n, 2)
                    },
                    U: function(t, n) {
                        return Vt(gs.sundayOfYear(t), n, 2)
                    },
                    w: function(t) {
                        return t.getDay()
                    },
                    W: function(t, n) {
                        return Vt(gs.mondayOfYear(t), n, 2)
                    },
                    x: n(f),
                    X: n(h),
                    y: function(t, n) {
                        return Vt(t.getFullYear() % 100, n, 2)
                    },
                    Y: function(t, n) {
                        return Vt(t.getFullYear() % 1e4, n, 4)
                    },
                    Z: fn,
                    "%": function() {
                        return "%"
                    }
                },
                P = {
                    a: r,
                    A: o,
                    b: i,
                    B: a,
                    c: s,
                    d: an,
                    e: an,
                    H: un,
                    I: un,
                    j: sn,
                    L: pn,
                    m: on,
                    M: ln,
                    p: c,
                    S: cn,
                    U: Jt,
                    w: Xt,
                    W: Qt,
                    x: u,
                    X: l,
                    y: nn,
                    Y: tn,
                    Z: en,
                    "%": hn
                };
            return n
        }

        function Vt(t, n, e) {
            var r = t < 0 ? "-" : "",
                o = (r ? -t : t) + "",
                i = o.length;
            return r + (i < e ? new Array(e - i + 1).join(n) + o : o)
        }

        function Kt(t) {
            return new RegExp("^(?:" + t.map(ha.requote).join("|") + ")", "i")
        }

        function Zt(t) {
            for (var n = new d, e = -1, r = t.length; ++e < r;) n.set(t[e].toLowerCase(), e);
            return n
        }

        function Xt(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 1));
            return r ? (t.w = +r[0], e + r[0].length) : -1
        }

        function Jt(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e));
            return r ? (t.U = +r[0], e + r[0].length) : -1
        }

        function Qt(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e));
            return r ? (t.W = +r[0], e + r[0].length) : -1
        }

        function tn(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 4));
            return r ? (t.y = +r[0], e + r[0].length) : -1
        }

        function nn(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 2));
            return r ? (t.y = rn(+r[0]), e + r[0].length) : -1
        }

        function en(t, n, e) {
            return /^[+-]\d{4}$/.test(n = n.slice(e, e + 5)) ? (t.Z = -n, e + 5) : -1
        }

        function rn(t) {
            return t + (t > 68 ? 1900 : 2e3)
        }

        function on(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 2));
            return r ? (t.m = r[0] - 1, e + r[0].length) : -1
        }

        function an(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 2));
            return r ? (t.d = +r[0], e + r[0].length) : -1
        }

        function sn(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 3));
            return r ? (t.j = +r[0], e + r[0].length) : -1
        }

        function un(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 2));
            return r ? (t.H = +r[0], e + r[0].length) : -1
        }

        function ln(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 2));
            return r ? (t.M = +r[0], e + r[0].length) : -1
        }

        function cn(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 2));
            return r ? (t.S = +r[0], e + r[0].length) : -1
        }

        function pn(t, n, e) {
            _s.lastIndex = 0;
            var r = _s.exec(n.slice(e, e + 3));
            return r ? (t.L = +r[0], e + r[0].length) : -1
        }

        function fn(t) {
            var n = t.getTimezoneOffset(),
                e = n > 0 ? "-" : "+",
                r = Ta(n) / 60 | 0,
                o = Ta(n) % 60;
            return e + Vt(r, "0", 2) + Vt(o, "0", 2)
        }

        function hn(t, n, e) {
            bs.lastIndex = 0;
            var r = bs.exec(n.slice(e, e + 1));
            return r ? e + r[0].length : -1
        }

        function dn(t) {
            for (var n = t.length, e = -1; ++e < n;) t[e][0] = this(t[e][0]);
            return function(n) {
                for (var e = 0, r = t[e]; !r[1](n);) r = t[++e];
                return r[0](n)
            }
        }

        function gn() {}

        function vn(t, n, e) {
            var r = e.s = t + n,
                o = r - t,
                i = r - o;
            e.t = t - i + (n - o)
        }

        function yn(t, n) {
            t && Ss.hasOwnProperty(t.type) && Ss[t.type](t, n)
        }

        function mn(t, n, e) {
            var r, o = -1,
                i = t.length - e;
            for (n.lineStart(); ++o < i;) r = t[o], n.point(r[0], r[1], r[2]);
            n.lineEnd()
        }

        function _n(t, n) {
            var e = -1,
                r = t.length;
            for (n.polygonStart(); ++e < r;) mn(t[e], n, 1);
            n.polygonEnd()
        }

        function bn() {
            function t(t, n) {
                t *= qa, n = n * qa / 2 + Ha / 4;
                var e = t - r,
                    a = e >= 0 ? 1 : -1,
                    s = a * e,
                    u = Math.cos(n),
                    l = Math.sin(n),
                    c = i * l,
                    p = o * u + c * Math.cos(s),
                    f = c * a * Math.sin(s);
                ks.add(Math.atan2(f, p)), r = t, o = u, i = l
            }
            var n, e, r, o, i;
            Cs.point = function(a, s) {
                Cs.point = t, r = (n = a) * qa, o = Math.cos(s = (e = s) * qa / 2 + Ha / 4), i = Math.sin(s)
            }, Cs.lineEnd = function() {
                t(n, e)
            }
        }

        function wn(t) {
            var n = t[0],
                e = t[1],
                r = Math.cos(e);
            return [r * Math.cos(n), r * Math.sin(n), Math.sin(e)]
        }

        function xn(t, n) {
            return t[0] * n[0] + t[1] * n[1] + t[2] * n[2]
        }

        function Tn(t, n) {
            return [t[1] * n[2] - t[2] * n[1], t[2] * n[0] - t[0] * n[2], t[0] * n[1] - t[1] * n[0]]
        }

        function Sn(t, n) {
            t[0] += n[0], t[1] += n[1], t[2] += n[2]
        }

        function Mn(t, n) {
            return [t[0] * n, t[1] * n, t[2] * n]
        }

        function kn(t) {
            var n = Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);
            t[0] /= n, t[1] /= n, t[2] /= n
        }

        function Cn(t) {
            return [Math.atan2(t[1], t[0]), at(t[2])]
        }

        function An(t, n) {
            return Ta(t[0] - n[0]) < Ua && Ta(t[1] - n[1]) < Ua
        }

        function Pn(t, n) {
            t *= qa;
            var e = Math.cos(n *= qa);
            En(e * Math.cos(t), e * Math.sin(t), Math.sin(n))
        }

        function En(t, n, e) {
            ++As, Es += (t - Es) / As, Ns += (n - Ns) / As, Os += (e - Os) / As
        }

        function Nn() {
            function t(t, o) {
                t *= qa;
                var i = Math.cos(o *= qa),
                    a = i * Math.cos(t),
                    s = i * Math.sin(t),
                    u = Math.sin(o),
                    l = Math.atan2(Math.sqrt((l = e * u - r * s) * l + (l = r * a - n * u) * l + (l = n * s - e * a) * l), n * a + e * s + r * u);
                Ps += l, $s += l * (n + (n = a)), Ls += l * (e + (e = s)), Is += l * (r + (r = u)), En(n, e, r)
            }
            var n, e, r;
            js.point = function(o, i) {
                o *= qa;
                var a = Math.cos(i *= qa);
                n = a * Math.cos(o), e = a * Math.sin(o), r = Math.sin(i), js.point = t, En(n, e, r)
            }
        }

        function On() {
            js.point = Pn
        }

        function $n() {
            function t(t, n) {
                t *= qa;
                var e = Math.cos(n *= qa),
                    a = e * Math.cos(t),
                    s = e * Math.sin(t),
                    u = Math.sin(n),
                    l = o * u - i * s,
                    c = i * a - r * u,
                    p = r * s - o * a,
                    f = Math.sqrt(l * l + c * c + p * p),
                    h = r * a + o * s + i * u,
                    d = f && -it(h) / f,
                    g = Math.atan2(f, h);
                Rs += d * l, Ds += d * c, Fs += d * p, Ps += g, $s += g * (r + (r = a)), Ls += g * (o + (o = s)), Is += g * (i + (i = u)), En(r, o, i)
            }
            var n, e, r, o, i;
            js.point = function(a, s) {
                n = a, e = s, js.point = t, a *= qa;
                var u = Math.cos(s *= qa);
                r = u * Math.cos(a), o = u * Math.sin(a), i = Math.sin(s), En(r, o, i)
            }, js.lineEnd = function() {
                t(n, e), js.lineEnd = On, js.point = Pn
            }
        }

        function Ln(t, n) {
            function e(e, r) {
                return e = t(e, r), n(e[0], e[1])
            }
            return t.invert && n.invert && (e.invert = function(e, r) {
                return (e = n.invert(e, r)) && t.invert(e[0], e[1])
            }), e
        }

        function In() {
            return !0
        }

        function Rn(t, n, e, r, o) {
            var i = [],
                a = [];
            if (t.forEach(function(t) {
                    if (!((n = t.length - 1) <= 0)) {
                        var n, e = t[0],
                            r = t[n];
                        if (An(e, r)) {
                            o.lineStart();
                            for (var s = 0; s < n; ++s) o.point((e = t[s])[0], e[1]);
                            return void o.lineEnd()
                        }
                        var u = new Fn(e, t, null, !0),
                            l = new Fn(e, null, u, !1);
                        u.o = l, i.push(u), a.push(l), u = new Fn(r, t, null, !1), l = new Fn(r, null, u, !0), u.o = l, i.push(u), a.push(l)
                    }
                }), a.sort(n), Dn(i), Dn(a), i.length) {
                for (var s = 0, u = e, l = a.length; s < l; ++s) a[s].e = u = !u;
                for (var c, p, f = i[0];;) {
                    for (var h = f, d = !0; h.v;)
                        if ((h = h.n) === f) return;
                    c = h.z, o.lineStart();
                    do {
                        if (h.v = h.o.v = !0, h.e) {
                            if (d)
                                for (var s = 0, l = c.length; s < l; ++s) o.point((p = c[s])[0], p[1]);
                            else r(h.x, h.n.x, 1, o);
                            h = h.n
                        } else {
                            if (d) {
                                c = h.p.z;
                                for (var s = c.length - 1; s >= 0; --s) o.point((p = c[s])[0], p[1])
                            } else r(h.x, h.p.x, -1, o);
                            h = h.p
                        }
                        h = h.o, c = h.z, d = !d
                    } while (!h.v);
                    o.lineEnd()
                }
            }
        }

        function Dn(t) {
            if (n = t.length) {
                for (var n, e, r = 0, o = t[0]; ++r < n;) o.n = e = t[r], e.p = o, o = e;
                o.n = e = t[0], e.p = o
            }
        }

        function Fn(t, n, e, r) {
            this.x = t, this.z = n, this.o = e, this.e = r, this.v = !1, this.n = this.p = null
        }

        function jn(t, n, e, r) {
            return function(o, i) {
                function a(n, e) {
                    var r = o(n, e);
                    t(n = r[0], e = r[1]) && i.point(n, e)
                }

                function s(t, n) {
                    var e = o(t, n);
                    v.point(e[0], e[1])
                }

                function u() {
                    m.point = s, v.lineStart()
                }

                function l() {
                    m.point = a, v.lineEnd()
                }

                function c(t, n) {
                    g.push([t, n]);
                    var e = o(t, n);
                    b.point(e[0], e[1])
                }

                function p() {
                    b.lineStart(), g = []
                }

                function f() {
                    c(g[0][0], g[0][1]), b.lineEnd();
                    var t, n = b.clean(),
                        e = _.buffer(),
                        r = e.length;
                    if (g.pop(), d.push(g), g = null, r)
                        if (1 & n) {
                            t = e[0];
                            var o, r = t.length - 1,
                                a = -1;
                            if (r > 0) {
                                for (w || (i.polygonStart(), w = !0), i.lineStart(); ++a < r;) i.point((o = t[a])[0], o[1]);
                                i.lineEnd()
                            }
                        } else r > 1 && 2 & n && e.push(e.pop().concat(e.shift())), h.push(e.filter(Un))
                }
                var h, d, g, v = n(i),
                    y = o.invert(r[0], r[1]),
                    m = {
                        point: a,
                        lineStart: u,
                        lineEnd: l,
                        polygonStart: function() {
                            m.point = c, m.lineStart = p, m.lineEnd = f, h = [], d = []
                        },
                        polygonEnd: function() {
                            m.point = a, m.lineStart = u, m.lineEnd = l, h = ha.merge(h);
                            var t = qn(y, d);
                            h.length ? (w || (i.polygonStart(), w = !0), Rn(h, Hn, t, e, i)) : t && (w || (i.polygonStart(), w = !0), i.lineStart(), e(null, null, 1, i), i.lineEnd()), w && (i.polygonEnd(), w = !1), h = d = null
                        },
                        sphere: function() {
                            i.polygonStart(), i.lineStart(), e(null, null, 1, i), i.lineEnd(), i.polygonEnd()
                        }
                    },
                    _ = zn(),
                    b = n(_),
                    w = !1;
                return m
            }
        }

        function Un(t) {
            return t.length > 1
        }

        function zn() {
            var t, n = [];
            return {
                lineStart: function() {
                    n.push(t = [])
                },
                point: function(n, e) {
                    t.push([n, e])
                },
                lineEnd: k,
                buffer: function() {
                    var e = n;
                    return n = [], t = null, e
                },
                rejoin: function() {
                    n.length > 1 && n.push(n.pop().concat(n.shift()))
                }
            }
        }

        function Hn(t, n) {
            return ((t = t.x)[0] < 0 ? t[1] - Ga - Ua : Ga - t[1]) - ((n = n.x)[0] < 0 ? n[1] - Ga - Ua : Ga - n[1])
        }

        function Bn(t) {
            var n, e = NaN,
                r = NaN,
                o = NaN;
            return {
                lineStart: function() {
                    t.lineStart(), n = 1
                },
                point: function(i, a) {
                    var s = i > 0 ? Ha : -Ha,
                        u = Ta(i - e);
                    Ta(u - Ha) < Ua ? (t.point(e, r = (r + a) / 2 > 0 ? Ga : -Ga), t.point(o, r), t.lineEnd(), t.lineStart(), t.point(s, r), t.point(i, r), n = 0) : o !== s && u >= Ha && (Ta(e - o) < Ua && (e -= o * Ua), Ta(i - s) < Ua && (i -= s * Ua), r = Wn(e, r, i, a), t.point(o, r), t.lineEnd(), t.lineStart(), t.point(s, r), n = 0), t.point(e = i, r = a), o = s
                },
                lineEnd: function() {
                    t.lineEnd(), e = r = NaN
                },
                clean: function() {
                    return 2 - n
                }
            }
        }

        function Wn(t, n, e, r) {
            var o, i, a = Math.sin(t - e);
            return Ta(a) > Ua ? Math.atan((Math.sin(n) * (i = Math.cos(r)) * Math.sin(e) - Math.sin(r) * (o = Math.cos(n)) * Math.sin(t)) / (o * i * a)) : (n + r) / 2
        }

        function Gn(t, n, e, r) {
            var o;
            if (null == t) o = e * Ga, r.point(-Ha, o), r.point(0, o), r.point(Ha, o), r.point(Ha, 0), r.point(Ha, -o), r.point(0, -o), r.point(-Ha, -o), r.point(-Ha, 0), r.point(-Ha, o);
            else if (Ta(t[0] - n[0]) > Ua) {
                var i = t[0] < n[0] ? Ha : -Ha;
                o = e * i / 2, r.point(-i, o), r.point(0, o), r.point(i, o)
            } else r.point(n[0], n[1])
        }

        function qn(t, n) {
            var e = t[0],
                r = t[1],
                o = [Math.sin(e), -Math.cos(e), 0],
                i = 0,
                a = 0;
            ks.reset();
            for (var s = 0, u = n.length; s < u; ++s) {
                var l = n[s],
                    c = l.length;
                if (c)
                    for (var p = l[0], f = p[0], h = p[1] / 2 + Ha / 4, d = Math.sin(h), g = Math.cos(h), v = 1;;) {
                        v === c && (v = 0), t = l[v];
                        var y = t[0],
                            m = t[1] / 2 + Ha / 4,
                            _ = Math.sin(m),
                            b = Math.cos(m),
                            w = y - f,
                            x = w >= 0 ? 1 : -1,
                            T = x * w,
                            S = T > Ha,
                            M = d * _;
                        if (ks.add(Math.atan2(M * x * Math.sin(T), g * b + M * Math.cos(T))), i += S ? w + x * Ba : w, S ^ f >= e ^ y >= e) {
                            var k = Tn(wn(p), wn(t));
                            kn(k);
                            var C = Tn(o, k);
                            kn(C);
                            var A = (S ^ w >= 0 ? -1 : 1) * at(C[2]);
                            (r > A || r === A && (k[0] || k[1])) && (a += S ^ w >= 0 ? 1 : -1)
                        }
                        if (!v++) break;
                        f = y, d = _, g = b, p = t
                    }
            }
            return (i < -Ua || i < Ua && ks < -Ua) ^ 1 & a
        }

        function Yn(t) {
            function n(t, n) {
                return Math.cos(t) * Math.cos(n) > i
            }

            function e(t) {
                var e, i, u, l, c;
                return {
                    lineStart: function() {
                        l = u = !1, c = 1
                    },
                    point: function(p, f) {
                        var h, d = [p, f],
                            g = n(p, f),
                            v = a ? g ? 0 : o(p, f) : g ? o(p + (p < 0 ? Ha : -Ha), f) : 0;
                        if (!e && (l = u = g) && t.lineStart(), g !== u && (h = r(e, d), (An(e, h) || An(d, h)) && (d[0] += Ua, d[1] += Ua, g = n(d[0], d[1]))), g !== u) c = 0, g ? (t.lineStart(), h = r(d, e), t.point(h[0], h[1])) : (h = r(e, d), t.point(h[0], h[1]), t.lineEnd()), e = h;
                        else if (s && e && a ^ g) {
                            var y;
                            v & i || !(y = r(d, e, !0)) || (c = 0, a ? (t.lineStart(), t.point(y[0][0], y[0][1]), t.point(y[1][0], y[1][1]), t.lineEnd()) : (t.point(y[1][0], y[1][1]), t.lineEnd(), t.lineStart(), t.point(y[0][0], y[0][1])))
                        }!g || e && An(e, d) || t.point(d[0], d[1]), e = d, u = g, i = v
                    },
                    lineEnd: function() {
                        u && t.lineEnd(), e = null
                    },
                    clean: function() {
                        return c | (l && u) << 1
                    }
                }
            }

            function r(t, n, e) {
                var r = wn(t),
                    o = wn(n),
                    a = [1, 0, 0],
                    s = Tn(r, o),
                    u = xn(s, s),
                    l = s[0],
                    c = u - l * l;
                if (!c) return !e && t;
                var p = i * u / c,
                    f = -i * l / c,
                    h = Tn(a, s),
                    d = Mn(a, p);
                Sn(d, Mn(s, f));
                var g = h,
                    v = xn(d, g),
                    y = xn(g, g),
                    m = v * v - y * (xn(d, d) - 1);
                if (!(m < 0)) {
                    var _ = Math.sqrt(m),
                        b = Mn(g, (-v - _) / y);
                    if (Sn(b, d), b = Cn(b), !e) return b;
                    var w, x = t[0],
                        T = n[0],
                        S = t[1],
                        M = n[1];
                    T < x && (w = x, x = T, T = w);
                    var k = T - x,
                        C = Ta(k - Ha) < Ua,
                        A = C || k < Ua;
                    if (!C && M < S && (w = S, S = M, M = w), A ? C ? S + M > 0 ^ b[1] < (Ta(b[0] - x) < Ua ? S : M) : S <= b[1] && b[1] <= M : k > Ha ^ (x <= b[0] && b[0] <= T)) {
                        var P = Mn(g, (-v + _) / y);
                        return Sn(P, d), [b, Cn(P)]
                    }
                }
            }

            function o(n, e) {
                var r = a ? t : Ha - t,
                    o = 0;
                return n < -r ? o |= 1 : n > r && (o |= 2), e < -r ? o |= 4 : e > r && (o |= 8), o
            }
            var i = Math.cos(t),
                a = i > 0,
                s = Ta(i) > Ua;
            return jn(n, e, be(t, 6 * qa), a ? [0, -t] : [-Ha, t - Ha])
        }

        function Vn(t, n, e, r) {
            return function(o) {
                var i, a = o.a,
                    s = o.b,
                    u = a.x,
                    l = a.y,
                    c = s.x,
                    p = s.y,
                    f = 0,
                    h = 1,
                    d = c - u,
                    g = p - l;
                if (i = t - u, d || !(i > 0)) {
                    if (i /= d, d < 0) {
                        if (i < f) return;
                        i < h && (h = i)
                    } else if (d > 0) {
                        if (i > h) return;
                        i > f && (f = i)
                    }
                    if (i = e - u, d || !(i < 0)) {
                        if (i /= d, d < 0) {
                            if (i > h) return;
                            i > f && (f = i)
                        } else if (d > 0) {
                            if (i < f) return;
                            i < h && (h = i)
                        }
                        if (i = n - l, g || !(i > 0)) {
                            if (i /= g, g < 0) {
                                if (i < f) return;
                                i < h && (h = i)
                            } else if (g > 0) {
                                if (i > h) return;
                                i > f && (f = i)
                            }
                            if (i = r - l, g || !(i < 0)) {
                                if (i /= g, g < 0) {
                                    if (i > h) return;
                                    i > f && (f = i)
                                } else if (g > 0) {
                                    if (i < f) return;
                                    i < h && (h = i)
                                }
                                return f > 0 && (o.a = {
                                    x: u + f * d,
                                    y: l + f * g
                                }), h < 1 && (o.b = {
                                    x: u + h * d,
                                    y: l + h * g
                                }), o
                            }
                        }
                    }
                }
            }
        }

        function Kn(t, n, e, r) {
            function o(r, o) {
                return Ta(r[0] - t) < Ua ? o > 0 ? 0 : 3 : Ta(r[0] - e) < Ua ? o > 0 ? 2 : 1 : Ta(r[1] - n) < Ua ? o > 0 ? 1 : 0 : o > 0 ? 3 : 2
            }

            function i(t, n) {
                return a(t.x, n.x)
            }

            function a(t, n) {
                var e = o(t, 1),
                    r = o(n, 1);
                return e !== r ? e - r : 0 === e ? n[1] - t[1] : 1 === e ? t[0] - n[0] : 2 === e ? t[1] - n[1] : n[0] - t[0]
            }
            return function(s) {
                function u(t) {
                    for (var n = 0, e = v.length, r = t[1], o = 0; o < e; ++o)
                        for (var i, a = 1, s = v[o], u = s.length, l = s[0]; a < u; ++a) i = s[a], l[1] <= r ? i[1] > r && ot(l, i, t) > 0 && ++n : i[1] <= r && ot(l, i, t) < 0 && --n, l = i;
                    return 0 !== n
                }

                function l(i, s, u, l) {
                    var c = 0,
                        p = 0;
                    if (null == i || (c = o(i, u)) !== (p = o(s, u)) || a(i, s) < 0 ^ u > 0)
                        do {
                            l.point(0 === c || 3 === c ? t : e, c > 1 ? r : n)
                        } while ((c = (c + u + 4) % 4) !== p);
                    else l.point(s[0], s[1])
                }

                function c(o, i) {
                    return t <= o && o <= e && n <= i && i <= r
                }

                function p(t, n) {
                    c(t, n) && s.point(t, n)
                }

                function f() {
                    P.point = d, v && v.push(y = []), S = !0, T = !1, w = x = NaN
                }

                function h() {
                    g && (d(m, _), b && T && C.rejoin(), g.push(C.buffer())), P.point = p, T && s.lineEnd()
                }

                function d(t, n) {
                    t = Math.max(-zs, Math.min(zs, t)), n = Math.max(-zs, Math.min(zs, n));
                    var e = c(t, n);
                    if (v && y.push([t, n]), S) m = t, _ = n, b = e, S = !1, e && (s.lineStart(), s.point(t, n));
                    else if (e && T) s.point(t, n);
                    else {
                        var r = {
                            a: {
                                x: w,
                                y: x
                            },
                            b: {
                                x: t,
                                y: n
                            }
                        };
                        A(r) ? (T || (s.lineStart(), s.point(r.a.x, r.a.y)), s.point(r.b.x, r.b.y), e || s.lineEnd(), M = !1) : e && (s.lineStart(), s.point(t, n), M = !1)
                    }
                    w = t, x = n, T = e
                }
                var g, v, y, m, _, b, w, x, T, S, M, k = s,
                    C = zn(),
                    A = Vn(t, n, e, r),
                    P = {
                        point: p,
                        lineStart: f,
                        lineEnd: h,
                        polygonStart: function() {
                            s = C, g = [], v = [], M = !0
                        },
                        polygonEnd: function() {
                            s = k, g = ha.merge(g);
                            var n = u([t, r]),
                                e = M && n,
                                o = g.length;
                            (e || o) && (s.polygonStart(), e && (s.lineStart(), l(null, null, 1, s), s.lineEnd()), o && Rn(g, i, n, l, s), s.polygonEnd()), g = v = y = null
                        }
                    };
                return P
            }
        }

        function Zn(t) {
            var n = 0,
                e = Ha / 3,
                r = fe(t),
                o = r(n, e);
            return o.parallels = function(t) {
                return arguments.length ? r(n = t[0] * Ha / 180, e = t[1] * Ha / 180) : [n / Ha * 180, e / Ha * 180]
            }, o
        }

        function Xn(t, n) {
            function e(t, n) {
                var e = Math.sqrt(i - 2 * o * Math.sin(n)) / o;
                return [e * Math.sin(t *= o), a - e * Math.cos(t)]
            }
            var r = Math.sin(t),
                o = (r + Math.sin(n)) / 2,
                i = 1 + r * (2 * o - r),
                a = Math.sqrt(i) / o;
            return e.invert = function(t, n) {
                var e = a - n;
                return [Math.atan2(t, e) / o, at((i - (t * t + e * e) * o * o) / (2 * o))]
            }, e
        }

        function Jn() {
            function t(t, n) {
                Bs += o * t - r * n, r = t, o = n
            }
            var n, e, r, o;
            Vs.point = function(i, a) {
                Vs.point = t, n = r = i, e = o = a
            }, Vs.lineEnd = function() {
                t(n, e)
            }
        }

        function Qn(t, n) {
            t < Ws && (Ws = t), t > qs && (qs = t), n < Gs && (Gs = n), n > Ys && (Ys = n)
        }

        function te() {
            function t(t, n) {
                a.push("M", t, ",", n, i)
            }

            function n(t, n) {
                a.push("M", t, ",", n), s.point = e
            }

            function e(t, n) {
                a.push("L", t, ",", n)
            }

            function r() {
                s.point = t
            }

            function o() {
                a.push("Z")
            }
            var i = ne(4.5),
                a = [],
                s = {
                    point: t,
                    lineStart: function() {
                        s.point = n
                    },
                    lineEnd: r,
                    polygonStart: function() {
                        s.lineEnd = o
                    },
                    polygonEnd: function() {
                        s.lineEnd = r, s.point = t
                    },
                    pointRadius: function(t) {
                        return i = ne(t), s
                    },
                    result: function() {
                        if (a.length) {
                            var t = a.join("");
                            return a = [], t
                        }
                    }
                };
            return s
        }

        function ne(t) {
            return "m0," + t + "a" + t + "," + t + " 0 1,1 0," + -2 * t + "a" + t + "," + t + " 0 1,1 0," + 2 * t + "z"
        }

        function ee(t, n) {
            Es += t, Ns += n, ++Os
        }

        function re() {
            function t(t, r) {
                var o = t - n,
                    i = r - e,
                    a = Math.sqrt(o * o + i * i);
                $s += a * (n + t) / 2, Ls += a * (e + r) / 2, Is += a, ee(n = t, e = r)
            }
            var n, e;
            Zs.point = function(r, o) {
                Zs.point = t, ee(n = r, e = o)
            }
        }

        function oe() {
            Zs.point = ee
        }

        function ie() {
            function t(t, n) {
                var e = t - r,
                    i = n - o,
                    a = Math.sqrt(e * e + i * i);
                $s += a * (r + t) / 2, Ls += a * (o + n) / 2, Is += a, a = o * t - r * n, Rs += a * (r + t), Ds += a * (o + n), Fs += 3 * a, ee(r = t, o = n)
            }
            var n, e, r, o;
            Zs.point = function(i, a) {
                Zs.point = t, ee(n = r = i, e = o = a)
            }, Zs.lineEnd = function() {
                t(n, e)
            }
        }

        function ae(t) {
            function n(n, e) {
                t.moveTo(n + a, e), t.arc(n, e, a, 0, Ba)
            }

            function e(n, e) {
                t.moveTo(n, e), s.point = r
            }

            function r(n, e) {
                t.lineTo(n, e)
            }

            function o() {
                s.point = n
            }

            function i() {
                t.closePath()
            }
            var a = 4.5,
                s = {
                    point: n,
                    lineStart: function() {
                        s.point = e
                    },
                    lineEnd: o,
                    polygonStart: function() {
                        s.lineEnd = i
                    },
                    polygonEnd: function() {
                        s.lineEnd = o, s.point = n
                    },
                    pointRadius: function(t) {
                        return a = t, s
                    },
                    result: k
                };
            return s
        }

        function se(t) {
            function n(t) {
                return (s ? r : e)(t)
            }

            function e(n) {
                return ce(n, function(e, r) {
                    e = t(e, r), n.point(e[0], e[1])
                })
            }

            function r(n) {
                function e(e, r) {
                    e = t(e, r), n.point(e[0], e[1])
                }

                function r() {
                    _ = NaN, S.point = i, n.lineStart()
                }

                function i(e, r) {
                    var i = wn([e, r]),
                        a = t(e, r);
                    o(_, b, m, w, x, T, _ = a[0], b = a[1], m = e, w = i[0], x = i[1], T = i[2], s, n), n.point(_, b)
                }

                function a() {
                    S.point = e, n.lineEnd()
                }

                function u() {
                    r(), S.point = l, S.lineEnd = c
                }

                function l(t, n) {
                    i(p = t, f = n), h = _, d = b, g = w, v = x, y = T, S.point = i
                }

                function c() {
                    o(_, b, m, w, x, T, h, d, p, g, v, y, s, n), S.lineEnd = a, a()
                }
                var p, f, h, d, g, v, y, m, _, b, w, x, T, S = {
                    point: e,
                    lineStart: r,
                    lineEnd: a,
                    polygonStart: function() {
                        n.polygonStart(), S.lineStart = u
                    },
                    polygonEnd: function() {
                        n.polygonEnd(), S.lineStart = r
                    }
                };
                return S
            }

            function o(n, e, r, s, u, l, c, p, f, h, d, g, v, y) {
                var m = c - n,
                    _ = p - e,
                    b = m * m + _ * _;
                if (b > 4 * i && v--) {
                    var w = s + h,
                        x = u + d,
                        T = l + g,
                        S = Math.sqrt(w * w + x * x + T * T),
                        M = Math.asin(T /= S),
                        k = Ta(Ta(T) - 1) < Ua || Ta(r - f) < Ua ? (r + f) / 2 : Math.atan2(x, w),
                        C = t(k, M),
                        A = C[0],
                        P = C[1],
                        E = A - n,
                        N = P - e,
                        O = _ * E - m * N;
                    (O * O / b > i || Ta((m * E + _ * N) / b - .5) > .3 || s * h + u * d + l * g < a) && (o(n, e, r, s, u, l, A, P, k, w /= S, x /= S, T, v, y), y.point(A, P), o(A, P, k, w, x, T, c, p, f, h, d, g, v, y))
                }
            }
            var i = .5,
                a = Math.cos(30 * qa),
                s = 16;
            return n.precision = function(t) {
                return arguments.length ? (s = (i = t * t) > 0 && 16, n) : Math.sqrt(i)
            }, n
        }

        function ue(t) {
            var n = se(function(n, e) {
                return t([n * Ya, e * Ya])
            });
            return function(t) {
                return he(n(t))
            }
        }

        function le(t) {
            this.stream = t
        }

        function ce(t, n) {
            return {
                point: n,
                sphere: function() {
                    t.sphere()
                },
                lineStart: function() {
                    t.lineStart()
                },
                lineEnd: function() {
                    t.lineEnd()
                },
                polygonStart: function() {
                    t.polygonStart()
                },
                polygonEnd: function() {
                    t.polygonEnd()
                }
            }
        }

        function pe(t) {
            return fe(function() {
                return t
            })()
        }

        function fe(t) {
            function n(t) {
                return t = s(t[0] * qa, t[1] * qa), [t[0] * f + u, l - t[1] * f]
            }

            function e(t) {
                return (t = s.invert((t[0] - u) / f, (l - t[1]) / f)) && [t[0] * Ya, t[1] * Ya]
            }

            function r() {
                s = Ln(a = ve(y, m, _), i);
                var t = i(g, v);
                return u = h - t[0] * f, l = d + t[1] * f, o()
            }

            function o() {
                return c && (c.valid = !1, c = null), n
            }
            var i, a, s, u, l, c, p = se(function(t, n) {
                    return t = i(t, n), [t[0] * f + u, l - t[1] * f]
                }),
                f = 150,
                h = 480,
                d = 250,
                g = 0,
                v = 0,
                y = 0,
                m = 0,
                _ = 0,
                b = Us,
                w = T,
                x = null,
                S = null;
            return n.stream = function(t) {
                    return c && (c.valid = !1), c = he(b(a, p(w(t)))), c.valid = !0, c
                }, n.clipAngle = function(t) {
                    return arguments.length ? (b = null == t ? (x = t, Us) : Yn((x = +t) * qa), o()) : x
                }, n.clipExtent = function(t) {
                    return arguments.length ? (S = t, w = t ? Kn(t[0][0], t[0][1], t[1][0], t[1][1]) : T, o()) : S
                }, n.scale = function(t) {
                    return arguments.length ? (f = +t, r()) : f
                }, n.translate = function(t) {
                    return arguments.length ? (h = +t[0], d = +t[1], r()) : [h, d]
                }, n.center = function(t) {
                    return arguments.length ? (g = t[0] % 360 * qa, v = t[1] % 360 * qa, r()) : [g * Ya, v * Ya]
                }, n.rotate = function(t) {
                    return arguments.length ? (y = t[0] % 360 * qa, m = t[1] % 360 * qa, _ = t.length > 2 ? t[2] % 360 * qa : 0, r()) : [y * Ya, m * Ya, _ * Ya]
                }, ha.rebind(n, p, "precision"),
                function() {
                    return i = t.apply(this, arguments), n.invert = i.invert && e, r()
                }
        }

        function he(t) {
            return ce(t, function(n, e) {
                t.point(n * qa, e * qa)
            })
        }

        function de(t, n) {
            return [t, n]
        }

        function ge(t, n) {
            return [t > Ha ? t - Ba : t < -Ha ? t + Ba : t, n]
        }

        function ve(t, n, e) {
            return t ? n || e ? Ln(me(t), _e(n, e)) : me(t) : n || e ? _e(n, e) : ge
        }

        function ye(t) {
            return function(n, e) {
                return n += t, [n > Ha ? n - Ba : n < -Ha ? n + Ba : n, e]
            }
        }

        function me(t) {
            var n = ye(t);
            return n.invert = ye(-t), n
        }

        function _e(t, n) {
            function e(t, n) {
                var e = Math.cos(n),
                    s = Math.cos(t) * e,
                    u = Math.sin(t) * e,
                    l = Math.sin(n),
                    c = l * r + s * o;
                return [Math.atan2(u * i - c * a, s * r - l * o), at(c * i + u * a)]
            }
            var r = Math.cos(t),
                o = Math.sin(t),
                i = Math.cos(n),
                a = Math.sin(n);
            return e.invert = function(t, n) {
                var e = Math.cos(n),
                    s = Math.cos(t) * e,
                    u = Math.sin(t) * e,
                    l = Math.sin(n),
                    c = l * i - u * a;
                return [Math.atan2(u * i + l * a, s * r + c * o), at(c * r - s * o)]
            }, e
        }

        function be(t, n) {
            var e = Math.cos(t),
                r = Math.sin(t);
            return function(o, i, a, s) {
                var u = a * n;
                null != o ? (o = we(e, o), i = we(e, i), (a > 0 ? o < i : o > i) && (o += a * Ba)) : (o = t + a * Ba, i = t - .5 * u);
                for (var l, c = o; a > 0 ? c > i : c < i; c -= u) s.point((l = Cn([e, -r * Math.cos(c), -r * Math.sin(c)]))[0], l[1])
            }
        }

        function we(t, n) {
            var e = wn(n);
            e[0] -= t, kn(e);
            var r = it(-e[1]);
            return ((-e[2] < 0 ? -r : r) + 2 * Math.PI - Ua) % (2 * Math.PI)
        }

        function xe(t, n, e) {
            var r = ha.range(t, n - Ua, e).concat(n);
            return function(t) {
                return r.map(function(n) {
                    return [t, n]
                })
            }
        }

        function Te(t, n, e) {
            var r = ha.range(t, n - Ua, e).concat(n);
            return function(t) {
                return r.map(function(n) {
                    return [n, t]
                })
            }
        }

        function Se(t) {
            return t.source
        }

        function Me(t) {
            return t.target
        }

        function ke(t, n, e, r) {
            var o = Math.cos(n),
                i = Math.sin(n),
                a = Math.cos(r),
                s = Math.sin(r),
                u = o * Math.cos(t),
                l = o * Math.sin(t),
                c = a * Math.cos(e),
                p = a * Math.sin(e),
                f = 2 * Math.asin(Math.sqrt(ct(r - n) + o * a * ct(e - t))),
                h = 1 / Math.sin(f),
                d = f ? function(t) {
                    var n = Math.sin(t *= f) * h,
                        e = Math.sin(f - t) * h,
                        r = e * u + n * c,
                        o = e * l + n * p,
                        a = e * i + n * s;
                    return [Math.atan2(o, r) * Ya, Math.atan2(a, Math.sqrt(r * r + o * o)) * Ya]
                } : function() {
                    return [t * Ya, n * Ya]
                };
            return d.distance = f, d
        }

        function Ce() {
            function t(t, o) {
                var i = Math.sin(o *= qa),
                    a = Math.cos(o),
                    s = Ta((t *= qa) - n),
                    u = Math.cos(s);
                Xs += Math.atan2(Math.sqrt((s = a * Math.sin(s)) * s + (s = r * i - e * a * u) * s), e * i + r * a * u), n = t, e = i, r = a
            }
            var n, e, r;
            Js.point = function(o, i) {
                n = o * qa, e = Math.sin(i *= qa), r = Math.cos(i), Js.point = t
            }, Js.lineEnd = function() {
                Js.point = Js.lineEnd = k
            }
        }

        function Ae(t, n) {
            function e(n, e) {
                var r = Math.cos(n),
                    o = Math.cos(e),
                    i = t(r * o);
                return [i * o * Math.sin(n), i * Math.sin(e)]
            }
            return e.invert = function(t, e) {
                var r = Math.sqrt(t * t + e * e),
                    o = n(r),
                    i = Math.sin(o),
                    a = Math.cos(o);
                return [Math.atan2(t * i, r * a), Math.asin(r && e * i / r)]
            }, e
        }

        function Pe(t, n) {
            function e(t, n) {
                a > 0 ? n < -Ga + Ua && (n = -Ga + Ua) : n > Ga - Ua && (n = Ga - Ua);
                var e = a / Math.pow(o(n), i);
                return [e * Math.sin(i * t), a - e * Math.cos(i * t)]
            }
            var r = Math.cos(t),
                o = function(t) {
                    return Math.tan(Ha / 4 + t / 2)
                },
                i = t === n ? Math.sin(t) : Math.log(r / Math.cos(n)) / Math.log(o(n) / o(t)),
                a = r * Math.pow(o(t), i) / i;
            return i ? (e.invert = function(t, n) {
                var e = a - n,
                    r = rt(i) * Math.sqrt(t * t + e * e);
                return [Math.atan2(t, e) / i, 2 * Math.atan(Math.pow(a / r, 1 / i)) - Ga]
            }, e) : Ne
        }

        function Ee(t, n) {
            function e(t, n) {
                var e = i - n;
                return [e * Math.sin(o * t), i - e * Math.cos(o * t)]
            }
            var r = Math.cos(t),
                o = t === n ? Math.sin(t) : (r - Math.cos(n)) / (n - t),
                i = r / o + t;
            return Ta(o) < Ua ? de : (e.invert = function(t, n) {
                var e = i - n;
                return [Math.atan2(t, e) / o, i - rt(o) * Math.sqrt(t * t + e * e)]
            }, e)
        }

        function Ne(t, n) {
            return [t, Math.log(Math.tan(Ha / 4 + n / 2))]
        }

        function Oe(t) {
            var n, e = pe(t),
                r = e.scale,
                o = e.translate,
                i = e.clipExtent;
            return e.scale = function() {
                var t = r.apply(e, arguments);
                return t === e ? n ? e.clipExtent(null) : e : t
            }, e.translate = function() {
                var t = o.apply(e, arguments);
                return t === e ? n ? e.clipExtent(null) : e : t
            }, e.clipExtent = function(t) {
                var a = i.apply(e, arguments);
                if (a === e) {
                    if (n = null == t) {
                        var s = Ha * r(),
                            u = o();
                        i([
                            [u[0] - s, u[1] - s],
                            [u[0] + s, u[1] + s]
                        ])
                    }
                } else n && (a = null);
                return a
            }, e.clipExtent(null)
        }

        function $e(t, n) {
            return [Math.log(Math.tan(Ha / 4 + n / 2)), -t]
        }

        function Le(t) {
            return t[0]
        }

        function Ie(t) {
            return t[1]
        }

        function Re(t) {
            for (var n = t.length, e = [0, 1], r = 2, o = 2; o < n; o++) {
                for (; r > 1 && ot(t[e[r - 2]], t[e[r - 1]], t[o]) <= 0;) --r;
                e[r++] = o
            }
            return e.slice(0, r)
        }

        function De(t, n) {
            return t[0] - n[0] || t[1] - n[1]
        }

        function Fe(t, n, e) {
            return (e[0] - n[0]) * (t[1] - n[1]) < (e[1] - n[1]) * (t[0] - n[0])
        }

        function je(t, n, e, r) {
            var o = t[0],
                i = e[0],
                a = n[0] - o,
                s = r[0] - i,
                u = t[1],
                l = e[1],
                c = n[1] - u,
                p = r[1] - l,
                f = (s * (u - l) - p * (o - i)) / (p * a - s * c);
            return [o + f * a, u + f * c]
        }

        function Ue(t) {
            var n = t[0],
                e = t[t.length - 1];
            return !(n[0] - e[0] || n[1] - e[1])
        }

        function ze() {
            ur(this), this.edge = this.site = this.circle = null
        }

        function He(t) {
            var n = cu.pop() || new ze;
            return n.site = t, n
        }

        function Be(t) {
            Qe(t), su.remove(t), cu.push(t), ur(t)
        }

        function We(t) {
            var n = t.circle,
                e = n.x,
                r = n.cy,
                o = {
                    x: e,
                    y: r
                },
                i = t.P,
                a = t.N,
                s = [t];
            Be(t);
            for (var u = i; u.circle && Ta(e - u.circle.x) < Ua && Ta(r - u.circle.cy) < Ua;) i = u.P, s.unshift(u), Be(u), u = i;
            s.unshift(u), Qe(u);
            for (var l = a; l.circle && Ta(e - l.circle.x) < Ua && Ta(r - l.circle.cy) < Ua;) a = l.N, s.push(l), Be(l), l = a;
            s.push(l), Qe(l);
            var c, p = s.length;
            for (c = 1; c < p; ++c) l = s[c], u = s[c - 1], ir(l.edge, u.site, l.site, o);
            u = s[0], l = s[p - 1], l.edge = rr(u.site, l.site, null, o), Je(u), Je(l)
        }

        function Ge(t) {
            for (var n, e, r, o, i = t.x, a = t.y, s = su._; s;)
                if ((r = qe(s, a) - i) > Ua) s = s.L;
                else {
                    if (!((o = i - Ye(s, a)) > Ua)) {
                        r > -Ua ? (n = s.P, e = s) : o > -Ua ? (n = s, e = s.N) : n = e = s;
                        break
                    }
                    if (!s.R) {
                        n = s;
                        break
                    }
                    s = s.R
                }
            var u = He(t);
            if (su.insert(n, u), n || e) {
                if (n === e) return Qe(n), e = He(n.site), su.insert(u, e), u.edge = e.edge = rr(n.site, u.site), Je(n), void Je(e);
                if (!e) return void(u.edge = rr(n.site, u.site));
                Qe(n), Qe(e);
                var l = n.site,
                    c = l.x,
                    p = l.y,
                    f = t.x - c,
                    h = t.y - p,
                    d = e.site,
                    g = d.x - c,
                    v = d.y - p,
                    y = 2 * (f * v - h * g),
                    m = f * f + h * h,
                    _ = g * g + v * v,
                    b = {
                        x: (v * m - h * _) / y + c,
                        y: (f * _ - g * m) / y + p
                    };
                ir(e.edge, l, d, b), u.edge = rr(l, t, null, b), e.edge = rr(t, d, null, b), Je(n), Je(e)
            }
        }

        function qe(t, n) {
            var e = t.site,
                r = e.x,
                o = e.y,
                i = o - n;
            if (!i) return r;
            var a = t.P;
            if (!a) return -1 / 0;
            e = a.site;
            var s = e.x,
                u = e.y,
                l = u - n;
            if (!l) return s;
            var c = s - r,
                p = 1 / i - 1 / l,
                f = c / l;
            return p ? (-f + Math.sqrt(f * f - 2 * p * (c * c / (-2 * l) - u + l / 2 + o - i / 2))) / p + r : (r + s) / 2
        }

        function Ye(t, n) {
            var e = t.N;
            if (e) return qe(e, n);
            var r = t.site;
            return r.y === n ? r.x : 1 / 0
        }

        function Ve(t) {
            this.site = t, this.edges = []
        }

        function Ke(t) {
            for (var n, e, r, o, i, a, s, u, l, c, p = t[0][0], f = t[1][0], h = t[0][1], d = t[1][1], g = au, v = g.length; v--;)
                if ((i = g[v]) && i.prepare())
                    for (s = i.edges, u = s.length, a = 0; a < u;) c = s[a].end(), r = c.x, o = c.y, l = s[++a % u].start(), n = l.x, e = l.y, (Ta(r - n) > Ua || Ta(o - e) > Ua) && (s.splice(a, 0, new ar(or(i.site, c, Ta(r - p) < Ua && d - o > Ua ? {
                        x: p,
                        y: Ta(n - p) < Ua ? e : d
                    } : Ta(o - d) < Ua && f - r > Ua ? {
                        x: Ta(e - d) < Ua ? n : f,
                        y: d
                    } : Ta(r - f) < Ua && o - h > Ua ? {
                        x: f,
                        y: Ta(n - f) < Ua ? e : h
                    } : Ta(o - h) < Ua && r - p > Ua ? {
                        x: Ta(e - h) < Ua ? n : p,
                        y: h
                    } : null), i.site, null)), ++u)
        }

        function Ze(t, n) {
            return n.angle - t.angle
        }

        function Xe() {
            ur(this), this.x = this.y = this.arc = this.site = this.cy = null
        }

        function Je(t) {
            var n = t.P,
                e = t.N;
            if (n && e) {
                var r = n.site,
                    o = t.site,
                    i = e.site;
                if (r !== i) {
                    var a = o.x,
                        s = o.y,
                        u = r.x - a,
                        l = r.y - s,
                        c = i.x - a,
                        p = i.y - s,
                        f = 2 * (u * p - l * c);
                    if (!(f >= -za)) {
                        var h = u * u + l * l,
                            d = c * c + p * p,
                            g = (p * h - l * d) / f,
                            v = (u * d - c * h) / f,
                            p = v + s,
                            y = pu.pop() || new Xe;
                        y.arc = t, y.site = o, y.x = g + a, y.y = p + Math.sqrt(g * g + v * v), y.cy = p, t.circle = y;
                        for (var m = null, _ = lu._; _;)
                            if (y.y < _.y || y.y === _.y && y.x <= _.x) {
                                if (!_.L) {
                                    m = _.P;
                                    break
                                }
                                _ = _.L
                            } else {
                                if (!_.R) {
                                    m = _;
                                    break
                                }
                                _ = _.R
                            }
                        lu.insert(m, y), m || (uu = y)
                    }
                }
            }
        }

        function Qe(t) {
            var n = t.circle;
            n && (n.P || (uu = n.N), lu.remove(n), pu.push(n), ur(n), t.circle = null)
        }

        function tr(t) {
            for (var n, e = iu, r = Vn(t[0][0], t[0][1], t[1][0], t[1][1]), o = e.length; o--;) n = e[o], (!nr(n, t) || !r(n) || Ta(n.a.x - n.b.x) < Ua && Ta(n.a.y - n.b.y) < Ua) && (n.a = n.b = null, e.splice(o, 1))
        }

        function nr(t, n) {
            var e = t.b;
            if (e) return !0;
            var r, o, i = t.a,
                a = n[0][0],
                s = n[1][0],
                u = n[0][1],
                l = n[1][1],
                c = t.l,
                p = t.r,
                f = c.x,
                h = c.y,
                d = p.x,
                g = p.y,
                v = (f + d) / 2,
                y = (h + g) / 2;
            if (g === h) {
                if (v < a || v >= s) return;
                if (f > d) {
                    if (i) {
                        if (i.y >= l) return
                    } else i = {
                        x: v,
                        y: u
                    };
                    e = {
                        x: v,
                        y: l
                    }
                } else {
                    if (i) {
                        if (i.y < u) return
                    } else i = {
                        x: v,
                        y: l
                    };
                    e = {
                        x: v,
                        y: u
                    }
                }
            } else if (r = (f - d) / (g - h), o = y - r * v, r < -1 || r > 1)
                if (f > d) {
                    if (i) {
                        if (i.y >= l) return
                    } else i = {
                        x: (u - o) / r,
                        y: u
                    };
                    e = {
                        x: (l - o) / r,
                        y: l
                    }
                } else {
                    if (i) {
                        if (i.y < u) return
                    } else i = {
                        x: (l - o) / r,
                        y: l
                    };
                    e = {
                        x: (u - o) / r,
                        y: u
                    }
                }
            else if (h < g) {
                if (i) {
                    if (i.x >= s) return
                } else i = {
                    x: a,
                    y: r * a + o
                };
                e = {
                    x: s,
                    y: r * s + o
                }
            } else {
                if (i) {
                    if (i.x < a) return
                } else i = {
                    x: s,
                    y: r * s + o
                };
                e = {
                    x: a,
                    y: r * a + o
                }
            }
            return t.a = i, t.b = e, !0
        }

        function er(t, n) {
            this.l = t, this.r = n, this.a = this.b = null
        }

        function rr(t, n, e, r) {
            var o = new er(t, n);
            return iu.push(o), e && ir(o, t, n, e), r && ir(o, n, t, r), au[t.i].edges.push(new ar(o, t, n)), au[n.i].edges.push(new ar(o, n, t)), o
        }

        function or(t, n, e) {
            var r = new er(t, null);
            return r.a = n, r.b = e, iu.push(r), r
        }

        function ir(t, n, e, r) {
            t.a || t.b ? t.l === e ? t.b = r : t.a = r : (t.a = r, t.l = n, t.r = e)
        }

        function ar(t, n, e) {
            var r = t.a,
                o = t.b;
            this.edge = t, this.site = n, this.angle = e ? Math.atan2(e.y - n.y, e.x - n.x) : t.l === n ? Math.atan2(o.x - r.x, r.y - o.y) : Math.atan2(r.x - o.x, o.y - r.y)
        }

        function sr() {
            this._ = null
        }

        function ur(t) {
            t.U = t.C = t.L = t.R = t.P = t.N = null
        }

        function lr(t, n) {
            var e = n,
                r = n.R,
                o = e.U;
            o ? o.L === e ? o.L = r : o.R = r : t._ = r, r.U = o, e.U = r, e.R = r.L, e.R && (e.R.U = e), r.L = e
        }

        function cr(t, n) {
            var e = n,
                r = n.L,
                o = e.U;
            o ? o.L === e ? o.L = r : o.R = r : t._ = r, r.U = o, e.U = r, e.L = r.R, e.L && (e.L.U = e), r.R = e
        }

        function pr(t) {
            for (; t.L;) t = t.L;
            return t
        }

        function fr(t, n) {
            var e, r, o, i = t.sort(hr).pop();
            for (iu = [], au = new Array(t.length), su = new sr, lu = new sr;;)
                if (o = uu, i && (!o || i.y < o.y || i.y === o.y && i.x < o.x)) i.x === e && i.y === r || (au[i.i] = new Ve(i), Ge(i), e = i.x, r = i.y), i = t.pop();
                else {
                    if (!o) break;
                    We(o.arc)
                }
            n && (tr(n), Ke(n));
            var a = {
                cells: au,
                edges: iu
            };
            return su = lu = iu = au = null, a
        }

        function hr(t, n) {
            return n.y - t.y || n.x - t.x
        }

        function dr(t, n, e) {
            return (t.x - e.x) * (n.y - t.y) - (t.x - n.x) * (e.y - t.y)
        }

        function gr(t) {
            return t.x
        }

        function vr(t) {
            return t.y
        }

        function yr() {
            return {
                leaf: !0,
                nodes: [],
                point: null,
                x: null,
                y: null
            }
        }

        function mr(t, n, e, r, o, i) {
            if (!t(n, e, r, o, i)) {
                var a = .5 * (e + o),
                    s = .5 * (r + i),
                    u = n.nodes;
                u[0] && mr(t, u[0], e, r, a, s), u[1] && mr(t, u[1], a, r, o, s), u[2] && mr(t, u[2], e, s, a, i), u[3] && mr(t, u[3], a, s, o, i)
            }
        }

        function _r(t, n, e, r, o, i, a) {
            var s, u = 1 / 0;
            return function t(l, c, p, f, h) {
                if (!(c > i || p > a || f < r || h < o)) {
                    if (d = l.point) {
                        var d, g = n - l.x,
                            v = e - l.y,
                            y = g * g + v * v;
                        if (y < u) {
                            var m = Math.sqrt(u = y);
                            r = n - m, o = e - m, i = n + m, a = e + m, s = d
                        }
                    }
                    for (var _ = l.nodes, b = .5 * (c + f), w = .5 * (p + h), x = n >= b, T = e >= w, S = T << 1 | x, M = S + 4; S < M; ++S)
                        if (l = _[3 & S]) switch (3 & S) {
                            case 0:
                                t(l, c, p, b, w);
                                break;
                            case 1:
                                t(l, b, p, f, w);
                                break;
                            case 2:
                                t(l, c, w, b, h);
                                break;
                            case 3:
                                t(l, b, w, f, h)
                        }
                }
            }(t, r, o, i, a), s
        }

        function br(t, n) {
            t = ha.rgb(t), n = ha.rgb(n);
            var e = t.r,
                r = t.g,
                o = t.b,
                i = n.r - e,
                a = n.g - r,
                s = n.b - o;
            return function(t) {
                return "#" + Mt(Math.round(e + i * t)) + Mt(Math.round(r + a * t)) + Mt(Math.round(o + s * t))
            }
        }

        function wr(t, n) {
            var e, r = {},
                o = {};
            for (e in t) e in n ? r[e] = Sr(t[e], n[e]) : o[e] = t[e];
            for (e in n) e in t || (o[e] = n[e]);
            return function(t) {
                for (e in r) o[e] = r[e](t);
                return o
            }
        }

        function xr(t, n) {
            return t = +t, n = +n,
                function(e) {
                    return t * (1 - e) + n * e
                }
        }

        function Tr(t, n) {
            var e, r, o, i = hu.lastIndex = du.lastIndex = 0,
                a = -1,
                s = [],
                u = [];
            for (t += "", n += "";
                (e = hu.exec(t)) && (r = du.exec(n));)(o = r.index) > i && (o = n.slice(i, o), s[a] ? s[a] += o : s[++a] = o), (e = e[0]) === (r = r[0]) ? s[a] ? s[a] += r : s[++a] = r : (s[++a] = null, u.push({
                i: a,
                x: xr(e, r)
            })), i = du.lastIndex;
            return i < n.length && (o = n.slice(i), s[a] ? s[a] += o : s[++a] = o), s.length < 2 ? u[0] ? (n = u[0].x, function(t) {
                return n(t) + ""
            }) : function() {
                return n
            } : (n = u.length, function(t) {
                for (var e, r = 0; r < n; ++r) s[(e = u[r]).i] = e.x(t);
                return s.join("")
            })
        }

        function Sr(t, n) {
            for (var e, r = ha.interpolators.length; --r >= 0 && !(e = ha.interpolators[r](t, n)););
            return e
        }

        function Mr(t, n) {
            var e, r = [],
                o = [],
                i = t.length,
                a = n.length,
                s = Math.min(t.length, n.length);
            for (e = 0; e < s; ++e) r.push(Sr(t[e], n[e]));
            for (; e < i; ++e) o[e] = t[e];
            for (; e < a; ++e) o[e] = n[e];
            return function(t) {
                for (e = 0; e < s; ++e) o[e] = r[e](t);
                return o
            }
        }

        function kr(t) {
            return function(n) {
                return n <= 0 ? 0 : n >= 1 ? 1 : t(n)
            }
        }

        function Cr(t) {
            return function(n) {
                return 1 - t(1 - n)
            }
        }

        function Ar(t) {
            return function(n) {
                return .5 * (n < .5 ? t(2 * n) : 2 - t(2 - 2 * n))
            }
        }

        function Pr(t) {
            return t * t
        }

        function Er(t) {
            return t * t * t
        }

        function Nr(t) {
            if (t <= 0) return 0;
            if (t >= 1) return 1;
            var n = t * t,
                e = n * t;
            return 4 * (t < .5 ? e : 3 * (t - n) + e - .75)
        }

        function Or(t) {
            return function(n) {
                return Math.pow(n, t)
            }
        }

        function $r(t) {
            return 1 - Math.cos(t * Ga)
        }

        function Lr(t) {
            return Math.pow(2, 10 * (t - 1))
        }

        function Ir(t) {
            return 1 - Math.sqrt(1 - t * t)
        }

        function Rr(t, n) {
            var e;
            return arguments.length < 2 && (n = .45), arguments.length ? e = n / Ba * Math.asin(1 / t) : (t = 1, e = n / 4),
                function(r) {
                    return 1 + t * Math.pow(2, -10 * r) * Math.sin((r - e) * Ba / n)
                }
        }

        function Dr(t) {
            return t || (t = 1.70158),
                function(n) {
                    return n * n * ((t + 1) * n - t)
                }
        }

        function Fr(t) {
            return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
        }

        function jr(t, n) {
            t = ha.hcl(t), n = ha.hcl(n);
            var e = t.h,
                r = t.c,
                o = t.l,
                i = n.h - e,
                a = n.c - r,
                s = n.l - o;
            return isNaN(a) && (a = 0, r = isNaN(r) ? n.c : r), isNaN(i) ? (i = 0, e = isNaN(e) ? n.h : e) : i > 180 ? i -= 360 : i < -180 && (i += 360),
                function(t) {
                    return gt(e + i * t, r + a * t, o + s * t) + ""
                }
        }

        function Ur(t, n) {
            t = ha.hsl(t), n = ha.hsl(n);
            var e = t.h,
                r = t.s,
                o = t.l,
                i = n.h - e,
                a = n.s - r,
                s = n.l - o;
            return isNaN(a) && (a = 0, r = isNaN(r) ? n.s : r), isNaN(i) ? (i = 0, e = isNaN(e) ? n.h : e) : i > 180 ? i -= 360 : i < -180 && (i += 360),
                function(t) {
                    return ht(e + i * t, r + a * t, o + s * t) + ""
                }
        }

        function zr(t, n) {
            t = ha.lab(t), n = ha.lab(n);
            var e = t.l,
                r = t.a,
                o = t.b,
                i = n.l - e,
                a = n.a - r,
                s = n.b - o;
            return function(t) {
                return yt(e + i * t, r + a * t, o + s * t) + ""
            }
        }

        function Hr(t, n) {
            return n -= t,
                function(e) {
                    return Math.round(t + n * e)
                }
        }

        function Br(t) {
            var n = [t.a, t.b],
                e = [t.c, t.d],
                r = Gr(n),
                o = Wr(n, e),
                i = Gr(qr(e, n, -o)) || 0;
            n[0] * e[1] < e[0] * n[1] && (n[0] *= -1, n[1] *= -1, r *= -1, o *= -1), this.rotate = (r ? Math.atan2(n[1], n[0]) : Math.atan2(-e[0], e[1])) * Ya, this.translate = [t.e, t.f], this.scale = [r, i], this.skew = i ? Math.atan2(o, i) * Ya : 0
        }

        function Wr(t, n) {
            return t[0] * n[0] + t[1] * n[1]
        }

        function Gr(t) {
            var n = Math.sqrt(Wr(t, t));
            return n && (t[0] /= n, t[1] /= n), n
        }

        function qr(t, n, e) {
            return t[0] += e * n[0], t[1] += e * n[1], t
        }

        function Yr(t) {
            return t.length ? t.pop() + "," : ""
        }

        function Vr(t, n, e, r) {
            if (t[0] !== n[0] || t[1] !== n[1]) {
                var o = e.push("translate(", null, ",", null, ")");
                r.push({
                    i: o - 4,
                    x: xr(t[0], n[0])
                }, {
                    i: o - 2,
                    x: xr(t[1], n[1])
                })
            } else(n[0] || n[1]) && e.push("translate(" + n + ")")
        }

        function Kr(t, n, e, r) {
            t !== n ? (t - n > 180 ? n += 360 : n - t > 180 && (t += 360), r.push({
                i: e.push(Yr(e) + "rotate(", null, ")") - 2,
                x: xr(t, n)
            })) : n && e.push(Yr(e) + "rotate(" + n + ")")
        }

        function Zr(t, n, e, r) {
            t !== n ? r.push({
                i: e.push(Yr(e) + "skewX(", null, ")") - 2,
                x: xr(t, n)
            }) : n && e.push(Yr(e) + "skewX(" + n + ")")
        }

        function Xr(t, n, e, r) {
            if (t[0] !== n[0] || t[1] !== n[1]) {
                var o = e.push(Yr(e) + "scale(", null, ",", null, ")");
                r.push({
                    i: o - 4,
                    x: xr(t[0], n[0])
                }, {
                    i: o - 2,
                    x: xr(t[1], n[1])
                })
            } else 1 === n[0] && 1 === n[1] || e.push(Yr(e) + "scale(" + n + ")")
        }

        function Jr(t, n) {
            var e = [],
                r = [];
            return t = ha.transform(t), n = ha.transform(n), Vr(t.translate, n.translate, e, r), Kr(t.rotate, n.rotate, e, r), Zr(t.skew, n.skew, e, r), Xr(t.scale, n.scale, e, r), t = n = null,
                function(t) {
                    for (var n, o = -1, i = r.length; ++o < i;) e[(n = r[o]).i] = n.x(t);
                    return e.join("")
                }
        }

        function Qr(t, n) {
            return n = (n -= t = +t) || 1 / n,
                function(e) {
                    return (e - t) / n
                }
        }

        function to(t, n) {
            return n = (n -= t = +t) || 1 / n,
                function(e) {
                    return Math.max(0, Math.min(1, (e - t) / n))
                }
        }

        function no(t) {
            for (var n = t.source, e = t.target, r = ro(n, e), o = [n]; n !== r;) n = n.parent, o.push(n);
            for (var i = o.length; e !== r;) o.splice(i, 0, e), e = e.parent;
            return o
        }

        function eo(t) {
            for (var n = [], e = t.parent; null != e;) n.push(t), t = e, e = e.parent;
            return n.push(t), n
        }

        function ro(t, n) {
            if (t === n) return t;
            for (var e = eo(t), r = eo(n), o = e.pop(), i = r.pop(), a = null; o === i;) a = o, o = e.pop(), i = r.pop();
            return a
        }

        function oo(t) {
            t.fixed |= 2
        }

        function io(t) {
            t.fixed &= -7
        }

        function ao(t) {
            t.fixed |= 4, t.px = t.x, t.py = t.y
        }

        function so(t) {
            t.fixed &= -5
        }

        function uo(t, n, e) {
            var r = 0,
                o = 0;
            if (t.charge = 0, !t.leaf)
                for (var i, a = t.nodes, s = a.length, u = -1; ++u < s;) null != (i = a[u]) && (uo(i, n, e), t.charge += i.charge, r += i.charge * i.cx, o += i.charge * i.cy);
            if (t.point) {
                t.leaf || (t.point.x += Math.random() - .5, t.point.y += Math.random() - .5);
                var l = n * e[t.point.index];
                t.charge += t.pointCharge = l, r += l * t.point.x, o += l * t.point.y
            }
            t.cx = r / t.charge, t.cy = o / t.charge
        }

        function lo(t, n) {
            return ha.rebind(t, n, "sort", "children", "value"), t.nodes = t, t.links = vo, t
        }

        function co(t, n) {
            for (var e = [t]; null != (t = e.pop());)
                if (n(t), (o = t.children) && (r = o.length))
                    for (var r, o; --r >= 0;) e.push(o[r])
        }

        function po(t, n) {
            for (var e = [t], r = []; null != (t = e.pop());)
                if (r.push(t), (i = t.children) && (o = i.length))
                    for (var o, i, a = -1; ++a < o;) e.push(i[a]);
            for (; null != (t = r.pop());) n(t)
        }

        function fo(t) {
            return t.children
        }

        function ho(t) {
            return t.value
        }

        function go(t, n) {
            return n.value - t.value
        }

        function vo(t) {
            return ha.merge(t.map(function(t) {
                return (t.children || []).map(function(n) {
                    return {
                        source: t,
                        target: n
                    }
                })
            }))
        }

        function yo(t) {
            return t.x
        }

        function mo(t) {
            return t.y
        }

        function _o(t, n, e) {
            t.y0 = n, t.y = e
        }

        function bo(t) {
            return ha.range(t.length)
        }

        function wo(t) {
            for (var n = -1, e = t[0].length, r = []; ++n < e;) r[n] = 0;
            return r
        }

        function xo(t) {
            for (var n, e = 1, r = 0, o = t[0][1], i = t.length; e < i; ++e)(n = t[e][1]) > o && (r = e, o = n);
            return r
        }

        function To(t) {
            return t.reduce(So, 0)
        }

        function So(t, n) {
            return t + n[1]
        }

        function Mo(t, n) {
            return ko(t, Math.ceil(Math.log(n.length) / Math.LN2 + 1))
        }

        function ko(t, n) {
            for (var e = -1, r = +t[0], o = (t[1] - r) / n, i = []; ++e <= n;) i[e] = o * e + r;
            return i
        }

        function Co(t) {
            return [ha.min(t), ha.max(t)]
        }

        function Ao(t, n) {
            return t.value - n.value
        }

        function Po(t, n) {
            var e = t._pack_next;
            t._pack_next = n, n._pack_prev = t, n._pack_next = e, e._pack_prev = n
        }

        function Eo(t, n) {
            t._pack_next = n, n._pack_prev = t
        }

        function No(t, n) {
            var e = n.x - t.x,
                r = n.y - t.y,
                o = t.r + n.r;
            return .999 * o * o > e * e + r * r
        }

        function Oo(t) {
            function n(t) {
                c = Math.min(t.x - t.r, c), p = Math.max(t.x + t.r, p), f = Math.min(t.y - t.r, f), h = Math.max(t.y + t.r, h)
            }
            if ((e = t.children) && (l = e.length)) {
                var e, r, o, i, a, s, u, l, c = 1 / 0,
                    p = -1 / 0,
                    f = 1 / 0,
                    h = -1 / 0;
                if (e.forEach($o), r = e[0], r.x = -r.r, r.y = 0, n(r), l > 1 && (o = e[1], o.x = o.r, o.y = 0, n(o), l > 2))
                    for (i = e[2], Ro(r, o, i), n(i), Po(r, i), r._pack_prev = i, Po(i, o), o = r._pack_next, a = 3; a < l; a++) {
                        Ro(r, o, i = e[a]);
                        var d = 0,
                            g = 1,
                            v = 1;
                        for (s = o._pack_next; s !== o; s = s._pack_next, g++)
                            if (No(s, i)) {
                                d = 1;
                                break
                            }
                        if (1 == d)
                            for (u = r._pack_prev; u !== s._pack_prev && !No(u, i); u = u._pack_prev, v++);
                        d ? (g < v || g == v && o.r < r.r ? Eo(r, o = s) : Eo(r = u, o), a--) : (Po(r, i), o = i, n(i))
                    }
                var y = (c + p) / 2,
                    m = (f + h) / 2,
                    _ = 0;
                for (a = 0; a < l; a++) i = e[a], i.x -= y, i.y -= m, _ = Math.max(_, i.r + Math.sqrt(i.x * i.x + i.y * i.y));
                t.r = _, e.forEach(Lo)
            }
        }

        function $o(t) {
            t._pack_next = t._pack_prev = t
        }

        function Lo(t) {
            delete t._pack_next, delete t._pack_prev
        }

        function Io(t, n, e, r) {
            var o = t.children;
            if (t.x = n += r * t.x, t.y = e += r * t.y, t.r *= r, o)
                for (var i = -1, a = o.length; ++i < a;) Io(o[i], n, e, r)
        }

        function Ro(t, n, e) {
            var r = t.r + e.r,
                o = n.x - t.x,
                i = n.y - t.y;
            if (r && (o || i)) {
                var a = n.r + e.r,
                    s = o * o + i * i;
                a *= a, r *= r;
                var u = .5 + (r - a) / (2 * s),
                    l = Math.sqrt(Math.max(0, 2 * a * (r + s) - (r -= s) * r - a * a)) / (2 * s);
                e.x = t.x + u * o + l * i, e.y = t.y + u * i - l * o
            } else e.x = t.x + r, e.y = t.y
        }

        function Do(t, n) {
            return t.parent == n.parent ? 1 : 2
        }

        function Fo(t) {
            var n = t.children;
            return n.length ? n[0] : t.t
        }

        function jo(t) {
            var n, e = t.children;
            return (n = e.length) ? e[n - 1] : t.t
        }

        function Uo(t, n, e) {
            var r = e / (n.i - t.i);
            n.c -= r, n.s += e, t.c += r, n.z += e, n.m += e
        }

        function zo(t) {
            for (var n, e = 0, r = 0, o = t.children, i = o.length; --i >= 0;) n = o[i], n.z += e, n.m += e, e += n.s + (r += n.c)
        }

        function Ho(t, n, e) {
            return t.a.parent === n.parent ? t.a : e
        }

        function Bo(t) {
            return 1 + ha.max(t, function(t) {
                return t.y
            })
        }

        function Wo(t) {
            return t.reduce(function(t, n) {
                return t + n.x
            }, 0) / t.length
        }

        function Go(t) {
            var n = t.children;
            return n && n.length ? Go(n[0]) : t
        }

        function qo(t) {
            var n, e = t.children;
            return e && (n = e.length) ? qo(e[n - 1]) : t
        }

        function Yo(t) {
            return {
                x: t.x,
                y: t.y,
                dx: t.dx,
                dy: t.dy
            }
        }

        function Vo(t, n) {
            var e = t.x + n[3],
                r = t.y + n[0],
                o = t.dx - n[1] - n[3],
                i = t.dy - n[0] - n[2];
            return o < 0 && (e += o / 2, o = 0), i < 0 && (r += i / 2, i = 0), {
                x: e,
                y: r,
                dx: o,
                dy: i
            }
        }

        function Ko(t) {
            var n = t[0],
                e = t[t.length - 1];
            return n < e ? [n, e] : [e, n]
        }

        function Zo(t) {
            return t.rangeExtent ? t.rangeExtent() : Ko(t.range())
        }

        function Xo(t, n, e, r) {
            var o = e(t[0], t[1]),
                i = r(n[0], n[1]);
            return function(t) {
                return i(o(t))
            }
        }

        function Jo(t, n) {
            var e, r = 0,
                o = t.length - 1,
                i = t[r],
                a = t[o];
            return a < i && (e = r, r = o, o = e, e = i, i = a, a = e), t[r] = n.floor(i), t[o] = n.ceil(a), t
        }

        function Qo(t) {
            return t ? {
                floor: function(n) {
                    return Math.floor(n / t) * t
                },
                ceil: function(n) {
                    return Math.ceil(n / t) * t
                }
            } : Mu
        }

        function ti(t, n, e, r) {
            var o = [],
                i = [],
                a = 0,
                s = Math.min(t.length, n.length) - 1;
            for (t[s] < t[0] && (t = t.slice().reverse(), n = n.slice().reverse()); ++a <= s;) o.push(e(t[a - 1], t[a])), i.push(r(n[a - 1], n[a]));
            return function(n) {
                var e = ha.bisect(t, n, 1, s) - 1;
                return i[e](o[e](n))
            }
        }

        function ni(t, n, e, r) {
            function o() {
                var o = Math.min(t.length, n.length) > 2 ? ti : Xo,
                    u = r ? to : Qr;
                return a = o(t, n, u, e), s = o(n, t, u, Sr), i
            }

            function i(t) {
                return a(t)
            }
            var a, s;
            return i.invert = function(t) {
                return s(t)
            }, i.domain = function(n) {
                return arguments.length ? (t = n.map(Number), o()) : t
            }, i.range = function(t) {
                return arguments.length ? (n = t, o()) : n
            }, i.rangeRound = function(t) {
                return i.range(t).interpolate(Hr)
            }, i.clamp = function(t) {
                return arguments.length ? (r = t, o()) : r
            }, i.interpolate = function(t) {
                return arguments.length ? (e = t, o()) : e
            }, i.ticks = function(n) {
                return ii(t, n)
            }, i.tickFormat = function(n, e) {
                return ai(t, n, e)
            }, i.nice = function(n) {
                return ri(t, n), o()
            }, i.copy = function() {
                return ni(t, n, e, r)
            }, o()
        }

        function ei(t, n) {
            return ha.rebind(t, n, "range", "rangeRound", "interpolate", "clamp")
        }

        function ri(t, n) {
            return Jo(t, Qo(oi(t, n)[2])), Jo(t, Qo(oi(t, n)[2])), t
        }

        function oi(t, n) {
            null == n && (n = 10);
            var e = Ko(t),
                r = e[1] - e[0],
                o = Math.pow(10, Math.floor(Math.log(r / n) / Math.LN10)),
                i = n / r * o;
            return i <= .15 ? o *= 10 : i <= .35 ? o *= 5 : i <= .75 && (o *= 2), e[0] = Math.ceil(e[0] / o) * o, e[1] = Math.floor(e[1] / o) * o + .5 * o, e[2] = o, e
        }

        function ii(t, n) {
            return ha.range.apply(ha, oi(t, n))
        }

        function ai(t, n, e) {
            var r = oi(t, n);
            if (e) {
                var o = hs.exec(e);
                if (o.shift(), "s" === o[8]) {
                    var i = ha.formatPrefix(Math.max(Ta(r[0]), Ta(r[1])));
                    return o[7] || (o[7] = "." + si(i.scale(r[2]))), o[8] = "f", e = ha.format(o.join("")),
                        function(t) {
                            return e(i.scale(t)) + i.symbol
                        }
                }
                o[7] || (o[7] = "." + ui(o[8], r)), e = o.join("")
            } else e = ",." + si(r[2]) + "f";
            return ha.format(e)
        }

        function si(t) {
            return -Math.floor(Math.log(t) / Math.LN10 + .01)
        }

        function ui(t, n) {
            var e = si(n[2]);
            return t in ku ? Math.abs(e - si(Math.max(Ta(n[0]), Ta(n[1])))) + +("e" !== t) : e - 2 * ("%" === t)
        }

        function li(t, n, e, r) {
            function o(t) {
                return (e ? Math.log(t < 0 ? 0 : t) : -Math.log(t > 0 ? 0 : -t)) / Math.log(n)
            }

            function i(t) {
                return e ? Math.pow(n, t) : -Math.pow(n, -t)
            }

            function a(n) {
                return t(o(n))
            }
            return a.invert = function(n) {
                return i(t.invert(n))
            }, a.domain = function(n) {
                return arguments.length ? (e = n[0] >= 0, t.domain((r = n.map(Number)).map(o)), a) : r
            }, a.base = function(e) {
                return arguments.length ? (n = +e, t.domain(r.map(o)), a) : n
            }, a.nice = function() {
                var n = Jo(r.map(o), e ? Math : Au);
                return t.domain(n), r = n.map(i), a
            }, a.ticks = function() {
                var t = Ko(r),
                    a = [],
                    s = t[0],
                    u = t[1],
                    l = Math.floor(o(s)),
                    c = Math.ceil(o(u)),
                    p = n % 1 ? 2 : n;
                if (isFinite(c - l)) {
                    if (e) {
                        for (; l < c; l++)
                            for (var f = 1; f < p; f++) a.push(i(l) * f);
                        a.push(i(l))
                    } else
                        for (a.push(i(l)); l++ < c;)
                            for (var f = p - 1; f > 0; f--) a.push(i(l) * f);
                    for (l = 0; a[l] < s; l++);
                    for (c = a.length; a[c - 1] > u; c--);
                    a = a.slice(l, c)
                }
                return a
            }, a.tickFormat = function(t, e) {
                if (!arguments.length) return Cu;
                arguments.length < 2 ? e = Cu : "function" != typeof e && (e = ha.format(e));
                var r = Math.max(1, n * t / a.ticks().length);
                return function(t) {
                    var a = t / i(Math.round(o(t)));
                    return a * n < n - .5 && (a *= n), a <= r ? e(t) : ""
                }
            }, a.copy = function() {
                return li(t.copy(), n, e, r)
            }, ei(a, t)
        }

        function ci(t, n, e) {
            function r(n) {
                return t(o(n))
            }
            var o = pi(n),
                i = pi(1 / n);
            return r.invert = function(n) {
                return i(t.invert(n))
            }, r.domain = function(n) {
                return arguments.length ? (t.domain((e = n.map(Number)).map(o)), r) : e
            }, r.ticks = function(t) {
                return ii(e, t)
            }, r.tickFormat = function(t, n) {
                return ai(e, t, n)
            }, r.nice = function(t) {
                return r.domain(ri(e, t))
            }, r.exponent = function(a) {
                return arguments.length ? (o = pi(n = a), i = pi(1 / n), t.domain(e.map(o)), r) : n
            }, r.copy = function() {
                return ci(t.copy(), n, e)
            }, ei(r, t)
        }

        function pi(t) {
            return function(n) {
                return n < 0 ? -Math.pow(-n, t) : Math.pow(n, t)
            }
        }

        function fi(t, n) {
            function e(e) {
                return i[((o.get(e) || ("range" === n.t ? o.set(e, t.push(e)) : NaN)) - 1) % i.length]
            }

            function r(n, e) {
                return ha.range(t.length).map(function(t) {
                    return n + e * t
                })
            }
            var o, i, a;
            return e.domain = function(r) {
                if (!arguments.length) return t;
                t = [], o = new d;
                for (var i, a = -1, s = r.length; ++a < s;) o.has(i = r[a]) || o.set(i, t.push(i));
                return e[n.t].apply(e, n.a)
            }, e.range = function(t) {
                return arguments.length ? (i = t, a = 0, n = {
                    t: "range",
                    a: arguments
                }, e) : i
            }, e.rangePoints = function(o, s) {
                arguments.length < 2 && (s = 0);
                var u = o[0],
                    l = o[1],
                    c = t.length < 2 ? (u = (u + l) / 2, 0) : (l - u) / (t.length - 1 + s);
                return i = r(u + c * s / 2, c), a = 0, n = {
                    t: "rangePoints",
                    a: arguments
                }, e
            }, e.rangeRoundPoints = function(o, s) {
                arguments.length < 2 && (s = 0);
                var u = o[0],
                    l = o[1],
                    c = t.length < 2 ? (u = l = Math.round((u + l) / 2), 0) : (l - u) / (t.length - 1 + s) | 0;
                return i = r(u + Math.round(c * s / 2 + (l - u - (t.length - 1 + s) * c) / 2), c), a = 0, n = {
                    t: "rangeRoundPoints",
                    a: arguments
                }, e
            }, e.rangeBands = function(o, s, u) {
                arguments.length < 2 && (s = 0), arguments.length < 3 && (u = s);
                var l = o[1] < o[0],
                    c = o[l - 0],
                    p = o[1 - l],
                    f = (p - c) / (t.length - s + 2 * u);
                return i = r(c + f * u, f), l && i.reverse(), a = f * (1 - s), n = {
                    t: "rangeBands",
                    a: arguments
                }, e
            }, e.rangeRoundBands = function(o, s, u) {
                arguments.length < 2 && (s = 0), arguments.length < 3 && (u = s);
                var l = o[1] < o[0],
                    c = o[l - 0],
                    p = o[1 - l],
                    f = Math.floor((p - c) / (t.length - s + 2 * u));
                return i = r(c + Math.round((p - c - (t.length - s) * f) / 2), f), l && i.reverse(), a = Math.round(f * (1 - s)), n = {
                    t: "rangeRoundBands",
                    a: arguments
                }, e
            }, e.rangeBand = function() {
                return a
            }, e.rangeExtent = function() {
                return Ko(n.a[0])
            }, e.copy = function() {
                return fi(t, n)
            }, e.domain(t)
        }

        function hi(t, n) {
            function e() {
                var e = 0,
                    i = n.length;
                for (o = []; ++e < i;) o[e - 1] = ha.quantile(t, e / i);
                return r
            }

            function r(t) {
                if (!isNaN(t = +t)) return n[ha.bisect(o, t)]
            }
            var o;
            return r.domain = function(n) {
                return arguments.length ? (t = n.map(u).filter(l).sort(s), e()) : t
            }, r.range = function(t) {
                return arguments.length ? (n = t, e()) : n
            }, r.quantiles = function() {
                return o
            }, r.invertExtent = function(e) {
                return e = n.indexOf(e), e < 0 ? [NaN, NaN] : [e > 0 ? o[e - 1] : t[0], e < o.length ? o[e] : t[t.length - 1]]
            }, r.copy = function() {
                return hi(t, n)
            }, e()
        }

        function di(t, n, e) {
            function r(n) {
                return e[Math.max(0, Math.min(a, Math.floor(i * (n - t))))]
            }

            function o() {
                return i = e.length / (n - t), a = e.length - 1, r
            }
            var i, a;
            return r.domain = function(e) {
                return arguments.length ? (t = +e[0], n = +e[e.length - 1], o()) : [t, n]
            }, r.range = function(t) {
                return arguments.length ? (e = t, o()) : e
            }, r.invertExtent = function(n) {
                return n = e.indexOf(n), n = n < 0 ? NaN : n / i + t, [n, n + 1 / i]
            }, r.copy = function() {
                return di(t, n, e)
            }, o()
        }

        function gi(t, n) {
            function e(e) {
                if (e <= e) return n[ha.bisect(t, e)]
            }
            return e.domain = function(n) {
                return arguments.length ? (t = n, e) : t
            }, e.range = function(t) {
                return arguments.length ? (n = t, e) : n
            }, e.invertExtent = function(e) {
                return e = n.indexOf(e), [t[e - 1], t[e]]
            }, e.copy = function() {
                return gi(t, n)
            }, e
        }

        function vi(t) {
            function n(t) {
                return +t
            }
            return n.invert = n, n.domain = n.range = function(e) {
                return arguments.length ? (t = e.map(n), n) : t
            }, n.ticks = function(n) {
                return ii(t, n)
            }, n.tickFormat = function(n, e) {
                return ai(t, n, e)
            }, n.copy = function() {
                return vi(t)
            }, n
        }

        function yi() {
            return 0
        }

        function mi(t) {
            return t.innerRadius
        }

        function _i(t) {
            return t.outerRadius
        }

        function bi(t) {
            return t.startAngle
        }

        function wi(t) {
            return t.endAngle
        }

        function xi(t) {
            return t && t.padAngle
        }

        function Ti(t, n, e, r) {
            return (t - e) * n - (n - r) * t > 0 ? 0 : 1
        }

        function Si(t, n, e, r, o) {
            var i = t[0] - n[0],
                a = t[1] - n[1],
                s = (o ? r : -r) / Math.sqrt(i * i + a * a),
                u = s * a,
                l = -s * i,
                c = t[0] + u,
                p = t[1] + l,
                f = n[0] + u,
                h = n[1] + l,
                d = (c + f) / 2,
                g = (p + h) / 2,
                v = f - c,
                y = h - p,
                m = v * v + y * y,
                _ = e - r,
                b = c * h - f * p,
                w = (y < 0 ? -1 : 1) * Math.sqrt(Math.max(0, _ * _ * m - b * b)),
                x = (b * y - v * w) / m,
                T = (-b * v - y * w) / m,
                S = (b * y + v * w) / m,
                M = (-b * v + y * w) / m,
                k = x - d,
                C = T - g,
                A = S - d,
                P = M - g;
            return k * k + C * C > A * A + P * P && (x = S, T = M), [
                [x - u, T - l],
                [x * e / _, T * e / _]
            ]
        }

        function Mi(t) {
            function n(n) {
                function a() {
                    l.push("M", i(t(c), s))
                }
                for (var u, l = [], c = [], p = -1, f = n.length, h = Nt(e), d = Nt(r); ++p < f;) o.call(this, u = n[p], p) ? c.push([+h.call(this, u, p), +d.call(this, u, p)]) : c.length && (a(), c = []);
                return c.length && a(), l.length ? l.join("") : null
            }
            var e = Le,
                r = Ie,
                o = In,
                i = ki,
                a = i.key,
                s = .7;
            return n.x = function(t) {
                return arguments.length ? (e = t, n) : e
            }, n.y = function(t) {
                return arguments.length ? (r = t, n) : r
            }, n.defined = function(t) {
                return arguments.length ? (o = t, n) : o
            }, n.interpolate = function(t) {
                return arguments.length ? (a = "function" == typeof t ? i = t : (i = Lu.get(t) || ki).key, n) : a
            }, n.tension = function(t) {
                return arguments.length ? (s = t, n) : s
            }, n
        }

        function ki(t) {
            return t.length > 1 ? t.join("L") : t + "Z"
        }

        function Ci(t) {
            return t.join("L") + "Z"
        }

        function Ai(t) {
            for (var n = 0, e = t.length, r = t[0], o = [r[0], ",", r[1]]; ++n < e;) o.push("H", (r[0] + (r = t[n])[0]) / 2, "V", r[1]);
            return e > 1 && o.push("H", r[0]), o.join("")
        }

        function Pi(t) {
            for (var n = 0, e = t.length, r = t[0], o = [r[0], ",", r[1]]; ++n < e;) o.push("V", (r = t[n])[1], "H", r[0]);
            return o.join("")
        }

        function Ei(t) {
            for (var n = 0, e = t.length, r = t[0], o = [r[0], ",", r[1]]; ++n < e;) o.push("H", (r = t[n])[0], "V", r[1]);
            return o.join("")
        }

        function Ni(t, n) {
            return t.length < 4 ? ki(t) : t[1] + Li(t.slice(1, -1), Ii(t, n))
        }

        function Oi(t, n) {
            return t.length < 3 ? Ci(t) : t[0] + Li((t.push(t[0]), t), Ii([t[t.length - 2]].concat(t, [t[1]]), n))
        }

        function $i(t, n) {
            return t.length < 3 ? ki(t) : t[0] + Li(t, Ii(t, n))
        }

        function Li(t, n) {
            if (n.length < 1 || t.length != n.length && t.length != n.length + 2) return ki(t);
            var e = t.length != n.length,
                r = "",
                o = t[0],
                i = t[1],
                a = n[0],
                s = a,
                u = 1;
            if (e && (r += "Q" + (i[0] - 2 * a[0] / 3) + "," + (i[1] - 2 * a[1] / 3) + "," + i[0] + "," + i[1], o = t[1], u = 2), n.length > 1) {
                s = n[1], i = t[u], u++, r += "C" + (o[0] + a[0]) + "," + (o[1] + a[1]) + "," + (i[0] - s[0]) + "," + (i[1] - s[1]) + "," + i[0] + "," + i[1];
                for (var l = 2; l < n.length; l++, u++) i = t[u], s = n[l], r += "S" + (i[0] - s[0]) + "," + (i[1] - s[1]) + "," + i[0] + "," + i[1]
            }
            if (e) {
                var c = t[u];
                r += "Q" + (i[0] + 2 * s[0] / 3) + "," + (i[1] + 2 * s[1] / 3) + "," + c[0] + "," + c[1]
            }
            return r
        }

        function Ii(t, n) {
            for (var e, r = [], o = (1 - n) / 2, i = t[0], a = t[1], s = 1, u = t.length; ++s < u;) e = i, i = a, a = t[s], r.push([o * (a[0] - e[0]), o * (a[1] - e[1])]);
            return r
        }

        function Ri(t) {
            if (t.length < 3) return ki(t);
            var n = 1,
                e = t.length,
                r = t[0],
                o = r[0],
                i = r[1],
                a = [o, o, o, (r = t[1])[0]],
                s = [i, i, i, r[1]],
                u = [o, ",", i, "L", Ui(Du, a), ",", Ui(Du, s)];
            for (t.push(t[e - 1]); ++n <= e;) r = t[n], a.shift(), a.push(r[0]), s.shift(), s.push(r[1]), zi(u, a, s);
            return t.pop(), u.push("L", r), u.join("")
        }

        function Di(t) {
            if (t.length < 4) return ki(t);
            for (var n, e = [], r = -1, o = t.length, i = [0], a = [0]; ++r < 3;) n = t[r], i.push(n[0]), a.push(n[1]);
            for (e.push(Ui(Du, i) + "," + Ui(Du, a)), --r; ++r < o;) n = t[r], i.shift(), i.push(n[0]), a.shift(), a.push(n[1]), zi(e, i, a);
            return e.join("")
        }

        function Fi(t) {
            for (var n, e, r = -1, o = t.length, i = o + 4, a = [], s = []; ++r < 4;) e = t[r % o], a.push(e[0]), s.push(e[1]);
            for (n = [Ui(Du, a), ",", Ui(Du, s)], --r; ++r < i;) e = t[r % o], a.shift(), a.push(e[0]), s.shift(), s.push(e[1]), zi(n, a, s);
            return n.join("")
        }

        function ji(t, n) {
            var e = t.length - 1;
            if (e)
                for (var r, o, i = t[0][0], a = t[0][1], s = t[e][0] - i, u = t[e][1] - a, l = -1; ++l <= e;) r = t[l], o = l / e, r[0] = n * r[0] + (1 - n) * (i + o * s), r[1] = n * r[1] + (1 - n) * (a + o * u);
            return Ri(t)
        }

        function Ui(t, n) {
            return t[0] * n[0] + t[1] * n[1] + t[2] * n[2] + t[3] * n[3]
        }

        function zi(t, n, e) {
            t.push("C", Ui(Iu, n), ",", Ui(Iu, e), ",", Ui(Ru, n), ",", Ui(Ru, e), ",", Ui(Du, n), ",", Ui(Du, e))
        }

        function Hi(t, n) {
            return (n[1] - t[1]) / (n[0] - t[0])
        }

        function Bi(t) {
            for (var n = 0, e = t.length - 1, r = [], o = t[0], i = t[1], a = r[0] = Hi(o, i); ++n < e;) r[n] = (a + (a = Hi(o = i, i = t[n + 1]))) / 2;
            return r[n] = a, r
        }

        function Wi(t) {
            for (var n, e, r, o, i = [], a = Bi(t), s = -1, u = t.length - 1; ++s < u;) n = Hi(t[s], t[s + 1]), Ta(n) < Ua ? a[s] = a[s + 1] = 0 : (e = a[s] / n, r = a[s + 1] / n, (o = e * e + r * r) > 9 && (o = 3 * n / Math.sqrt(o), a[s] = o * e, a[s + 1] = o * r));
            for (s = -1; ++s <= u;) o = (t[Math.min(u, s + 1)][0] - t[Math.max(0, s - 1)][0]) / (6 * (1 + a[s] * a[s])), i.push([o || 0, a[s] * o || 0]);
            return i
        }

        function Gi(t) {
            return t.length < 3 ? ki(t) : t[0] + Li(t, Wi(t))
        }

        function qi(t) {
            for (var n, e, r, o = -1, i = t.length; ++o < i;) n = t[o], e = n[0], r = n[1] - Ga, n[0] = e * Math.cos(r), n[1] = e * Math.sin(r);
            return t
        }

        function Yi(t) {
            function n(n) {
                function u() {
                    g.push("M", s(t(y), p), c, l(t(v.reverse()), p), "Z")
                }
                for (var f, h, d, g = [], v = [], y = [], m = -1, _ = n.length, b = Nt(e), w = Nt(o), x = e === r ? function() {
                        return h
                    } : Nt(r), T = o === i ? function() {
                        return d
                    } : Nt(i); ++m < _;) a.call(this, f = n[m], m) ? (v.push([h = +b.call(this, f, m), d = +w.call(this, f, m)]), y.push([+x.call(this, f, m), +T.call(this, f, m)])) : v.length && (u(), v = [], y = []);
                return v.length && u(), g.length ? g.join("") : null
            }
            var e = Le,
                r = Le,
                o = 0,
                i = Ie,
                a = In,
                s = ki,
                u = s.key,
                l = s,
                c = "L",
                p = .7;
            return n.x = function(t) {
                return arguments.length ? (e = r = t, n) : r
            }, n.x0 = function(t) {
                return arguments.length ? (e = t, n) : e
            }, n.x1 = function(t) {
                return arguments.length ? (r = t, n) : r
            }, n.y = function(t) {
                return arguments.length ? (o = i = t, n) : i
            }, n.y0 = function(t) {
                return arguments.length ? (o = t, n) : o
            }, n.y1 = function(t) {
                return arguments.length ? (i = t, n) : i
            }, n.defined = function(t) {
                return arguments.length ? (a = t, n) : a
            }, n.interpolate = function(t) {
                return arguments.length ? (u = "function" == typeof t ? s = t : (s = Lu.get(t) || ki).key, l = s.reverse || s, c = s.closed ? "M" : "L", n) : u
            }, n.tension = function(t) {
                return arguments.length ? (p = t, n) : p
            }, n
        }

        function Vi(t) {
            return t.radius
        }

        function Ki(t) {
            return [t.x, t.y]
        }

        function Zi(t) {
            return function() {
                var n = t.apply(this, arguments),
                    e = n[0],
                    r = n[1] - Ga;
                return [e * Math.cos(r), e * Math.sin(r)]
            }
        }

        function Xi() {
            return 64
        }

        function Ji() {
            return "circle"
        }

        function Qi(t) {
            var n = Math.sqrt(t / Ha);
            return "M0," + n + "A" + n + "," + n + " 0 1,1 0," + -n + "A" + n + "," + n + " 0 1,1 0," + n + "Z"
        }

        function ta(t) {
            return function() {
                var n, e, r;
                (n = this[t]) && (r = n[e = n.active]) && (r.timer.c = null, r.timer.t = NaN, --n.count ? delete n[e] : delete this[t], n.active += .5, r.event && r.event.interrupt.call(this, this.__data__, r.index))
            }
        }

        function na(t, n, e) {
            return Aa(t, Wu), t.namespace = n, t.id = e, t
        }

        function ea(t, n, e, r) {
            var o = t.id,
                i = t.namespace;
            return V(t, "function" == typeof e ? function(t, a, s) {
                t[i][o].tween.set(n, r(e.call(t, t.__data__, a, s)))
            } : (e = r(e), function(t) {
                t[i][o].tween.set(n, e)
            }))
        }

        function ra(t) {
            return null == t && (t = ""),
                function() {
                    this.textContent = t
                }
        }

        function oa(t) {
            return null == t ? "__transition__" : "__transition_" + t + "__"
        }

        function ia(t, n, e, r, o) {
            function i(t) {
                var n = g.delay;
                if (l.t = n + u, n <= t) return a(t - n);
                l.c = a
            }

            function a(e) {
                var o = h.active,
                    i = h[o];
                i && (i.timer.c = null, i.timer.t = NaN, --h.count, delete h[o], i.event && i.event.interrupt.call(t, t.__data__, i.index));
                for (var a in h)
                    if (+a < r) {
                        var d = h[a];
                        d.timer.c = null, d.timer.t = NaN, --h.count, delete h[a]
                    }
                l.c = s, Rt(function() {
                    return l.c && s(e || 1) && (l.c = null, l.t = NaN), 1
                }, 0, u), h.active = r, g.event && g.event.start.call(t, t.__data__, n), f = [], g.tween.forEach(function(e, r) {
                    (r = r.call(t, t.__data__, n)) && f.push(r)
                }), p = g.ease, c = g.duration
            }

            function s(o) {
                for (var i = o / c, a = p(i), s = f.length; s > 0;) f[--s].call(t, a);
                if (i >= 1) return g.event && g.event.end.call(t, t.__data__, n), --h.count ? delete h[r] : delete t[e], 1
            }
            var u, l, c, p, f, h = t[e] || (t[e] = {
                    active: 0,
                    count: 0
                }),
                g = h[r];
            g || (u = o.time, l = Rt(i, 0, u), g = h[r] = {
                tween: new d,
                time: u,
                timer: l,
                delay: o.delay,
                duration: o.duration,
                ease: o.ease,
                index: n
            }, o = null, ++h.count)
        }

        function aa(t, n, e) {
            t.attr("transform", function(t) {
                var r = n(t);
                return "translate(" + (isFinite(r) ? r : e(t)) + ",0)"
            })
        }

        function sa(t, n, e) {
            t.attr("transform", function(t) {
                var r = n(t);
                return "translate(0," + (isFinite(r) ? r : e(t)) + ")"
            })
        }

        function ua(t) {
            return t.toISOString()
        }

        function la(t, n, e) {
            function r(n) {
                return t(n)
            }

            function o(t, e) {
                var r = t[1] - t[0],
                    o = r / e,
                    i = ha.bisect(Qu, o);
                return i == Qu.length ? [n.year, oi(t.map(function(t) {
                    return t / 31536e6
                }), e)[2]] : i ? n[o / Qu[i - 1] < Qu[i] / o ? i - 1 : i] : [el, oi(t, e)[2]]
            }
            return r.invert = function(n) {
                return ca(t.invert(n))
            }, r.domain = function(n) {
                return arguments.length ? (t.domain(n), r) : t.domain().map(ca)
            }, r.nice = function(t, n) {
                function e(e) {
                    return !isNaN(e) && !t.range(e, ca(+e + 1), n).length
                }
                var i = r.domain(),
                    a = Ko(i),
                    s = null == t ? o(a, 10) : "number" == typeof t && o(a, t);
                return s && (t = s[0], n = s[1]), r.domain(Jo(i, n > 1 ? {
                    floor: function(n) {
                        for (; e(n = t.floor(n));) n = ca(n - 1);
                        return n
                    },
                    ceil: function(n) {
                        for (; e(n = t.ceil(n));) n = ca(+n + 1);
                        return n
                    }
                } : t))
            }, r.ticks = function(t, n) {
                var e = Ko(r.domain()),
                    i = null == t ? o(e, 10) : "number" == typeof t ? o(e, t) : !t.range && [{
                        range: t
                    }, n];
                return i && (t = i[0], n = i[1]), t.range(e[0], ca(+e[1] + 1), n < 1 ? 1 : n)
            }, r.tickFormat = function() {
                return e
            }, r.copy = function() {
                return la(t.copy(), n, e)
            }, ei(r, t)
        }

        function ca(t) {
            return new Date(t)
        }

        function pa(t) {
            return JSON.parse(t.responseText)
        }

        function fa(t) {
            var n = va.createRange();
            return n.selectNode(va.body), n.createContextualFragment(t.responseText)
        }
        var ha = {
                version: "3.5.17"
            },
            da = [].slice,
            ga = function(t) {
                return da.call(t)
            },
            va = this.document;
        if (va) try {
            ga(va.documentElement.childNodes)[0].nodeType
        } catch (t) {
            ga = function(t) {
                for (var n = t.length, e = new Array(n); n--;) e[n] = t[n];
                return e
            }
        }
        if (Date.now || (Date.now = function() {
                return +new Date
            }), va) try {
            va.createElement("DIV").style.setProperty("opacity", 0, "")
        } catch (t) {
            var ya = this.Element.prototype,
                ma = ya.setAttribute,
                _a = ya.setAttributeNS,
                ba = this.CSSStyleDeclaration.prototype,
                wa = ba.setProperty;
            ya.setAttribute = function(t, n) {
                ma.call(this, t, n + "")
            }, ya.setAttributeNS = function(t, n, e) {
                _a.call(this, t, n, e + "")
            }, ba.setProperty = function(t, n, e) {
                wa.call(this, t, n + "", e)
            }
        }
        ha.ascending = s, ha.descending = function(t, n) {
            return n < t ? -1 : n > t ? 1 : n >= t ? 0 : NaN
        }, ha.min = function(t, n) {
            var e, r, o = -1,
                i = t.length;
            if (1 === arguments.length) {
                for (; ++o < i;)
                    if (null != (r = t[o]) && r >= r) {
                        e = r;
                        break
                    }
                for (; ++o < i;) null != (r = t[o]) && e > r && (e = r)
            } else {
                for (; ++o < i;)
                    if (null != (r = n.call(t, t[o], o)) && r >= r) {
                        e = r;
                        break
                    }
                for (; ++o < i;) null != (r = n.call(t, t[o], o)) && e > r && (e = r)
            }
            return e
        }, ha.max = function(t, n) {
            var e, r, o = -1,
                i = t.length;
            if (1 === arguments.length) {
                for (; ++o < i;)
                    if (null != (r = t[o]) && r >= r) {
                        e = r;
                        break
                    }
                for (; ++o < i;) null != (r = t[o]) && r > e && (e = r)
            } else {
                for (; ++o < i;)
                    if (null != (r = n.call(t, t[o], o)) && r >= r) {
                        e = r;
                        break
                    }
                for (; ++o < i;) null != (r = n.call(t, t[o], o)) && r > e && (e = r)
            }
            return e
        }, ha.extent = function(t, n) {
            var e, r, o, i = -1,
                a = t.length;
            if (1 === arguments.length) {
                for (; ++i < a;)
                    if (null != (r = t[i]) && r >= r) {
                        e = o = r;
                        break
                    }
                for (; ++i < a;) null != (r = t[i]) && (e > r && (e = r), o < r && (o = r))
            } else {
                for (; ++i < a;)
                    if (null != (r = n.call(t, t[i], i)) && r >= r) {
                        e = o = r;
                        break
                    }
                for (; ++i < a;) null != (r = n.call(t, t[i], i)) && (e > r && (e = r), o < r && (o = r))
            }
            return [e, o]
        }, ha.sum = function(t, n) {
            var e, r = 0,
                o = t.length,
                i = -1;
            if (1 === arguments.length)
                for (; ++i < o;) l(e = +t[i]) && (r += e);
            else
                for (; ++i < o;) l(e = +n.call(t, t[i], i)) && (r += e);
            return r
        }, ha.mean = function(t, n) {
            var e, r = 0,
                o = t.length,
                i = -1,
                a = o;
            if (1 === arguments.length)
                for (; ++i < o;) l(e = u(t[i])) ? r += e : --a;
            else
                for (; ++i < o;) l(e = u(n.call(t, t[i], i))) ? r += e : --a;
            if (a) return r / a
        }, ha.quantile = function(t, n) {
            var e = (t.length - 1) * n + 1,
                r = Math.floor(e),
                o = +t[r - 1],
                i = e - r;
            return i ? o + i * (t[r] - o) : o
        }, ha.median = function(t, n) {
            var e, r = [],
                o = t.length,
                i = -1;
            if (1 === arguments.length)
                for (; ++i < o;) l(e = u(t[i])) && r.push(e);
            else
                for (; ++i < o;) l(e = u(n.call(t, t[i], i))) && r.push(e);
            if (r.length) return ha.quantile(r.sort(s), .5)
        }, ha.variance = function(t, n) {
            var e, r, o = t.length,
                i = 0,
                a = 0,
                s = -1,
                c = 0;
            if (1 === arguments.length)
                for (; ++s < o;) l(e = u(t[s])) && (r = e - i, i += r / ++c, a += r * (e - i));
            else
                for (; ++s < o;) l(e = u(n.call(t, t[s], s))) && (r = e - i, i += r / ++c, a += r * (e - i));
            if (c > 1) return a / (c - 1)
        }, ha.deviation = function() {
            var t = ha.variance.apply(this, arguments);
            return t ? Math.sqrt(t) : t
        };
        var xa = c(s);
        ha.bisectLeft = xa.left, ha.bisect = ha.bisectRight = xa.right, ha.bisector = function(t) {
            return c(1 === t.length ? function(n, e) {
                return s(t(n), e)
            } : t)
        }, ha.shuffle = function(t, n, e) {
            (i = arguments.length) < 3 && (e = t.length, i < 2 && (n = 0));
            for (var r, o, i = e - n; i;) o = Math.random() * i-- | 0, r = t[i + n], t[i + n] = t[o + n], t[o + n] = r;
            return t
        }, ha.permute = function(t, n) {
            for (var e = n.length, r = new Array(e); e--;) r[e] = t[n[e]];
            return r
        }, ha.pairs = function(t) {
            for (var n = 0, e = t.length - 1, r = t[0], o = new Array(e < 0 ? 0 : e); n < e;) o[n] = [r, r = t[++n]];
            return o
        }, ha.transpose = function(t) {
            if (!(o = t.length)) return [];
            for (var n = -1, e = ha.min(t, p), r = new Array(e); ++n < e;)
                for (var o, i = -1, a = r[n] = new Array(o); ++i < o;) a[i] = t[i][n];
            return r
        }, ha.zip = function() {
            return ha.transpose(arguments)
        }, ha.keys = function(t) {
            var n = [];
            for (var e in t) n.push(e);
            return n
        }, ha.values = function(t) {
            var n = [];
            for (var e in t) n.push(t[e]);
            return n
        }, ha.entries = function(t) {
            var n = [];
            for (var e in t) n.push({
                key: e,
                value: t[e]
            });
            return n
        }, ha.merge = function(t) {
            for (var n, e, r, o = t.length, i = -1, a = 0; ++i < o;) a += t[i].length;
            for (e = new Array(a); --o >= 0;)
                for (r = t[o], n = r.length; --n >= 0;) e[--a] = r[n];
            return e
        };
        var Ta = Math.abs;
        ha.range = function(t, n, e) {
            if (arguments.length < 3 && (e = 1, arguments.length < 2 && (n = t, t = 0)), (n - t) / e == 1 / 0) throw new Error("infinite range");
            var r, o = [],
                i = f(Ta(e)),
                a = -1;
            if (t *= i, n *= i, e *= i, e < 0)
                for (;
                    (r = t + e * ++a) > n;) o.push(r / i);
            else
                for (;
                    (r = t + e * ++a) < n;) o.push(r / i);
            return o
        }, ha.map = function(t, n) {
            var e = new d;
            if (t instanceof d) t.forEach(function(t, n) {
                e.set(t, n)
            });
            else if (Array.isArray(t)) {
                var r, o = -1,
                    i = t.length;
                if (1 === arguments.length)
                    for (; ++o < i;) e.set(o, t[o]);
                else
                    for (; ++o < i;) e.set(n.call(t, r = t[o], o), r)
            } else
                for (var a in t) e.set(a, t[a]);
            return e
        };
        var Sa = "__proto__",
            Ma = "\0";
        h(d, {
            has: y,
            get: function(t) {
                return this._[g(t)]
            },
            set: function(t, n) {
                return this._[g(t)] = n
            },
            remove: m,
            keys: _,
            values: function() {
                var t = [];
                for (var n in this._) t.push(this._[n]);
                return t
            },
            entries: function() {
                var t = [];
                for (var n in this._) t.push({
                    key: v(n),
                    value: this._[n]
                });
                return t
            },
            size: b,
            empty: w,
            forEach: function(t) {
                for (var n in this._) t.call(this, v(n), this._[n])
            }
        }), ha.nest = function() {
            function t(n, a, s) {
                if (s >= i.length) return r ? r.call(o, a) : e ? a.sort(e) : a;
                for (var u, l, c, p, f = -1, h = a.length, g = i[s++], v = new d; ++f < h;)(p = v.get(u = g(l = a[f]))) ? p.push(l) : v.set(u, [l]);
                return n ? (l = n(), c = function(e, r) {
                    l.set(e, t(n, r, s))
                }) : (l = {}, c = function(e, r) {
                    l[e] = t(n, r, s)
                }), v.forEach(c), l
            }

            function n(t, e) {
                if (e >= i.length) return t;
                var r = [],
                    o = a[e++];
                return t.forEach(function(t, o) {
                    r.push({
                        key: t,
                        values: n(o, e)
                    })
                }), o ? r.sort(function(t, n) {
                    return o(t.key, n.key)
                }) : r
            }
            var e, r, o = {},
                i = [],
                a = [];
            return o.map = function(n, e) {
                return t(e, n, 0)
            }, o.entries = function(e) {
                return n(t(ha.map, e, 0), 0)
            }, o.key = function(t) {
                return i.push(t), o
            }, o.sortKeys = function(t) {
                return a[i.length - 1] = t, o
            }, o.sortValues = function(t) {
                return e = t, o
            }, o.rollup = function(t) {
                return r = t, o
            }, o
        }, ha.set = function(t) {
            var n = new x;
            if (t)
                for (var e = 0, r = t.length; e < r; ++e) n.add(t[e]);
            return n
        }, h(x, {
            has: y,
            add: function(t) {
                return this._[g(t += "")] = !0, t
            },
            remove: m,
            values: _,
            size: b,
            empty: w,
            forEach: function(t) {
                for (var n in this._) t.call(this, v(n))
            }
        }), ha.behavior = {}, ha.rebind = function(t, n) {
            for (var e, r = 1, o = arguments.length; ++r < o;) t[e = arguments[r]] = S(t, n, n[e]);
            return t
        };
        var ka = ["webkit", "ms", "moz", "Moz", "o", "O"];
        ha.dispatch = function() {
            for (var t = new C, n = -1, e = arguments.length; ++n < e;) t[arguments[n]] = A(t);
            return t
        }, C.prototype.on = function(t, n) {
            var e = t.indexOf("."),
                r = "";
            if (e >= 0 && (r = t.slice(e + 1), t = t.slice(0, e)), t) return arguments.length < 2 ? this[t].on(r) : this[t].on(r, n);
            if (2 === arguments.length) {
                if (null == n)
                    for (t in this) this.hasOwnProperty(t) && this[t].on(r, null);
                return this
            }
        }, ha.event = null, ha.requote = function(t) {
            return t.replace(Ca, "\\$&")
        };
        var Ca = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,
            Aa = {}.__proto__ ? function(t, n) {
                t.__proto__ = n
            } : function(t, n) {
                for (var e in n) t[e] = n[e]
            },
            Pa = function(t, n) {
                return n.querySelector(t)
            },
            Ea = function(t, n) {
                return n.querySelectorAll(t)
            },
            Na = function(t, n) {
                var e = t.matches || t[M(t, "matchesSelector")];
                return (Na = function(t, n) {
                    return e.call(t, n)
                })(t, n)
            };
        "function" == typeof Sizzle && (Pa = function(t, n) {
            return Sizzle(t, n)[0] || null
        }, Ea = Sizzle, Na = Sizzle.matchesSelector), ha.selection = function() {
            return ha.select(va.documentElement)
        };
        var Oa = ha.selection.prototype = [];
        Oa.select = function(t) {
            var n, e, r, o, i = [];
            t = $(t);
            for (var a = -1, s = this.length; ++a < s;) {
                i.push(n = []), n.parentNode = (r = this[a]).parentNode;
                for (var u = -1, l = r.length; ++u < l;)(o = r[u]) ? (n.push(e = t.call(o, o.__data__, u, a)), e && "__data__" in o && (e.__data__ = o.__data__)) : n.push(null)
            }
            return O(i)
        }, Oa.selectAll = function(t) {
            var n, e, r = [];
            t = L(t);
            for (var o = -1, i = this.length; ++o < i;)
                for (var a = this[o], s = -1, u = a.length; ++s < u;)(e = a[s]) && (r.push(n = ga(t.call(e, e.__data__, s, o))), n.parentNode = e);
            return O(r)
        };
        var $a = "http://www.w3.org/1999/xhtml",
            La = {
                svg: "http://www.w3.org/2000/svg",
                xhtml: $a,
                xlink: "http://www.w3.org/1999/xlink",
                xml: "http://www.w3.org/XML/1998/namespace",
                xmlns: "http://www.w3.org/2000/xmlns/"
            };
        ha.ns = {
            prefix: La,
            qualify: function(t) {
                var n = t.indexOf(":"),
                    e = t;
                return n >= 0 && "xmlns" !== (e = t.slice(0, n)) && (t = t.slice(n + 1)), La.hasOwnProperty(e) ? {
                    space: La[e],
                    local: t
                } : t
            }
        }, Oa.attr = function(t, n) {
            if (arguments.length < 2) {
                if ("string" == typeof t) {
                    var e = this.node();
                    return t = ha.ns.qualify(t), t.local ? e.getAttributeNS(t.space, t.local) : e.getAttribute(t)
                }
                for (n in t) this.each(I(n, t[n]));
                return this
            }
            return this.each(I(t, n))
        }, Oa.classed = function(t, n) {
            if (arguments.length < 2) {
                if ("string" == typeof t) {
                    var e = this.node(),
                        r = (t = F(t)).length,
                        o = -1;
                    if (n = e.classList) {
                        for (; ++o < r;)
                            if (!n.contains(t[o])) return !1
                    } else
                        for (n = e.getAttribute("class"); ++o < r;)
                            if (!D(t[o]).test(n)) return !1;
                    return !0
                }
                for (n in t) this.each(j(n, t[n]));
                return this
            }
            return this.each(j(t, n))
        }, Oa.style = function(t, n, e) {
            var r = arguments.length;
            if (r < 3) {
                if ("string" != typeof t) {
                    r < 2 && (n = "");
                    for (e in t) this.each(z(e, t[e], n));
                    return this
                }
                if (r < 2) {
                    var o = this.node();
                    return a(o).getComputedStyle(o, null).getPropertyValue(t)
                }
                e = ""
            }
            return this.each(z(t, n, e))
        }, Oa.property = function(t, n) {
            if (arguments.length < 2) {
                if ("string" == typeof t) return this.node()[t];
                for (n in t) this.each(H(n, t[n]));
                return this
            }
            return this.each(H(t, n))
        }, Oa.text = function(t) {
            return arguments.length ? this.each("function" == typeof t ? function() {
                var n = t.apply(this, arguments);
                this.textContent = null == n ? "" : n
            } : null == t ? function() {
                this.textContent = ""
            } : function() {
                this.textContent = t
            }) : this.node().textContent
        }, Oa.html = function(t) {
            return arguments.length ? this.each("function" == typeof t ? function() {
                var n = t.apply(this, arguments);
                this.innerHTML = null == n ? "" : n
            } : null == t ? function() {
                this.innerHTML = ""
            } : function() {
                this.innerHTML = t
            }) : this.node().innerHTML
        }, Oa.append = function(t) {
            return t = B(t), this.select(function() {
                return this.appendChild(t.apply(this, arguments))
            })
        }, Oa.insert = function(t, n) {
            return t = B(t), n = $(n), this.select(function() {
                return this.insertBefore(t.apply(this, arguments), n.apply(this, arguments) || null)
            })
        }, Oa.remove = function() {
            return this.each(W)
        }, Oa.data = function(t, n) {
            function e(t, e) {
                var r, o, i, a = t.length,
                    c = e.length,
                    p = Math.min(a, c),
                    f = new Array(c),
                    h = new Array(c),
                    g = new Array(a);
                if (n) {
                    var v, y = new d,
                        m = new Array(a);
                    for (r = -1; ++r < a;)(o = t[r]) && (y.has(v = n.call(o, o.__data__, r)) ? g[r] = o : y.set(v, o), m[r] = v);
                    for (r = -1; ++r < c;)(o = y.get(v = n.call(e, i = e[r], r))) ? !0 !== o && (f[r] = o, o.__data__ = i) : h[r] = G(i), y.set(v, !0);
                    for (r = -1; ++r < a;) r in m && !0 !== y.get(m[r]) && (g[r] = t[r])
                } else {
                    for (r = -1; ++r < p;) o = t[r], i = e[r], o ? (o.__data__ = i, f[r] = o) : h[r] = G(i);
                    for (; r < c; ++r) h[r] = G(e[r]);
                    for (; r < a; ++r) g[r] = t[r]
                }
                h.update = f, h.parentNode = f.parentNode = g.parentNode = t.parentNode, s.push(h), u.push(f), l.push(g)
            }
            var r, o, i = -1,
                a = this.length;
            if (!arguments.length) {
                for (t = new Array(a = (r = this[0]).length); ++i < a;)(o = r[i]) && (t[i] = o.__data__);
                return t
            }
            var s = K([]),
                u = O([]),
                l = O([]);
            if ("function" == typeof t)
                for (; ++i < a;) e(r = this[i], t.call(r, r.parentNode.__data__, i));
            else
                for (; ++i < a;) e(r = this[i], t);
            return u.enter = function() {
                return s
            }, u.exit = function() {
                return l
            }, u
        }, Oa.datum = function(t) {
            return arguments.length ? this.property("__data__", t) : this.property("__data__")
        }, Oa.filter = function(t) {
            var n, e, r, o = [];
            "function" != typeof t && (t = q(t));
            for (var i = 0, a = this.length; i < a; i++) {
                o.push(n = []), n.parentNode = (e = this[i]).parentNode;
                for (var s = 0, u = e.length; s < u; s++)(r = e[s]) && t.call(r, r.__data__, s, i) && n.push(r)
            }
            return O(o)
        }, Oa.order = function() {
            for (var t = -1, n = this.length; ++t < n;)
                for (var e, r = this[t], o = r.length - 1, i = r[o]; --o >= 0;)(e = r[o]) && (i && i !== e.nextSibling && i.parentNode.insertBefore(e, i), i = e);
            return this
        }, Oa.sort = function(t) {
            t = Y.apply(this, arguments);
            for (var n = -1, e = this.length; ++n < e;) this[n].sort(t);
            return this.order()
        }, Oa.each = function(t) {
            return V(this, function(n, e, r) {
                t.call(n, n.__data__, e, r)
            })
        }, Oa.call = function(t) {
            var n = ga(arguments);
            return t.apply(n[0] = this, n), this
        }, Oa.empty = function() {
            return !this.node()
        }, Oa.node = function() {
            for (var t = 0, n = this.length; t < n; t++)
                for (var e = this[t], r = 0, o = e.length; r < o; r++) {
                    var i = e[r];
                    if (i) return i
                }
            return null
        }, Oa.size = function() {
            var t = 0;
            return V(this, function() {
                ++t
            }), t
        };
        var Ia = [];
        ha.selection.enter = K, ha.selection.enter.prototype = Ia, Ia.append = Oa.append, Ia.empty = Oa.empty, Ia.node = Oa.node, Ia.call = Oa.call, Ia.size = Oa.size, Ia.select = function(t) {
            for (var n, e, r, o, i, a = [], s = -1, u = this.length; ++s < u;) {
                r = (o = this[s]).update, a.push(n = []), n.parentNode = o.parentNode;
                for (var l = -1, c = o.length; ++l < c;)(i = o[l]) ? (n.push(r[l] = e = t.call(o.parentNode, i.__data__, l, s)), e.__data__ = i.__data__) : n.push(null)
            }
            return O(a)
        }, Ia.insert = function(t, n) {
            return arguments.length < 2 && (n = Z(this)), Oa.insert.call(this, t, n)
        }, ha.select = function(t) {
            var n;
            return "string" == typeof t ? (n = [Pa(t, va)], n.parentNode = va.documentElement) : (n = [t], n.parentNode = i(t)), O([n])
        }, ha.selectAll = function(t) {
            var n;
            return "string" == typeof t ? (n = ga(Ea(t, va)), n.parentNode = va.documentElement) : (n = ga(t), n.parentNode = null), O([n])
        }, Oa.on = function(t, n, e) {
            var r = arguments.length;
            if (r < 3) {
                if ("string" != typeof t) {
                    r < 2 && (n = !1);
                    for (e in t) this.each(X(e, t[e], n));
                    return this
                }
                if (r < 2) return (r = this.node()["__on" + t]) && r._;
                e = !1
            }
            return this.each(X(t, n, e))
        };
        var Ra = ha.map({
            mouseenter: "mouseover",
            mouseleave: "mouseout"
        });
        va && Ra.forEach(function(t) {
            "on" + t in va && Ra.remove(t)
        });
        var Da, Fa = 0;
        ha.mouse = function(t) {
            return nt(t, E())
        };
        var ja = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
        ha.touch = function(t, n, e) {
            if (arguments.length < 3 && (e = n, n = E().changedTouches), n)
                for (var r, o = 0, i = n.length; o < i; ++o)
                    if ((r = n[o]).identifier === e) return nt(t, r)
        }, ha.behavior.drag = function() {
            function t() {
                this.on("mousedown.drag", o).on("touchstart.drag", i)
            }

            function n(t, n, o, i, a) {
                return function() {
                    function s() {
                        var t, e, r = n(f, g);
                        r && (t = r[0] - _[0], e = r[1] - _[1], d |= t | e, _ = r, h({
                            type: "drag",
                            x: r[0] + l[0],
                            y: r[1] + l[1],
                            dx: t,
                            dy: e
                        }))
                    }

                    function u() {
                        n(f, g) && (y.on(i + v, null).on(a + v, null), m(d), h({
                            type: "dragend"
                        }))
                    }
                    var l, c = this,
                        p = ha.event.target.correspondingElement || ha.event.target,
                        f = c.parentNode,
                        h = e.of(c, arguments),
                        d = 0,
                        g = t(),
                        v = ".drag" + (null == g ? "" : "-" + g),
                        y = ha.select(o(p)).on(i + v, s).on(a + v, u),
                        m = tt(p),
                        _ = n(f, g);
                    r ? (l = r.apply(c, arguments), l = [l.x - _[0], l.y - _[1]]) : l = [0, 0], h({
                        type: "dragstart"
                    })
                }
            }
            var e = N(t, "drag", "dragstart", "dragend"),
                r = null,
                o = n(k, ha.mouse, a, "mousemove", "mouseup"),
                i = n(et, ha.touch, T, "touchmove", "touchend");
            return t.origin = function(n) {
                return arguments.length ? (r = n, t) : r
            }, ha.rebind(t, e, "on")
        }, ha.touches = function(t, n) {
            return arguments.length < 2 && (n = E().touches), n ? ga(n).map(function(n) {
                var e = nt(t, n);
                return e.identifier = n.identifier, e
            }) : []
        };
        var Ua = 1e-6,
            za = Ua * Ua,
            Ha = Math.PI,
            Ba = 2 * Ha,
            Wa = Ba - Ua,
            Ga = Ha / 2,
            qa = Ha / 180,
            Ya = 180 / Ha,
            Va = Math.SQRT2;
        ha.interpolateZoom = function(t, n) {
            var e, r, o = t[0],
                i = t[1],
                a = t[2],
                s = n[0],
                u = n[1],
                l = n[2],
                c = s - o,
                p = u - i,
                f = c * c + p * p;
            if (f < za) r = Math.log(l / a) / Va, e = function(t) {
                return [o + t * c, i + t * p, a * Math.exp(Va * t * r)]
            };
            else {
                var h = Math.sqrt(f),
                    d = (l * l - a * a + 4 * f) / (2 * a * 2 * h),
                    g = (l * l - a * a - 4 * f) / (2 * l * 2 * h),
                    v = Math.log(Math.sqrt(d * d + 1) - d),
                    y = Math.log(Math.sqrt(g * g + 1) - g);
                r = (y - v) / Va, e = function(t) {
                    var n = t * r,
                        e = ut(v),
                        s = a / (2 * h) * (e * lt(Va * n + v) - st(v));
                    return [o + s * c, i + s * p, a * e / ut(Va * n + v)]
                }
            }
            return e.duration = 1e3 * r, e
        }, ha.behavior.zoom = function() {
            function t(t) {
                t.on(E, p).on(Za + ".zoom", h).on("dblclick.zoom", d).on(L, f)
            }

            function n(t) {
                return [(t[0] - S.x) / S.k, (t[1] - S.y) / S.k]
            }

            function e(t) {
                return [t[0] * S.k + S.x, t[1] * S.k + S.y]
            }

            function r(t) {
                S.k = Math.max(k[0], Math.min(k[1], t))
            }

            function o(t, n) {
                n = e(n), S.x += t[0] - n[0], S.y += t[1] - n[1]
            }

            function i(n, e, i, a) {
                n.__chart__ = {
                    x: S.x,
                    y: S.y,
                    k: S.k
                }, r(Math.pow(2, a)), o(v = e, i), n = ha.select(n), C > 0 && (n = n.transition().duration(C)), n.call(t.event)
            }

            function s() {
                w && w.domain(b.range().map(function(t) {
                    return (t - S.x) / S.k
                }).map(b.invert)), T && T.domain(x.range().map(function(t) {
                    return (t - S.y) / S.k
                }).map(x.invert))
            }

            function u(t) {
                A++ || t({
                    type: "zoomstart"
                })
            }

            function l(t) {
                s(), t({
                    type: "zoom",
                    scale: S.k,
                    translate: [S.x, S.y]
                })
            }

            function c(t) {
                --A || (t({
                    type: "zoomend"
                }), v = null)
            }

            function p() {
                function t() {
                    s = 1, o(ha.mouse(r), f), l(i)
                }

                function e() {
                    p.on(O, null).on($, null), h(s), c(i)
                }
                var r = this,
                    i = I.of(r, arguments),
                    s = 0,
                    p = ha.select(a(r)).on(O, t).on($, e),
                    f = n(ha.mouse(r)),
                    h = tt(r);
                Bu.call(r), u(i)
            }

            function f() {
                function t() {
                    var t = ha.touches(d);
                    return h = S.k, t.forEach(function(t) {
                        t.identifier in v && (v[t.identifier] = n(t))
                    }), t
                }

                function e() {
                    var n = ha.event.target;
                    ha.select(n).on(b, a).on(w, s), x.push(n);
                    for (var e = ha.event.changedTouches, r = 0, o = e.length; r < o; ++r) v[e[r].identifier] = null;
                    var u = t(),
                        l = Date.now();
                    if (1 === u.length) {
                        if (l - _ < 500) {
                            var c = u[0];
                            i(d, c, v[c.identifier], Math.floor(Math.log(S.k) / Math.LN2) + 1), P()
                        }
                        _ = l
                    } else if (u.length > 1) {
                        var c = u[0],
                            p = u[1],
                            f = c[0] - p[0],
                            h = c[1] - p[1];
                        y = f * f + h * h
                    }
                }

                function a() {
                    var t, n, e, i, a = ha.touches(d);
                    Bu.call(d);
                    for (var s = 0, u = a.length; s < u; ++s, i = null)
                        if (e = a[s], i = v[e.identifier]) {
                            if (n) break;
                            t = e, n = i
                        }
                    if (i) {
                        var c = (c = e[0] - t[0]) * c + (c = e[1] - t[1]) * c,
                            p = y && Math.sqrt(c / y);
                        t = [(t[0] + e[0]) / 2, (t[1] + e[1]) / 2], n = [(n[0] + i[0]) / 2, (n[1] + i[1]) / 2], r(p * h)
                    }
                    _ = null, o(t, n), l(g)
                }

                function s() {
                    if (ha.event.touches.length) {
                        for (var n = ha.event.changedTouches, e = 0, r = n.length; e < r; ++e) delete v[n[e].identifier];
                        for (var o in v) return void t()
                    }
                    ha.selectAll(x).on(m, null), T.on(E, p).on(L, f), M(), c(g)
                }
                var h, d = this,
                    g = I.of(d, arguments),
                    v = {},
                    y = 0,
                    m = ".zoom-" + ha.event.changedTouches[0].identifier,
                    b = "touchmove" + m,
                    w = "touchend" + m,
                    x = [],
                    T = ha.select(d),
                    M = tt(d);
                e(), u(g), T.on(E, null).on(L, e)
            }

            function h() {
                var t = I.of(this, arguments);
                m ? clearTimeout(m) : (Bu.call(this), g = n(v = y || ha.mouse(this)), u(t)), m = setTimeout(function() {
                    m = null, c(t)
                }, 50), P(), r(Math.pow(2, .002 * Ka()) * S.k), o(v, g), l(t)
            }

            function d() {
                var t = ha.mouse(this),
                    e = Math.log(S.k) / Math.LN2;
                i(this, t, n(t), ha.event.shiftKey ? Math.ceil(e) - 1 : Math.floor(e) + 1)
            }
            var g, v, y, m, _, b, w, x, T, S = {
                    x: 0,
                    y: 0,
                    k: 1
                },
                M = [960, 500],
                k = Xa,
                C = 250,
                A = 0,
                E = "mousedown.zoom",
                O = "mousemove.zoom",
                $ = "mouseup.zoom",
                L = "touchstart.zoom",
                I = N(t, "zoomstart", "zoom", "zoomend");
            return Za || (Za = "onwheel" in va ? (Ka = function() {
                return -ha.event.deltaY * (ha.event.deltaMode ? 120 : 1)
            }, "wheel") : "onmousewheel" in va ? (Ka = function() {
                return ha.event.wheelDelta
            }, "mousewheel") : (Ka = function() {
                return -ha.event.detail
            }, "MozMousePixelScroll")), t.event = function(t) {
                t.each(function() {
                    var t = I.of(this, arguments),
                        n = S;
                    zu ? ha.select(this).transition().each("start.zoom", function() {
                        S = this.__chart__ || {
                            x: 0,
                            y: 0,
                            k: 1
                        }, u(t)
                    }).tween("zoom:zoom", function() {
                        var e = M[0],
                            r = M[1],
                            o = v ? v[0] : e / 2,
                            i = v ? v[1] : r / 2,
                            a = ha.interpolateZoom([(o - S.x) / S.k, (i - S.y) / S.k, e / S.k], [(o - n.x) / n.k, (i - n.y) / n.k, e / n.k]);
                        return function(n) {
                            var r = a(n),
                                s = e / r[2];
                            this.__chart__ = S = {
                                x: o - r[0] * s,
                                y: i - r[1] * s,
                                k: s
                            }, l(t)
                        }
                    }).each("interrupt.zoom", function() {
                        c(t)
                    }).each("end.zoom", function() {
                        c(t)
                    }) : (this.__chart__ = S, u(t), l(t), c(t))
                })
            }, t.translate = function(n) {
                return arguments.length ? (S = {
                    x: +n[0],
                    y: +n[1],
                    k: S.k
                }, s(), t) : [S.x, S.y]
            }, t.scale = function(n) {
                return arguments.length ? (S = {
                    x: S.x,
                    y: S.y,
                    k: null
                }, r(+n), s(), t) : S.k
            }, t.scaleExtent = function(n) {
                return arguments.length ? (k = null == n ? Xa : [+n[0], +n[1]], t) : k
            }, t.center = function(n) {
                return arguments.length ? (y = n && [+n[0], +n[1]], t) : y
            }, t.size = function(n) {
                return arguments.length ? (M = n && [+n[0], +n[1]], t) : M
            }, t.duration = function(n) {
                return arguments.length ? (C = +n, t) : C
            }, t.x = function(n) {
                return arguments.length ? (w = n, b = n.copy(), S = {
                    x: 0,
                    y: 0,
                    k: 1
                }, t) : w
            }, t.y = function(n) {
                return arguments.length ? (T = n, x = n.copy(), S = {
                    x: 0,
                    y: 0,
                    k: 1
                }, t) : T
            }, ha.rebind(t, I, "on")
        };
        var Ka, Za, Xa = [0, 1 / 0];
        ha.color = pt, pt.prototype.toString = function() {
            return this.rgb() + ""
        }, ha.hsl = ft;
        var Ja = ft.prototype = new pt;
        Ja.brighter = function(t) {
            return t = Math.pow(.7, arguments.length ? t : 1), new ft(this.h, this.s, this.l / t)
        }, Ja.darker = function(t) {
            return t = Math.pow(.7, arguments.length ? t : 1), new ft(this.h, this.s, t * this.l)
        }, Ja.rgb = function() {
            return ht(this.h, this.s, this.l)
        }, ha.hcl = dt;
        var Qa = dt.prototype = new pt;
        Qa.brighter = function(t) {
            return new dt(this.h, this.c, Math.min(100, this.l + ts * (arguments.length ? t : 1)))
        }, Qa.darker = function(t) {
            return new dt(this.h, this.c, Math.max(0, this.l - ts * (arguments.length ? t : 1)))
        }, Qa.rgb = function() {
            return gt(this.h, this.c, this.l).rgb()
        }, ha.lab = vt;
        var ts = 18,
            ns = .95047,
            es = 1,
            rs = 1.08883,
            os = vt.prototype = new pt;
        os.brighter = function(t) {
            return new vt(Math.min(100, this.l + ts * (arguments.length ? t : 1)), this.a, this.b)
        }, os.darker = function(t) {
            return new vt(Math.max(0, this.l - ts * (arguments.length ? t : 1)), this.a, this.b)
        }, os.rgb = function() {
            return yt(this.l, this.a, this.b)
        }, ha.rgb = xt;
        var is = xt.prototype = new pt;
        is.brighter = function(t) {
            t = Math.pow(.7, arguments.length ? t : 1);
            var n = this.r,
                e = this.g,
                r = this.b,
                o = 30;
            return n || e || r ? (n && n < o && (n = o), e && e < o && (e = o), r && r < o && (r = o), new xt(Math.min(255, n / t), Math.min(255, e / t), Math.min(255, r / t))) : new xt(o, o, o)
        }, is.darker = function(t) {
            return t = Math.pow(.7, arguments.length ? t : 1), new xt(t * this.r, t * this.g, t * this.b)
        }, is.hsl = function() {
            return Ct(this.r, this.g, this.b)
        }, is.toString = function() {
            return "#" + Mt(this.r) + Mt(this.g) + Mt(this.b)
        };
        var as = ha.map({
            aliceblue: 15792383,
            antiquewhite: 16444375,
            aqua: 65535,
            aquamarine: 8388564,
            azure: 15794175,
            beige: 16119260,
            bisque: 16770244,
            black: 0,
            blanchedalmond: 16772045,
            blue: 255,
            blueviolet: 9055202,
            brown: 10824234,
            burlywood: 14596231,
            cadetblue: 6266528,
            chartreuse: 8388352,
            chocolate: 13789470,
            coral: 16744272,
            cornflowerblue: 6591981,
            cornsilk: 16775388,
            crimson: 14423100,
            cyan: 65535,
            darkblue: 139,
            darkcyan: 35723,
            darkgoldenrod: 12092939,
            darkgray: 11119017,
            darkgreen: 25600,
            darkgrey: 11119017,
            darkkhaki: 12433259,
            darkmagenta: 9109643,
            darkolivegreen: 5597999,
            darkorange: 16747520,
            darkorchid: 10040012,
            darkred: 9109504,
            darksalmon: 15308410,
            darkseagreen: 9419919,
            darkslateblue: 4734347,
            darkslategray: 3100495,
            darkslategrey: 3100495,
            darkturquoise: 52945,
            darkviolet: 9699539,
            deeppink: 16716947,
            deepskyblue: 49151,
            dimgray: 6908265,
            dimgrey: 6908265,
            dodgerblue: 2003199,
            firebrick: 11674146,
            floralwhite: 16775920,
            forestgreen: 2263842,
            fuchsia: 16711935,
            gainsboro: 14474460,
            ghostwhite: 16316671,
            gold: 16766720,
            goldenrod: 14329120,
            gray: 8421504,
            green: 32768,
            greenyellow: 11403055,
            grey: 8421504,
            honeydew: 15794160,
            hotpink: 16738740,
            indianred: 13458524,
            indigo: 4915330,
            ivory: 16777200,
            khaki: 15787660,
            lavender: 15132410,
            lavenderblush: 16773365,
            lawngreen: 8190976,
            lemonchiffon: 16775885,
            lightblue: 11393254,
            lightcoral: 15761536,
            lightcyan: 14745599,
            lightgoldenrodyellow: 16448210,
            lightgray: 13882323,
            lightgreen: 9498256,
            lightgrey: 13882323,
            lightpink: 16758465,
            lightsalmon: 16752762,
            lightseagreen: 2142890,
            lightskyblue: 8900346,
            lightslategray: 7833753,
            lightslategrey: 7833753,
            lightsteelblue: 11584734,
            lightyellow: 16777184,
            lime: 65280,
            limegreen: 3329330,
            linen: 16445670,
            magenta: 16711935,
            maroon: 8388608,
            mediumaquamarine: 6737322,
            mediumblue: 205,
            mediumorchid: 12211667,
            mediumpurple: 9662683,
            mediumseagreen: 3978097,
            mediumslateblue: 8087790,
            mediumspringgreen: 64154,
            mediumturquoise: 4772300,
            mediumvioletred: 13047173,
            midnightblue: 1644912,
            mintcream: 16121850,
            mistyrose: 16770273,
            moccasin: 16770229,
            navajowhite: 16768685,
            navy: 128,
            oldlace: 16643558,
            olive: 8421376,
            olivedrab: 7048739,
            orange: 16753920,
            orangered: 16729344,
            orchid: 14315734,
            palegoldenrod: 15657130,
            palegreen: 10025880,
            paleturquoise: 11529966,
            palevioletred: 14381203,
            papayawhip: 16773077,
            peachpuff: 16767673,
            peru: 13468991,
            pink: 16761035,
            plum: 14524637,
            powderblue: 11591910,
            purple: 8388736,
            rebeccapurple: 6697881,
            red: 16711680,
            rosybrown: 12357519,
            royalblue: 4286945,
            saddlebrown: 9127187,
            salmon: 16416882,
            sandybrown: 16032864,
            seagreen: 3050327,
            seashell: 16774638,
            sienna: 10506797,
            silver: 12632256,
            skyblue: 8900331,
            slateblue: 6970061,
            slategray: 7372944,
            slategrey: 7372944,
            snow: 16775930,
            springgreen: 65407,
            steelblue: 4620980,
            tan: 13808780,
            teal: 32896,
            thistle: 14204888,
            tomato: 16737095,
            turquoise: 4251856,
            violet: 15631086,
            wheat: 16113331,
            white: 16777215,
            whitesmoke: 16119285,
            yellow: 16776960,
            yellowgreen: 10145074
        });
        as.forEach(function(t, n) {
            as.set(t, Tt(n))
        }), ha.functor = Nt, ha.xhr = Ot(T), ha.dsv = function(t, n) {
            function e(t, e, i) {
                arguments.length < 3 && (i = e, e = null);
                var a = $t(t, n, null == e ? r : o(e), i);
                return a.row = function(t) {
                    return arguments.length ? a.response(null == (e = t) ? r : o(t)) : e
                }, a
            }

            function r(t) {
                return e.parse(t.responseText)
            }

            function o(t) {
                return function(n) {
                    return e.parse(n.responseText, t)
                }
            }

            function i(n) {
                return n.map(a).join(t)
            }

            function a(t) {
                return s.test(t) ? '"' + t.replace(/\"/g, '""') + '"' : t
            }
            var s = new RegExp('["' + t + "\n]"),
                u = t.charCodeAt(0);
            return e.parse = function(t, n) {
                var r;
                return e.parseRows(t, function(t, e) {
                    if (r) return r(t, e - 1);
                    var o = new Function("d", "return {" + t.map(function(t, n) {
                        return JSON.stringify(t) + ": d[" + n + "]"
                    }).join(",") + "}");
                    r = n ? function(t, e) {
                        return n(o(t), e)
                    } : o
                })
            }, e.parseRows = function(t, n) {
                function e() {
                    if (c >= l) return a;
                    if (o) return o = !1, i;
                    var n = c;
                    if (34 === t.charCodeAt(n)) {
                        for (var e = n; e++ < l;)
                            if (34 === t.charCodeAt(e)) {
                                if (34 !== t.charCodeAt(e + 1)) break;
                                ++e
                            }
                        c = e + 2;
                        var r = t.charCodeAt(e + 1);
                        return 13 === r ? (o = !0, 10 === t.charCodeAt(e + 2) && ++c) : 10 === r && (o = !0), t.slice(n + 1, e).replace(/""/g, '"')
                    }
                    for (; c < l;) {
                        var r = t.charCodeAt(c++),
                            s = 1;
                        if (10 === r) o = !0;
                        else if (13 === r) o = !0, 10 === t.charCodeAt(c) && (++c, ++s);
                        else if (r !== u) continue;
                        return t.slice(n, c - s)
                    }
                    return t.slice(n)
                }
                for (var r, o, i = {}, a = {}, s = [], l = t.length, c = 0, p = 0;
                    (r = e()) !== a;) {
                    for (var f = []; r !== i && r !== a;) f.push(r), r = e();
                    n && null == (f = n(f, p++)) || s.push(f)
                }
                return s
            }, e.format = function(n) {
                if (Array.isArray(n[0])) return e.formatRows(n);
                var r = new x,
                    o = [];
                return n.forEach(function(t) {
                    for (var n in t) r.has(n) || o.push(r.add(n))
                }), [o.map(a).join(t)].concat(n.map(function(n) {
                    return o.map(function(t) {
                        return a(n[t])
                    }).join(t)
                })).join("\n")
            }, e.formatRows = function(t) {
                return t.map(i).join("\n")
            }, e
        }, ha.csv = ha.dsv(",", "text/csv"), ha.tsv = ha.dsv("\t", "text/tab-separated-values");
        var ss, us, ls, cs, ps = this[M(this, "requestAnimationFrame")] || function(t) {
            setTimeout(t, 17)
        };
        ha.timer = function() {
            Rt.apply(this, arguments)
        }, ha.timer.flush = function() {
            Ft(), jt()
        }, ha.round = function(t, n) {
            return n ? Math.round(t * (n = Math.pow(10, n))) / n : Math.round(t)
        };
        var fs = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"].map(zt);
        ha.formatPrefix = function(t, n) {
            var e = 0;
            return (t = +t) && (t < 0 && (t *= -1), n && (t = ha.round(t, Ut(t, n))), e = 1 + Math.floor(1e-12 + Math.log(t) / Math.LN10), e = Math.max(-24, Math.min(24, 3 * Math.floor((e - 1) / 3)))), fs[8 + e / 3]
        };
        var hs = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,
            ds = ha.map({
                b: function(t) {
                    return t.toString(2)
                },
                c: function(t) {
                    return String.fromCharCode(t)
                },
                o: function(t) {
                    return t.toString(8)
                },
                x: function(t) {
                    return t.toString(16)
                },
                X: function(t) {
                    return t.toString(16).toUpperCase()
                },
                g: function(t, n) {
                    return t.toPrecision(n)
                },
                e: function(t, n) {
                    return t.toExponential(n)
                },
                f: function(t, n) {
                    return t.toFixed(n)
                },
                r: function(t, n) {
                    return (t = ha.round(t, Ut(t, n))).toFixed(Math.max(0, Math.min(20, Ut(t * (1 + 1e-15), n))))
                }
            }),
            gs = ha.time = {},
            vs = Date;
        Wt.prototype = {
            getDate: function() {
                return this._.getUTCDate()
            },
            getDay: function() {
                return this._.getUTCDay()
            },
            getFullYear: function() {
                return this._.getUTCFullYear()
            },
            getHours: function() {
                return this._.getUTCHours()
            },
            getMilliseconds: function() {
                return this._.getUTCMilliseconds()
            },
            getMinutes: function() {
                return this._.getUTCMinutes()
            },
            getMonth: function() {
                return this._.getUTCMonth()
            },
            getSeconds: function() {
                return this._.getUTCSeconds()
            },
            getTime: function() {
                return this._.getTime()
            },
            getTimezoneOffset: function() {
                return 0
            },
            valueOf: function() {
                return this._.valueOf()
            },
            setDate: function() {
                ys.setUTCDate.apply(this._, arguments)
            },
            setDay: function() {
                ys.setUTCDay.apply(this._, arguments)
            },
            setFullYear: function() {
                ys.setUTCFullYear.apply(this._, arguments)
            },
            setHours: function() {
                ys.setUTCHours.apply(this._, arguments)
            },
            setMilliseconds: function() {
                ys.setUTCMilliseconds.apply(this._, arguments)
            },
            setMinutes: function() {
                ys.setUTCMinutes.apply(this._, arguments)
            },
            setMonth: function() {
                ys.setUTCMonth.apply(this._, arguments)
            },
            setSeconds: function() {
                ys.setUTCSeconds.apply(this._, arguments)
            },
            setTime: function() {
                ys.setTime.apply(this._, arguments)
            }
        };
        var ys = Date.prototype;
        gs.year = Gt(function(t) {
            return t = gs.day(t), t.setMonth(0, 1), t
        }, function(t, n) {
            t.setFullYear(t.getFullYear() + n)
        }, function(t) {
            return t.getFullYear()
        }), gs.years = gs.year.range, gs.years.utc = gs.year.utc.range, gs.day = Gt(function(t) {
            var n = new vs(2e3, 0);
            return n.setFullYear(t.getFullYear(), t.getMonth(), t.getDate()), n
        }, function(t, n) {
            t.setDate(t.getDate() + n)
        }, function(t) {
            return t.getDate() - 1
        }), gs.days = gs.day.range, gs.days.utc = gs.day.utc.range, gs.dayOfYear = function(t) {
            var n = gs.year(t);
            return Math.floor((t - n - 6e4 * (t.getTimezoneOffset() - n.getTimezoneOffset())) / 864e5)
        }, ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"].forEach(function(t, n) {
            n = 7 - n;
            var e = gs[t] = Gt(function(t) {
                return (t = gs.day(t)).setDate(t.getDate() - (t.getDay() + n) % 7), t
            }, function(t, n) {
                t.setDate(t.getDate() + 7 * Math.floor(n))
            }, function(t) {
                var e = gs.year(t).getDay();
                return Math.floor((gs.dayOfYear(t) + (e + n) % 7) / 7) - (e !== n)
            });
            gs[t + "s"] = e.range, gs[t + "s"].utc = e.utc.range, gs[t + "OfYear"] = function(t) {
                var e = gs.year(t).getDay();
                return Math.floor((gs.dayOfYear(t) + (e + n) % 7) / 7)
            }
        }), gs.week = gs.sunday, gs.weeks = gs.sunday.range, gs.weeks.utc = gs.sunday.utc.range, gs.weekOfYear = gs.sundayOfYear;
        var ms = {
                "-": "",
                _: " ",
                0: "0"
            },
            _s = /^\s*\d+/,
            bs = /^%/;
        ha.locale = function(t) {
            return {
                numberFormat: Ht(t),
                timeFormat: Yt(t)
            }
        };
        var ws = ha.locale({
            decimal: ".",
            thousands: ",",
            grouping: [3],
            currency: ["$", ""],
            dateTime: "%a %b %e %X %Y",
            date: "%m/%d/%Y",
            time: "%H:%M:%S",
            periods: ["AM", "PM"],
            days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
        });
        ha.format = ws.numberFormat, ha.geo = {}, gn.prototype = {
            s: 0,
            t: 0,
            add: function(t) {
                vn(t, this.t, xs), vn(xs.s, this.s, this), this.s ? this.t += xs.t : this.s = xs.t
            },
            reset: function() {
                this.s = this.t = 0
            },
            valueOf: function() {
                return this.s
            }
        };
        var xs = new gn;
        ha.geo.stream = function(t, n) {
            t && Ts.hasOwnProperty(t.type) ? Ts[t.type](t, n) : yn(t, n)
        };
        var Ts = {
                Feature: function(t, n) {
                    yn(t.geometry, n)
                },
                FeatureCollection: function(t, n) {
                    for (var e = t.features, r = -1, o = e.length; ++r < o;) yn(e[r].geometry, n)
                }
            },
            Ss = {
                Sphere: function(t, n) {
                    n.sphere()
                },
                Point: function(t, n) {
                    t = t.coordinates, n.point(t[0], t[1], t[2])
                },
                MultiPoint: function(t, n) {
                    for (var e = t.coordinates, r = -1, o = e.length; ++r < o;) t = e[r], n.point(t[0], t[1], t[2])
                },
                LineString: function(t, n) {
                    mn(t.coordinates, n, 0)
                },
                MultiLineString: function(t, n) {
                    for (var e = t.coordinates, r = -1, o = e.length; ++r < o;) mn(e[r], n, 0)
                },
                Polygon: function(t, n) {
                    _n(t.coordinates, n)
                },
                MultiPolygon: function(t, n) {
                    for (var e = t.coordinates, r = -1, o = e.length; ++r < o;) _n(e[r], n)
                },
                GeometryCollection: function(t, n) {
                    for (var e = t.geometries, r = -1, o = e.length; ++r < o;) yn(e[r], n)
                }
            };
        ha.geo.area = function(t) {
            return Ms = 0, ha.geo.stream(t, Cs), Ms
        };
        var Ms, ks = new gn,
            Cs = {
                sphere: function() {
                    Ms += 4 * Ha
                },
                point: k,
                lineStart: k,
                lineEnd: k,
                polygonStart: function() {
                    ks.reset(), Cs.lineStart = bn
                },
                polygonEnd: function() {
                    var t = 2 * ks;
                    Ms += t < 0 ? 4 * Ha + t : t, Cs.lineStart = Cs.lineEnd = Cs.point = k
                }
            };
        ha.geo.bounds = function() {
            function t(t, n) {
                _.push(b = [c = t, f = t]), n < p && (p = n), n > h && (h = n)
            }

            function n(n, e) {
                var r = wn([n * qa, e * qa]);
                if (y) {
                    var o = Tn(y, r),
                        i = [o[1], -o[0], 0],
                        a = Tn(i, o);
                    kn(a), a = Cn(a);
                    var u = n - d,
                        l = u > 0 ? 1 : -1,
                        g = a[0] * Ya * l,
                        v = Ta(u) > 180;
                    if (v ^ (l * d < g && g < l * n)) {
                        var m = a[1] * Ya;
                        m > h && (h = m)
                    } else if (g = (g + 360) % 360 - 180, v ^ (l * d < g && g < l * n)) {
                        var m = -a[1] * Ya;
                        m < p && (p = m)
                    } else e < p && (p = e), e > h && (h = e);
                    v ? n < d ? s(c, n) > s(c, f) && (f = n) : s(n, f) > s(c, f) && (c = n) : f >= c ? (n < c && (c = n), n > f && (f = n)) : n > d ? s(c, n) > s(c, f) && (f = n) : s(n, f) > s(c, f) && (c = n)
                } else t(n, e);
                y = r, d = n
            }

            function e() {
                w.point = n
            }

            function r() {
                b[0] = c, b[1] = f, w.point = t, y = null
            }

            function o(t, e) {
                if (y) {
                    var r = t - d;
                    m += Ta(r) > 180 ? r + (r > 0 ? 360 : -360) : r
                } else g = t, v = e;
                Cs.point(t, e), n(t, e)
            }

            function i() {
                Cs.lineStart()
            }

            function a() {
                o(g, v), Cs.lineEnd(), Ta(m) > Ua && (c = -(f = 180)), b[0] = c, b[1] = f, y = null
            }

            function s(t, n) {
                return (n -= t) < 0 ? n + 360 : n
            }

            function u(t, n) {
                return t[0] - n[0]
            }

            function l(t, n) {
                return n[0] <= n[1] ? n[0] <= t && t <= n[1] : t < n[0] || n[1] < t
            }
            var c, p, f, h, d, g, v, y, m, _, b, w = {
                point: t,
                lineStart: e,
                lineEnd: r,
                polygonStart: function() {
                    w.point = o, w.lineStart = i, w.lineEnd = a, m = 0, Cs.polygonStart()
                },
                polygonEnd: function() {
                    Cs.polygonEnd(), w.point = t, w.lineStart = e, w.lineEnd = r, ks < 0 ? (c = -(f = 180), p = -(h = 90)) : m > Ua ? h = 90 : m < -Ua && (p = -90), b[0] = c, b[1] = f
                }
            };
            return function(t) {
                h = f = -(c = p = 1 / 0), _ = [], ha.geo.stream(t, w);
                var n = _.length;
                if (n) {
                    _.sort(u);
                    for (var e, r = 1, o = _[0], i = [o]; r < n; ++r) e = _[r], l(e[0], o) || l(e[1], o) ? (s(o[0], e[1]) > s(o[0], o[1]) && (o[1] = e[1]), s(e[0], o[1]) > s(o[0], o[1]) && (o[0] = e[0])) : i.push(o = e);
                    for (var a, e, d = -1 / 0, n = i.length - 1, r = 0, o = i[n]; r <= n; o = e, ++r) e = i[r], (a = s(o[1], e[0])) > d && (d = a, c = e[0], f = o[1])
                }
                return _ = b = null, c === 1 / 0 || p === 1 / 0 ? [
                    [NaN, NaN],
                    [NaN, NaN]
                ] : [
                    [c, p],
                    [f, h]
                ]
            }
        }(), ha.geo.centroid = function(t) {
            As = Ps = Es = Ns = Os = $s = Ls = Is = Rs = Ds = Fs = 0, ha.geo.stream(t, js);
            var n = Rs,
                e = Ds,
                r = Fs,
                o = n * n + e * e + r * r;
            return o < za && (n = $s, e = Ls, r = Is, Ps < Ua && (n = Es, e = Ns, r = Os), (o = n * n + e * e + r * r) < za) ? [NaN, NaN] : [Math.atan2(e, n) * Ya, at(r / Math.sqrt(o)) * Ya]
        };
        var As, Ps, Es, Ns, Os, $s, Ls, Is, Rs, Ds, Fs, js = {
                sphere: k,
                point: Pn,
                lineStart: Nn,
                lineEnd: On,
                polygonStart: function() {
                    js.lineStart = $n
                },
                polygonEnd: function() {
                    js.lineStart = Nn
                }
            },
            Us = jn(In, Bn, Gn, [-Ha, -Ha / 2]),
            zs = 1e9;
        ha.geo.clipExtent = function() {
            var t, n, e, r, o, i, a = {
                stream: function(t) {
                    return o && (o.valid = !1), o = i(t), o.valid = !0, o
                },
                extent: function(s) {
                    return arguments.length ? (i = Kn(t = +s[0][0], n = +s[0][1], e = +s[1][0], r = +s[1][1]), o && (o.valid = !1, o = null), a) : [
                        [t, n],
                        [e, r]
                    ]
                }
            };
            return a.extent([
                [0, 0],
                [960, 500]
            ])
        }, (ha.geo.conicEqualArea = function() {
            return Zn(Xn)
        }).raw = Xn, ha.geo.albers = function() {
            return ha.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070)
        }, ha.geo.albersUsa = function() {
            function t(t) {
                var i = t[0],
                    a = t[1];
                return n = null, e(i, a), n || (r(i, a), n) || o(i, a), n
            }
            var n, e, r, o, i = ha.geo.albers(),
                a = ha.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
                s = ha.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
                u = {
                    point: function(t, e) {
                        n = [t, e]
                    }
                };
            return t.invert = function(t) {
                var n = i.scale(),
                    e = i.translate(),
                    r = (t[0] - e[0]) / n,
                    o = (t[1] - e[1]) / n;
                return (o >= .12 && o < .234 && r >= -.425 && r < -.214 ? a : o >= .166 && o < .234 && r >= -.214 && r < -.115 ? s : i).invert(t)
            }, t.stream = function(t) {
                var n = i.stream(t),
                    e = a.stream(t),
                    r = s.stream(t);
                return {
                    point: function(t, o) {
                        n.point(t, o), e.point(t, o), r.point(t, o)
                    },
                    sphere: function() {
                        n.sphere(), e.sphere(), r.sphere()
                    },
                    lineStart: function() {
                        n.lineStart(), e.lineStart(), r.lineStart()
                    },
                    lineEnd: function() {
                        n.lineEnd(), e.lineEnd(), r.lineEnd()
                    },
                    polygonStart: function() {
                        n.polygonStart(), e.polygonStart(), r.polygonStart()
                    },
                    polygonEnd: function() {
                        n.polygonEnd(), e.polygonEnd(), r.polygonEnd()
                    }
                }
            }, t.precision = function(n) {
                return arguments.length ? (i.precision(n), a.precision(n), s.precision(n), t) : i.precision()
            }, t.scale = function(n) {
                return arguments.length ? (i.scale(n), a.scale(.35 * n), s.scale(n), t.translate(i.translate())) : i.scale()
            }, t.translate = function(n) {
                if (!arguments.length) return i.translate();
                var l = i.scale(),
                    c = +n[0],
                    p = +n[1];
                return e = i.translate(n).clipExtent([
                    [c - .455 * l, p - .238 * l],
                    [c + .455 * l, p + .238 * l]
                ]).stream(u).point, r = a.translate([c - .307 * l, p + .201 * l]).clipExtent([
                    [c - .425 * l + Ua, p + .12 * l + Ua],
                    [c - .214 * l - Ua, p + .234 * l - Ua]
                ]).stream(u).point, o = s.translate([c - .205 * l, p + .212 * l]).clipExtent([
                    [c - .214 * l + Ua, p + .166 * l + Ua],
                    [c - .115 * l - Ua, p + .234 * l - Ua]
                ]).stream(u).point, t
            }, t.scale(1070)
        };
        var Hs, Bs, Ws, Gs, qs, Ys, Vs = {
                point: k,
                lineStart: k,
                lineEnd: k,
                polygonStart: function() {
                    Bs = 0, Vs.lineStart = Jn
                },
                polygonEnd: function() {
                    Vs.lineStart = Vs.lineEnd = Vs.point = k, Hs += Ta(Bs / 2)
                }
            },
            Ks = {
                point: Qn,
                lineStart: k,
                lineEnd: k,
                polygonStart: k,
                polygonEnd: k
            },
            Zs = {
                point: ee,
                lineStart: re,
                lineEnd: oe,
                polygonStart: function() {
                    Zs.lineStart = ie
                },
                polygonEnd: function() {
                    Zs.point = ee, Zs.lineStart = re, Zs.lineEnd = oe
                }
            };
        ha.geo.path = function() {
            function t(t) {
                return t && ("function" == typeof s && i.pointRadius(+s.apply(this, arguments)), a && a.valid || (a = o(i)), ha.geo.stream(t, a)), i.result()
            }

            function n() {
                return a = null, t
            }
            var e, r, o, i, a, s = 4.5;
            return t.area = function(t) {
                return Hs = 0, ha.geo.stream(t, o(Vs)), Hs
            }, t.centroid = function(t) {
                return Es = Ns = Os = $s = Ls = Is = Rs = Ds = Fs = 0, ha.geo.stream(t, o(Zs)), Fs ? [Rs / Fs, Ds / Fs] : Is ? [$s / Is, Ls / Is] : Os ? [Es / Os, Ns / Os] : [NaN, NaN]
            }, t.bounds = function(t) {
                return qs = Ys = -(Ws = Gs = 1 / 0), ha.geo.stream(t, o(Ks)), [
                    [Ws, Gs],
                    [qs, Ys]
                ]
            }, t.projection = function(t) {
                return arguments.length ? (o = (e = t) ? t.stream || ue(t) : T, n()) : e
            }, t.context = function(t) {
                return arguments.length ? (i = null == (r = t) ? new te : new ae(t), "function" != typeof s && i.pointRadius(s), n()) : r
            }, t.pointRadius = function(n) {
                return arguments.length ? (s = "function" == typeof n ? n : (i.pointRadius(+n), +n), t) : s
            }, t.projection(ha.geo.albersUsa()).context(null)
        }, ha.geo.transform = function(t) {
            return {
                stream: function(n) {
                    var e = new le(n);
                    for (var r in t) e[r] = t[r];
                    return e
                }
            }
        }, le.prototype = {
            point: function(t, n) {
                this.stream.point(t, n)
            },
            sphere: function() {
                this.stream.sphere()
            },
            lineStart: function() {
                this.stream.lineStart()
            },
            lineEnd: function() {
                this.stream.lineEnd()
            },
            polygonStart: function() {
                this.stream.polygonStart()
            },
            polygonEnd: function() {
                this.stream.polygonEnd()
            }
        }, ha.geo.projection = pe, ha.geo.projectionMutator = fe, (ha.geo.equirectangular = function() {
            return pe(de)
        }).raw = de.invert = de, ha.geo.rotation = function(t) {
            function n(n) {
                return n = t(n[0] * qa, n[1] * qa), n[0] *= Ya, n[1] *= Ya, n
            }
            return t = ve(t[0] % 360 * qa, t[1] * qa, t.length > 2 ? t[2] * qa : 0), n.invert = function(n) {
                return n = t.invert(n[0] * qa, n[1] * qa), n[0] *= Ya, n[1] *= Ya, n
            }, n
        }, ge.invert = de, ha.geo.circle = function() {
            function t() {
                var t = "function" == typeof r ? r.apply(this, arguments) : r,
                    n = ve(-t[0] * qa, -t[1] * qa, 0).invert,
                    o = [];
                return e(null, null, 1, {
                    point: function(t, e) {
                        o.push(t = n(t, e)), t[0] *= Ya, t[1] *= Ya
                    }
                }), {
                    type: "Polygon",
                    coordinates: [o]
                }
            }
            var n, e, r = [0, 0],
                o = 6;
            return t.origin = function(n) {
                return arguments.length ? (r = n, t) : r
            }, t.angle = function(r) {
                return arguments.length ? (e = be((n = +r) * qa, o * qa), t) : n
            }, t.precision = function(r) {
                return arguments.length ? (e = be(n * qa, (o = +r) * qa), t) : o
            }, t.angle(90)
        }, ha.geo.distance = function(t, n) {
            var e, r = (n[0] - t[0]) * qa,
                o = t[1] * qa,
                i = n[1] * qa,
                a = Math.sin(r),
                s = Math.cos(r),
                u = Math.sin(o),
                l = Math.cos(o),
                c = Math.sin(i),
                p = Math.cos(i);
            return Math.atan2(Math.sqrt((e = p * a) * e + (e = l * c - u * p * s) * e), u * c + l * p * s)
        }, ha.geo.graticule = function() {
            function t() {
                return {
                    type: "MultiLineString",
                    coordinates: n()
                }
            }

            function n() {
                return ha.range(Math.ceil(i / v) * v, o, v).map(f).concat(ha.range(Math.ceil(l / y) * y, u, y).map(h)).concat(ha.range(Math.ceil(r / d) * d, e, d).filter(function(t) {
                    return Ta(t % v) > Ua
                }).map(c)).concat(ha.range(Math.ceil(s / g) * g, a, g).filter(function(t) {
                    return Ta(t % y) > Ua
                }).map(p))
            }
            var e, r, o, i, a, s, u, l, c, p, f, h, d = 10,
                g = d,
                v = 90,
                y = 360,
                m = 2.5;
            return t.lines = function() {
                return n().map(function(t) {
                    return {
                        type: "LineString",
                        coordinates: t
                    }
                })
            }, t.outline = function() {
                return {
                    type: "Polygon",
                    coordinates: [f(i).concat(h(u).slice(1), f(o).reverse().slice(1), h(l).reverse().slice(1))]
                }
            }, t.extent = function(n) {
                return arguments.length ? t.majorExtent(n).minorExtent(n) : t.minorExtent()
            }, t.majorExtent = function(n) {
                return arguments.length ? (i = +n[0][0], o = +n[1][0], l = +n[0][1], u = +n[1][1], i > o && (n = i, i = o, o = n), l > u && (n = l, l = u, u = n), t.precision(m)) : [
                    [i, l],
                    [o, u]
                ]
            }, t.minorExtent = function(n) {
                return arguments.length ? (r = +n[0][0], e = +n[1][0], s = +n[0][1], a = +n[1][1], r > e && (n = r, r = e, e = n), s > a && (n = s, s = a, a = n), t.precision(m)) : [
                    [r, s],
                    [e, a]
                ]
            }, t.step = function(n) {
                return arguments.length ? t.majorStep(n).minorStep(n) : t.minorStep()
            }, t.majorStep = function(n) {
                return arguments.length ? (v = +n[0], y = +n[1], t) : [v, y]
            }, t.minorStep = function(n) {
                return arguments.length ? (d = +n[0], g = +n[1], t) : [d, g]
            }, t.precision = function(n) {
                return arguments.length ? (m = +n, c = xe(s, a, 90), p = Te(r, e, m), f = xe(l, u, 90), h = Te(i, o, m), t) : m
            }, t.majorExtent([
                [-180, -90 + Ua],
                [180, 90 - Ua]
            ]).minorExtent([
                [-180, -80 - Ua],
                [180, 80 + Ua]
            ])
        }, ha.geo.greatArc = function() {
            function t() {
                return {
                    type: "LineString",
                    coordinates: [n || r.apply(this, arguments), e || o.apply(this, arguments)]
                }
            }
            var n, e, r = Se,
                o = Me;
            return t.distance = function() {
                return ha.geo.distance(n || r.apply(this, arguments), e || o.apply(this, arguments))
            }, t.source = function(e) {
                return arguments.length ? (r = e, n = "function" == typeof e ? null : e, t) : r
            }, t.target = function(n) {
                return arguments.length ? (o = n, e = "function" == typeof n ? null : n, t) : o
            }, t.precision = function() {
                return arguments.length ? t : 0
            }, t
        }, ha.geo.interpolate = function(t, n) {
            return ke(t[0] * qa, t[1] * qa, n[0] * qa, n[1] * qa)
        }, ha.geo.length = function(t) {
            return Xs = 0, ha.geo.stream(t, Js), Xs
        };
        var Xs, Js = {
                sphere: k,
                point: k,
                lineStart: Ce,
                lineEnd: k,
                polygonStart: k,
                polygonEnd: k
            },
            Qs = Ae(function(t) {
                return Math.sqrt(2 / (1 + t))
            }, function(t) {
                return 2 * Math.asin(t / 2)
            });
        (ha.geo.azimuthalEqualArea = function() {
            return pe(Qs)
        }).raw = Qs;
        var tu = Ae(function(t) {
            var n = Math.acos(t);
            return n && n / Math.sin(n)
        }, T);
        (ha.geo.azimuthalEquidistant = function() {
            return pe(tu)
        }).raw = tu, (ha.geo.conicConformal = function() {
            return Zn(Pe)
        }).raw = Pe, (ha.geo.conicEquidistant = function() {
            return Zn(Ee)
        }).raw = Ee;
        var nu = Ae(function(t) {
            return 1 / t
        }, Math.atan);
        (ha.geo.gnomonic = function() {
            return pe(nu)
        }).raw = nu, Ne.invert = function(t, n) {
            return [t, 2 * Math.atan(Math.exp(n)) - Ga]
        }, (ha.geo.mercator = function() {
            return Oe(Ne)
        }).raw = Ne;
        var eu = Ae(function() {
            return 1
        }, Math.asin);
        (ha.geo.orthographic = function() {
            return pe(eu)
        }).raw = eu;
        var ru = Ae(function(t) {
            return 1 / (1 + t)
        }, function(t) {
            return 2 * Math.atan(t)
        });
        (ha.geo.stereographic = function() {
            return pe(ru)
        }).raw = ru, $e.invert = function(t, n) {
            return [-n, 2 * Math.atan(Math.exp(t)) - Ga]
        }, (ha.geo.transverseMercator = function() {
            var t = Oe($e),
                n = t.center,
                e = t.rotate;
            return t.center = function(t) {
                return t ? n([-t[1], t[0]]) : (t = n(), [t[1], -t[0]])
            }, t.rotate = function(t) {
                return t ? e([t[0], t[1], t.length > 2 ? t[2] + 90 : 90]) : (t = e(), [t[0], t[1], t[2] - 90])
            }, e([0, 0, 90])
        }).raw = $e, ha.geom = {}, ha.geom.hull = function(t) {
            function n(t) {
                if (t.length < 3) return [];
                var n, o = Nt(e),
                    i = Nt(r),
                    a = t.length,
                    s = [],
                    u = [];
                for (n = 0; n < a; n++) s.push([+o.call(this, t[n], n), +i.call(this, t[n], n), n]);
                for (s.sort(De), n = 0; n < a; n++) u.push([s[n][0], -s[n][1]]);
                var l = Re(s),
                    c = Re(u),
                    p = c[0] === l[0],
                    f = c[c.length - 1] === l[l.length - 1],
                    h = [];
                for (n = l.length - 1; n >= 0; --n) h.push(t[s[l[n]][2]]);
                for (n = +p; n < c.length - f; ++n) h.push(t[s[c[n]][2]]);
                return h
            }
            var e = Le,
                r = Ie;
            return arguments.length ? n(t) : (n.x = function(t) {
                return arguments.length ? (e = t, n) : e
            }, n.y = function(t) {
                return arguments.length ? (r = t, n) : r
            }, n)
        }, ha.geom.polygon = function(t) {
            return Aa(t, ou), t
        };
        var ou = ha.geom.polygon.prototype = [];
        ou.area = function() {
            for (var t, n = -1, e = this.length, r = this[e - 1], o = 0; ++n < e;) t = r, r = this[n], o += t[1] * r[0] - t[0] * r[1];
            return .5 * o
        }, ou.centroid = function(t) {
            var n, e, r = -1,
                o = this.length,
                i = 0,
                a = 0,
                s = this[o - 1];
            for (arguments.length || (t = -1 / (6 * this.area())); ++r < o;) n = s, s = this[r], e = n[0] * s[1] - s[0] * n[1], i += (n[0] + s[0]) * e, a += (n[1] + s[1]) * e;
            return [i * t, a * t]
        }, ou.clip = function(t) {
            for (var n, e, r, o, i, a, s = Ue(t), u = -1, l = this.length - Ue(this), c = this[l - 1]; ++u < l;) {
                for (n = t.slice(), t.length = 0, o = this[u], i = n[(r = n.length - s) - 1], e = -1; ++e < r;) a = n[e], Fe(a, c, o) ? (Fe(i, c, o) || t.push(je(i, a, c, o)), t.push(a)) : Fe(i, c, o) && t.push(je(i, a, c, o)), i = a;
                s && t.push(t[0]), c = o
            }
            return t
        };
        var iu, au, su, uu, lu, cu = [],
            pu = [];
        Ve.prototype.prepare = function() {
            for (var t, n = this.edges, e = n.length; e--;) t = n[e].edge, t.b && t.a || n.splice(e, 1);
            return n.sort(Ze), n.length
        }, ar.prototype = {
            start: function() {
                return this.edge.l === this.site ? this.edge.a : this.edge.b
            },
            end: function() {
                return this.edge.l === this.site ? this.edge.b : this.edge.a
            }
        }, sr.prototype = {
            insert: function(t, n) {
                var e, r, o;
                if (t) {
                    if (n.P = t, n.N = t.N, t.N && (t.N.P = n), t.N = n, t.R) {
                        for (t = t.R; t.L;) t = t.L;
                        t.L = n
                    } else t.R = n;
                    e = t
                } else this._ ? (t = pr(this._), n.P = null, n.N = t, t.P = t.L = n, e = t) : (n.P = n.N = null, this._ = n, e = null);
                for (n.L = n.R = null, n.U = e, n.C = !0, t = n; e && e.C;) r = e.U, e === r.L ? (o = r.R, o && o.C ? (e.C = o.C = !1, r.C = !0, t = r) : (t === e.R && (lr(this, e), t = e, e = t.U), e.C = !1, r.C = !0, cr(this, r))) : (o = r.L, o && o.C ? (e.C = o.C = !1, r.C = !0, t = r) : (t === e.L && (cr(this, e), t = e, e = t.U), e.C = !1, r.C = !0, lr(this, r))), e = t.U;
                this._.C = !1
            },
            remove: function(t) {
                t.N && (t.N.P = t.P), t.P && (t.P.N = t.N), t.N = t.P = null;
                var n, e, r, o = t.U,
                    i = t.L,
                    a = t.R;
                if (e = i ? a ? pr(a) : i : a, o ? o.L === t ? o.L = e : o.R = e : this._ = e, i && a ? (r = e.C, e.C = t.C, e.L = i, i.U = e, e !== a ? (o = e.U, e.U = t.U, t = e.R, o.L = t, e.R = a, a.U = e) : (e.U = o, o = e, t = e.R)) : (r = t.C, t = e), t && (t.U = o), !r) {
                    if (t && t.C) return void(t.C = !1);
                    do {
                        if (t === this._) break;
                        if (t === o.L) {
                            if (n = o.R, n.C && (n.C = !1, o.C = !0, lr(this, o), n = o.R), n.L && n.L.C || n.R && n.R.C) {
                                n.R && n.R.C || (n.L.C = !1, n.C = !0, cr(this, n), n = o.R), n.C = o.C, o.C = n.R.C = !1, lr(this, o), t = this._;
                                break
                            }
                        } else if (n = o.L, n.C && (n.C = !1, o.C = !0, cr(this, o), n = o.L), n.L && n.L.C || n.R && n.R.C) {
                            n.L && n.L.C || (n.R.C = !1, n.C = !0, lr(this, n), n = o.L), n.C = o.C, o.C = n.L.C = !1, cr(this, o), t = this._;
                            break
                        }
                        n.C = !0, t = o, o = o.U
                    } while (!t.C);
                    t && (t.C = !1)
                }
            }
        }, ha.geom.voronoi = function(t) {
            function n(t) {
                var n = new Array(t.length),
                    r = s[0][0],
                    o = s[0][1],
                    i = s[1][0],
                    a = s[1][1];
                return fr(e(t), s).cells.forEach(function(e, s) {
                    var u = e.edges,
                        l = e.site;
                    (n[s] = u.length ? u.map(function(t) {
                        var n = t.start();
                        return [n.x, n.y]
                    }) : l.x >= r && l.x <= i && l.y >= o && l.y <= a ? [
                        [r, a],
                        [i, a],
                        [i, o],
                        [r, o]
                    ] : []).point = t[s]
                }), n
            }

            function e(t) {
                return t.map(function(t, n) {
                    return {
                        x: Math.round(i(t, n) / Ua) * Ua,
                        y: Math.round(a(t, n) / Ua) * Ua,
                        i: n
                    }
                })
            }
            var r = Le,
                o = Ie,
                i = r,
                a = o,
                s = fu;
            return t ? n(t) : (n.links = function(t) {
                return fr(e(t)).edges.filter(function(t) {
                    return t.l && t.r
                }).map(function(n) {
                    return {
                        source: t[n.l.i],
                        target: t[n.r.i]
                    }
                })
            }, n.triangles = function(t) {
                var n = [];
                return fr(e(t)).cells.forEach(function(e, r) {
                    for (var o, i = e.site, a = e.edges.sort(Ze), s = -1, u = a.length, l = a[u - 1].edge, c = l.l === i ? l.r : l.l; ++s < u;) l, o = c, l = a[s].edge, c = l.l === i ? l.r : l.l, r < o.i && r < c.i && dr(i, o, c) < 0 && n.push([t[r], t[o.i], t[c.i]])
                }), n
            }, n.x = function(t) {
                return arguments.length ? (i = Nt(r = t), n) : r
            }, n.y = function(t) {
                return arguments.length ? (a = Nt(o = t), n) : o
            }, n.clipExtent = function(t) {
                return arguments.length ? (s = null == t ? fu : t, n) : s === fu ? null : s
            }, n.size = function(t) {
                return arguments.length ? n.clipExtent(t && [
                    [0, 0], t
                ]) : s === fu ? null : s && s[1]
            }, n)
        };
        var fu = [
            [-1e6, -1e6],
            [1e6, 1e6]
        ];
        ha.geom.delaunay = function(t) {
            return ha.geom.voronoi().triangles(t)
        }, ha.geom.quadtree = function(t, n, e, r, o) {
            function i(t) {
                function i(t, n, e, r, o, i, a, s) {
                    if (!isNaN(e) && !isNaN(r))
                        if (t.leaf) {
                            var u = t.x,
                                c = t.y;
                            if (null != u)
                                if (Ta(u - e) + Ta(c - r) < .01) l(t, n, e, r, o, i, a, s);
                                else {
                                    var p = t.point;
                                    t.x = t.y = t.point = null, l(t, p, u, c, o, i, a, s), l(t, n, e, r, o, i, a, s)
                                }
                            else t.x = e, t.y = r, t.point = n
                        } else l(t, n, e, r, o, i, a, s)
                }

                function l(t, n, e, r, o, a, s, u) {
                    var l = .5 * (o + s),
                        c = .5 * (a + u),
                        p = e >= l,
                        f = r >= c,
                        h = f << 1 | p;
                    t.leaf = !1, t = t.nodes[h] || (t.nodes[h] = yr()), p ? o = l : s = l, f ? a = c : u = c, i(t, n, e, r, o, a, s, u)
                }
                var c, p, f, h, d, g, v, y, m, _ = Nt(s),
                    b = Nt(u);
                if (null != n) g = n, v = e, y = r, m = o;
                else if (y = m = -(g = v = 1 / 0), p = [], f = [], d = t.length, a)
                    for (h = 0; h < d; ++h) c = t[h], c.x < g && (g = c.x), c.y < v && (v = c.y), c.x > y && (y = c.x), c.y > m && (m = c.y), p.push(c.x), f.push(c.y);
                else
                    for (h = 0; h < d; ++h) {
                        var w = +_(c = t[h], h),
                            x = +b(c, h);
                        w < g && (g = w), x < v && (v = x), w > y && (y = w), x > m && (m = x), p.push(w), f.push(x)
                    }
                var T = y - g,
                    S = m - v;
                T > S ? m = v + T : y = g + S;
                var M = yr();
                if (M.add = function(t) {
                        i(M, t, +_(t, ++h), +b(t, h), g, v, y, m)
                    }, M.visit = function(t) {
                        mr(t, M, g, v, y, m)
                    }, M.find = function(t) {
                        return _r(M, t[0], t[1], g, v, y, m)
                    }, h = -1, null == n) {
                    for (; ++h < d;) i(M, t[h], p[h], f[h], g, v, y, m);
                    --h
                } else t.forEach(M.add);
                return p = f = t = c = null, M
            }
            var a, s = Le,
                u = Ie;
            return (a = arguments.length) ? (s = gr, u = vr, 3 === a && (o = e, r = n, e = n = 0), i(t)) : (i.x = function(t) {
                return arguments.length ? (s = t, i) : s
            }, i.y = function(t) {
                return arguments.length ? (u = t, i) : u
            }, i.extent = function(t) {
                return arguments.length ? (null == t ? n = e = r = o = null : (n = +t[0][0], e = +t[0][1], r = +t[1][0], o = +t[1][1]), i) : null == n ? null : [
                    [n, e],
                    [r, o]
                ]
            }, i.size = function(t) {
                return arguments.length ? (null == t ? n = e = r = o = null : (n = e = 0, r = +t[0], o = +t[1]), i) : null == n ? null : [r - n, o - e]
            }, i)
        }, ha.interpolateRgb = br, ha.interpolateObject = wr, ha.interpolateNumber = xr, ha.interpolateString = Tr;
        var hu = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
            du = new RegExp(hu.source, "g");
        ha.interpolate = Sr, ha.interpolators = [function(t, n) {
            var e = typeof n;
            return ("string" === e ? as.has(n.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(n) ? br : Tr : n instanceof pt ? br : Array.isArray(n) ? Mr : "object" === e && isNaN(n) ? wr : xr)(t, n)
        }], ha.interpolateArray = Mr;
        var gu = function() {
                return T
            },
            vu = ha.map({
                linear: gu,
                poly: Or,
                quad: function() {
                    return Pr
                },
                cubic: function() {
                    return Er
                },
                sin: function() {
                    return $r
                },
                exp: function() {
                    return Lr
                },
                circle: function() {
                    return Ir
                },
                elastic: Rr,
                back: Dr,
                bounce: function() {
                    return Fr
                }
            }),
            yu = ha.map({ in: T,
                out: Cr,
                "in-out": Ar,
                "out-in": function(t) {
                    return Ar(Cr(t))
                }
            });
        ha.ease = function(t) {
            var n = t.indexOf("-"),
                e = n >= 0 ? t.slice(0, n) : t,
                r = n >= 0 ? t.slice(n + 1) : "in";
            return e = vu.get(e) || gu, r = yu.get(r) || T, kr(r(e.apply(null, da.call(arguments, 1))))
        }, ha.interpolateHcl = jr, ha.interpolateHsl = Ur, ha.interpolateLab = zr, ha.interpolateRound = Hr, ha.transform = function(t) {
            var n = va.createElementNS(ha.ns.prefix.svg, "g");
            return (ha.transform = function(t) {
                if (null != t) {
                    n.setAttribute("transform", t);
                    var e = n.transform.baseVal.consolidate()
                }
                return new Br(e ? e.matrix : mu)
            })(t)
        }, Br.prototype.toString = function() {
            return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")"
        };
        var mu = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            e: 0,
            f: 0
        };
        ha.interpolateTransform = Jr, ha.layout = {}, ha.layout.bundle = function() {
            return function(t) {
                for (var n = [], e = -1, r = t.length; ++e < r;) n.push(no(t[e]));
                return n
            }
        }, ha.layout.chord = function() {
            function t() {
                var t, l, p, f, h, d = {},
                    g = [],
                    v = ha.range(i),
                    y = [];
                for (e = [], r = [], t = 0, f = -1; ++f < i;) {
                    for (l = 0, h = -1; ++h < i;) l += o[f][h];
                    g.push(l), y.push(ha.range(i)), t += l
                }
                for (a && v.sort(function(t, n) {
                        return a(g[t], g[n])
                    }), s && y.forEach(function(t, n) {
                        t.sort(function(t, e) {
                            return s(o[n][t], o[n][e])
                        })
                    }), t = (Ba - c * i) / t, l = 0, f = -1; ++f < i;) {
                    for (p = l, h = -1; ++h < i;) {
                        var m = v[f],
                            _ = y[m][h],
                            b = o[m][_],
                            w = l,
                            x = l += b * t;
                        d[m + "-" + _] = {
                            index: m,
                            subindex: _,
                            startAngle: w,
                            endAngle: x,
                            value: b
                        }
                    }
                    r[m] = {
                        index: m,
                        startAngle: p,
                        endAngle: l,
                        value: g[m]
                    }, l += c
                }
                for (f = -1; ++f < i;)
                    for (h = f - 1; ++h < i;) {
                        var T = d[f + "-" + h],
                            S = d[h + "-" + f];
                        (T.value || S.value) && e.push(T.value < S.value ? {
                            source: S,
                            target: T
                        } : {
                            source: T,
                            target: S
                        })
                    }
                u && n()
            }

            function n() {
                e.sort(function(t, n) {
                    return u((t.source.value + t.target.value) / 2, (n.source.value + n.target.value) / 2)
                })
            }
            var e, r, o, i, a, s, u, l = {},
                c = 0;
            return l.matrix = function(t) {
                return arguments.length ? (i = (o = t) && o.length, e = r = null, l) : o
            }, l.padding = function(t) {
                return arguments.length ? (c = t, e = r = null, l) : c
            }, l.sortGroups = function(t) {
                return arguments.length ? (a = t, e = r = null, l) : a
            }, l.sortSubgroups = function(t) {
                return arguments.length ? (s = t, e = null, l) : s
            }, l.sortChords = function(t) {
                return arguments.length ? (u = t, e && n(), l) : u
            }, l.chords = function() {
                return e || t(), e
            }, l.groups = function() {
                return r || t(), r
            }, l
        }, ha.layout.force = function() {
            function t(t) {
                return function(n, e, r, o) {
                    if (n.point !== t) {
                        var i = n.cx - t.x,
                            a = n.cy - t.y,
                            s = o - e,
                            u = i * i + a * a;
                        if (s * s / y < u) {
                            if (u < g) {
                                var l = n.charge / u;
                                t.px -= i * l, t.py -= a * l
                            }
                            return !0
                        }
                        if (n.point && u && u < g) {
                            var l = n.pointCharge / u;
                            t.px -= i * l, t.py -= a * l
                        }
                    }
                    return !n.charge
                }
            }

            function n(t) {
                t.px = ha.event.x, t.py = ha.event.y, u.resume()
            }
            var e, r, o, i, a, s, u = {},
                l = ha.dispatch("start", "tick", "end"),
                c = [1, 1],
                p = .9,
                f = _u,
                h = bu,
                d = -30,
                g = wu,
                v = .1,
                y = .64,
                m = [],
                _ = [];
            return u.tick = function() {
                if ((o *= .99) < .005) return e = null, l.end({
                    type: "end",
                    alpha: o = 0
                }), !0;
                var n, r, u, f, h, g, y, b, w, x = m.length,
                    T = _.length;
                for (r = 0; r < T; ++r) u = _[r], f = u.source, h = u.target, b = h.x - f.x, w = h.y - f.y, (g = b * b + w * w) && (g = o * a[r] * ((g = Math.sqrt(g)) - i[r]) / g, b *= g, w *= g, h.x -= b * (y = f.weight + h.weight ? f.weight / (f.weight + h.weight) : .5), h.y -= w * y, f.x += b * (y = 1 - y), f.y += w * y);
                if ((y = o * v) && (b = c[0] / 2, w = c[1] / 2, r = -1, y))
                    for (; ++r < x;) u = m[r], u.x += (b - u.x) * y, u.y += (w - u.y) * y;
                if (d)
                    for (uo(n = ha.geom.quadtree(m), o, s), r = -1; ++r < x;)(u = m[r]).fixed || n.visit(t(u));
                for (r = -1; ++r < x;) u = m[r], u.fixed ? (u.x = u.px, u.y = u.py) : (u.x -= (u.px - (u.px = u.x)) * p, u.y -= (u.py - (u.py = u.y)) * p);
                l.tick({
                    type: "tick",
                    alpha: o
                })
            }, u.nodes = function(t) {
                return arguments.length ? (m = t, u) : m
            }, u.links = function(t) {
                return arguments.length ? (_ = t, u) : _
            }, u.size = function(t) {
                return arguments.length ? (c = t, u) : c
            }, u.linkDistance = function(t) {
                return arguments.length ? (f = "function" == typeof t ? t : +t, u) : f
            }, u.distance = u.linkDistance, u.linkStrength = function(t) {
                return arguments.length ? (h = "function" == typeof t ? t : +t, u) : h
            }, u.friction = function(t) {
                return arguments.length ? (p = +t, u) : p
            }, u.charge = function(t) {
                return arguments.length ? (d = "function" == typeof t ? t : +t, u) : d
            }, u.chargeDistance = function(t) {
                return arguments.length ? (g = t * t, u) : Math.sqrt(g)
            }, u.gravity = function(t) {
                return arguments.length ? (v = +t, u) : v
            }, u.theta = function(t) {
                return arguments.length ? (y = t * t, u) : Math.sqrt(y)
            }, u.alpha = function(t) {
                return arguments.length ? (t = +t, o ? t > 0 ? o = t : (e.c = null, e.t = NaN, e = null, l.end({
                    type: "end",
                    alpha: o = 0
                })) : t > 0 && (l.start({
                    type: "start",
                    alpha: o = t
                }), e = Rt(u.tick)), u) : o
            }, u.start = function() {
                function t(t, r) {
                    if (!e) {
                        for (e = new Array(o), u = 0; u < o; ++u) e[u] = [];
                        for (u = 0; u < l; ++u) {
                            var i = _[u];
                            e[i.source.index].push(i.target), e[i.target.index].push(i.source)
                        }
                    }
                    for (var a, s = e[n], u = -1, c = s.length; ++u < c;)
                        if (!isNaN(a = s[u][t])) return a;
                    return Math.random() * r
                }
                var n, e, r, o = m.length,
                    l = _.length,
                    p = c[0],
                    g = c[1];
                for (n = 0; n < o; ++n)(r = m[n]).index = n, r.weight = 0;
                for (n = 0; n < l; ++n) r = _[n], "number" == typeof r.source && (r.source = m[r.source]), "number" == typeof r.target && (r.target = m[r.target]), ++r.source.weight, ++r.target.weight;
                for (n = 0; n < o; ++n) r = m[n], isNaN(r.x) && (r.x = t("x", p)), isNaN(r.y) && (r.y = t("y", g)), isNaN(r.px) && (r.px = r.x), isNaN(r.py) && (r.py = r.y);
                if (i = [], "function" == typeof f)
                    for (n = 0; n < l; ++n) i[n] = +f.call(this, _[n], n);
                else
                    for (n = 0; n < l; ++n) i[n] = f;
                if (a = [], "function" == typeof h)
                    for (n = 0; n < l; ++n) a[n] = +h.call(this, _[n], n);
                else
                    for (n = 0; n < l; ++n) a[n] = h;
                if (s = [], "function" == typeof d)
                    for (n = 0; n < o; ++n) s[n] = +d.call(this, m[n], n);
                else
                    for (n = 0; n < o; ++n) s[n] = d;
                return u.resume()
            }, u.resume = function() {
                return u.alpha(.1)
            }, u.stop = function() {
                return u.alpha(0)
            }, u.drag = function() {
                if (r || (r = ha.behavior.drag().origin(T).on("dragstart.force", oo).on("drag.force", n).on("dragend.force", io)), !arguments.length) return r;
                this.on("mouseover.force", ao).on("mouseout.force", so).call(r)
            }, ha.rebind(u, l, "on")
        };
        var _u = 20,
            bu = 1,
            wu = 1 / 0;
        ha.layout.hierarchy = function() {
            function t(o) {
                var i, a = [o],
                    s = [];
                for (o.depth = 0; null != (i = a.pop());)
                    if (s.push(i), (l = e.call(t, i, i.depth)) && (u = l.length)) {
                        for (var u, l, c; --u >= 0;) a.push(c = l[u]), c.parent = i, c.depth = i.depth + 1;
                        r && (i.value = 0), i.children = l
                    } else r && (i.value = +r.call(t, i, i.depth) || 0), delete i.children;
                return po(o, function(t) {
                    var e, o;
                    n && (e = t.children) && e.sort(n), r && (o = t.parent) && (o.value += t.value)
                }), s
            }
            var n = go,
                e = fo,
                r = ho;
            return t.sort = function(e) {
                return arguments.length ? (n = e, t) : n
            }, t.children = function(n) {
                return arguments.length ? (e = n, t) : e
            }, t.value = function(n) {
                return arguments.length ? (r = n, t) : r
            }, t.revalue = function(n) {
                return r && (co(n, function(t) {
                    t.children && (t.value = 0)
                }), po(n, function(n) {
                    var e;
                    n.children || (n.value = +r.call(t, n, n.depth) || 0), (e = n.parent) && (e.value += n.value)
                })), n
            }, t
        }, ha.layout.partition = function() {
            function t(n, e, r, o) {
                var i = n.children;
                if (n.x = e, n.y = n.depth * o, n.dx = r, n.dy = o, i && (a = i.length)) {
                    var a, s, u, l = -1;
                    for (r = n.value ? r / n.value : 0; ++l < a;) t(s = i[l], e, u = s.value * r, o), e += u
                }
            }

            function n(t) {
                var e = t.children,
                    r = 0;
                if (e && (o = e.length))
                    for (var o, i = -1; ++i < o;) r = Math.max(r, n(e[i]));
                return 1 + r
            }

            function e(e, i) {
                var a = r.call(this, e, i);
                return t(a[0], 0, o[0], o[1] / n(a[0])), a
            }
            var r = ha.layout.hierarchy(),
                o = [1, 1];
            return e.size = function(t) {
                return arguments.length ? (o = t, e) : o
            }, lo(e, r)
        }, ha.layout.pie = function() {
            function t(a) {
                var s, u = a.length,
                    l = a.map(function(e, r) {
                        return +n.call(t, e, r)
                    }),
                    c = +("function" == typeof r ? r.apply(this, arguments) : r),
                    p = ("function" == typeof o ? o.apply(this, arguments) : o) - c,
                    f = Math.min(Math.abs(p) / u, +("function" == typeof i ? i.apply(this, arguments) : i)),
                    h = f * (p < 0 ? -1 : 1),
                    d = ha.sum(l),
                    g = d ? (p - u * h) / d : 0,
                    v = ha.range(u),
                    y = [];
                return null != e && v.sort(e === xu ? function(t, n) {
                    return l[n] - l[t]
                } : function(t, n) {
                    return e(a[t], a[n])
                }), v.forEach(function(t) {
                    y[t] = {
                        data: a[t],
                        value: s = l[t],
                        startAngle: c,
                        endAngle: c += s * g + h,
                        padAngle: f
                    }
                }), y
            }
            var n = Number,
                e = xu,
                r = 0,
                o = Ba,
                i = 0;
            return t.value = function(e) {
                return arguments.length ? (n = e, t) : n
            }, t.sort = function(n) {
                return arguments.length ? (e = n, t) : e
            }, t.startAngle = function(n) {
                return arguments.length ? (r = n, t) : r
            }, t.endAngle = function(n) {
                return arguments.length ? (o = n, t) : o
            }, t.padAngle = function(n) {
                return arguments.length ? (i = n, t) : i
            }, t
        };
        var xu = {};
        ha.layout.stack = function() {
            function t(s, u) {
                if (!(f = s.length)) return s;
                var l = s.map(function(e, r) {
                        return n.call(t, e, r)
                    }),
                    c = l.map(function(n) {
                        return n.map(function(n, e) {
                            return [i.call(t, n, e), a.call(t, n, e)]
                        })
                    }),
                    p = e.call(t, c, u);
                l = ha.permute(l, p), c = ha.permute(c, p);
                var f, h, d, g, v = r.call(t, c, u),
                    y = l[0].length;
                for (d = 0; d < y; ++d)
                    for (o.call(t, l[0][d], g = v[d], c[0][d][1]), h = 1; h < f; ++h) o.call(t, l[h][d], g += c[h - 1][d][1], c[h][d][1]);
                return s
            }
            var n = T,
                e = bo,
                r = wo,
                o = _o,
                i = yo,
                a = mo;
            return t.values = function(e) {
                return arguments.length ? (n = e, t) : n
            }, t.order = function(n) {
                return arguments.length ? (e = "function" == typeof n ? n : Tu.get(n) || bo, t) : e
            }, t.offset = function(n) {
                return arguments.length ? (r = "function" == typeof n ? n : Su.get(n) || wo, t) : r
            }, t.x = function(n) {
                return arguments.length ? (i = n, t) : i
            }, t.y = function(n) {
                return arguments.length ? (a = n, t) : a
            }, t.out = function(n) {
                return arguments.length ? (o = n, t) : o
            }, t
        };
        var Tu = ha.map({
                "inside-out": function(t) {
                    var n, e, r = t.length,
                        o = t.map(xo),
                        i = t.map(To),
                        a = ha.range(r).sort(function(t, n) {
                            return o[t] - o[n]
                        }),
                        s = 0,
                        u = 0,
                        l = [],
                        c = [];
                    for (n = 0; n < r; ++n) e = a[n], s < u ? (s += i[e], l.push(e)) : (u += i[e], c.push(e));
                    return c.reverse().concat(l)
                },
                reverse: function(t) {
                    return ha.range(t.length).reverse()
                },
                default: bo
            }),
            Su = ha.map({
                silhouette: function(t) {
                    var n, e, r, o = t.length,
                        i = t[0].length,
                        a = [],
                        s = 0,
                        u = [];
                    for (e = 0; e < i; ++e) {
                        for (n = 0, r = 0; n < o; n++) r += t[n][e][1];
                        r > s && (s = r), a.push(r)
                    }
                    for (e = 0; e < i; ++e) u[e] = (s - a[e]) / 2;
                    return u
                },
                wiggle: function(t) {
                    var n, e, r, o, i, a, s, u, l, c = t.length,
                        p = t[0],
                        f = p.length,
                        h = [];
                    for (h[0] = u = l = 0, e = 1; e < f; ++e) {
                        for (n = 0, o = 0; n < c; ++n) o += t[n][e][1];
                        for (n = 0, i = 0, s = p[e][0] - p[e - 1][0]; n < c; ++n) {
                            for (r = 0, a = (t[n][e][1] - t[n][e - 1][1]) / (2 * s); r < n; ++r) a += (t[r][e][1] - t[r][e - 1][1]) / s;
                            i += a * t[n][e][1]
                        }
                        h[e] = u -= o ? i / o * s : 0, u < l && (l = u)
                    }
                    for (e = 0; e < f; ++e) h[e] -= l;
                    return h
                },
                expand: function(t) {
                    var n, e, r, o = t.length,
                        i = t[0].length,
                        a = 1 / o,
                        s = [];
                    for (e = 0; e < i; ++e) {
                        for (n = 0, r = 0; n < o; n++) r += t[n][e][1];
                        if (r)
                            for (n = 0; n < o; n++) t[n][e][1] /= r;
                        else
                            for (n = 0; n < o; n++) t[n][e][1] = a
                    }
                    for (e = 0; e < i; ++e) s[e] = 0;
                    return s
                },
                zero: wo
            });
        ha.layout.histogram = function() {
            function t(t, i) {
                for (var a, s, u = [], l = t.map(e, this), c = r.call(this, l, i), p = o.call(this, c, l, i), i = -1, f = l.length, h = p.length - 1, d = n ? 1 : 1 / f; ++i < h;) a = u[i] = [], a.dx = p[i + 1] - (a.x = p[i]), a.y = 0;
                if (h > 0)
                    for (i = -1; ++i < f;)(s = l[i]) >= c[0] && s <= c[1] && (a = u[ha.bisect(p, s, 1, h) - 1], a.y += d, a.push(t[i]));
                return u
            }
            var n = !0,
                e = Number,
                r = Co,
                o = Mo;
            return t.value = function(n) {
                return arguments.length ? (e = n, t) : e
            }, t.range = function(n) {
                return arguments.length ? (r = Nt(n), t) : r
            }, t.bins = function(n) {
                return arguments.length ? (o = "number" == typeof n ? function(t) {
                    return ko(t, n)
                } : Nt(n), t) : o
            }, t.frequency = function(e) {
                return arguments.length ? (n = !!e, t) : n
            }, t
        }, ha.layout.pack = function() {
            function t(t, i) {
                var a = e.call(this, t, i),
                    s = a[0],
                    u = o[0],
                    l = o[1],
                    c = null == n ? Math.sqrt : "function" == typeof n ? n : function() {
                        return n
                    };
                if (s.x = s.y = 0, po(s, function(t) {
                        t.r = +c(t.value)
                    }), po(s, Oo), r) {
                    var p = r * (n ? 1 : Math.max(2 * s.r / u, 2 * s.r / l)) / 2;
                    po(s, function(t) {
                        t.r += p
                    }), po(s, Oo), po(s, function(t) {
                        t.r -= p
                    })
                }
                return Io(s, u / 2, l / 2, n ? 1 : 1 / Math.max(2 * s.r / u, 2 * s.r / l)), a
            }
            var n, e = ha.layout.hierarchy().sort(Ao),
                r = 0,
                o = [1, 1];
            return t.size = function(n) {
                return arguments.length ? (o = n, t) : o
            }, t.radius = function(e) {
                return arguments.length ? (n = null == e || "function" == typeof e ? e : +e, t) : n
            }, t.padding = function(n) {
                return arguments.length ? (r = +n, t) : r
            }, lo(t, e)
        }, ha.layout.tree = function() {
            function t(t, o) {
                var c = a.call(this, t, o),
                    p = c[0],
                    f = n(p);
                if (po(f, e), f.parent.m = -f.z, co(f, r), l) co(p, i);
                else {
                    var h = p,
                        d = p,
                        g = p;
                    co(p, function(t) {
                        t.x < h.x && (h = t), t.x > d.x && (d = t), t.depth > g.depth && (g = t)
                    });
                    var v = s(h, d) / 2 - h.x,
                        y = u[0] / (d.x + s(d, h) / 2 + v),
                        m = u[1] / (g.depth || 1);
                    co(p, function(t) {
                        t.x = (t.x + v) * y, t.y = t.depth * m
                    })
                }
                return c
            }

            function n(t) {
                for (var n, e = {
                        A: null,
                        children: [t]
                    }, r = [e]; null != (n = r.pop());)
                    for (var o, i = n.children, a = 0, s = i.length; a < s; ++a) r.push((i[a] = o = {
                        _: i[a],
                        parent: n,
                        children: (o = i[a].children) && o.slice() || [],
                        A: null,
                        a: null,
                        z: 0,
                        m: 0,
                        c: 0,
                        s: 0,
                        t: null,
                        i: a
                    }).a = o);
                return e.children[0]
            }

            function e(t) {
                var n = t.children,
                    e = t.parent.children,
                    r = t.i ? e[t.i - 1] : null;
                if (n.length) {
                    zo(t);
                    var i = (n[0].z + n[n.length - 1].z) / 2;
                    r ? (t.z = r.z + s(t._, r._), t.m = t.z - i) : t.z = i
                } else r && (t.z = r.z + s(t._, r._));
                t.parent.A = o(t, r, t.parent.A || e[0])
            }

            function r(t) {
                t._.x = t.z + t.parent.m, t.m += t.parent.m
            }

            function o(t, n, e) {
                if (n) {
                    for (var r, o = t, i = t, a = n, u = o.parent.children[0], l = o.m, c = i.m, p = a.m, f = u.m; a = jo(a), o = Fo(o), a && o;) u = Fo(u), i = jo(i), i.a = t, r = a.z + p - o.z - l + s(a._, o._), r > 0 && (Uo(Ho(a, t, e), t, r), l += r, c += r), p += a.m, l += o.m, f += u.m, c += i.m;
                    a && !jo(i) && (i.t = a, i.m += p - c), o && !Fo(u) && (u.t = o, u.m += l - f, e = t)
                }
                return e
            }

            function i(t) {
                t.x *= u[0], t.y = t.depth * u[1]
            }
            var a = ha.layout.hierarchy().sort(null).value(null),
                s = Do,
                u = [1, 1],
                l = null;
            return t.separation = function(n) {
                return arguments.length ? (s = n, t) : s
            }, t.size = function(n) {
                return arguments.length ? (l = null == (u = n) ? i : null, t) : l ? null : u
            }, t.nodeSize = function(n) {
                return arguments.length ? (l = null == (u = n) ? null : i, t) : l ? u : null
            }, lo(t, a)
        }, ha.layout.cluster = function() {
            function t(t, i) {
                var a, s = n.call(this, t, i),
                    u = s[0],
                    l = 0;
                po(u, function(t) {
                    var n = t.children;
                    n && n.length ? (t.x = Wo(n), t.y = Bo(n)) : (t.x = a ? l += e(t, a) : 0, t.y = 0, a = t)
                });
                var c = Go(u),
                    p = qo(u),
                    f = c.x - e(c, p) / 2,
                    h = p.x + e(p, c) / 2;
                return po(u, o ? function(t) {
                    t.x = (t.x - u.x) * r[0], t.y = (u.y - t.y) * r[1]
                } : function(t) {
                    t.x = (t.x - f) / (h - f) * r[0], t.y = (1 - (u.y ? t.y / u.y : 1)) * r[1]
                }), s
            }
            var n = ha.layout.hierarchy().sort(null).value(null),
                e = Do,
                r = [1, 1],
                o = !1;
            return t.separation = function(n) {
                return arguments.length ? (e = n, t) : e
            }, t.size = function(n) {
                return arguments.length ? (o = null == (r = n), t) : o ? null : r
            }, t.nodeSize = function(n) {
                return arguments.length ? (o = null != (r = n), t) : o ? r : null
            }, lo(t, n)
        }, ha.layout.treemap = function() {
            function t(t, n) {
                for (var e, r, o = -1, i = t.length; ++o < i;) r = (e = t[o]).value * (n < 0 ? 0 : n), e.area = isNaN(r) || r <= 0 ? 0 : r
            }

            function n(e) {
                var i = e.children;
                if (i && i.length) {
                    var a, s, u, l = p(e),
                        c = [],
                        f = i.slice(),
                        d = 1 / 0,
                        g = "slice" === h ? l.dx : "dice" === h ? l.dy : "slice-dice" === h ? 1 & e.depth ? l.dy : l.dx : Math.min(l.dx, l.dy);
                    for (t(f, l.dx * l.dy / e.value), c.area = 0;
                        (u = f.length) > 0;) c.push(a = f[u - 1]), c.area += a.area, "squarify" !== h || (s = r(c, g)) <= d ? (f.pop(), d = s) : (c.area -= c.pop().area, o(c, g, l, !1), g = Math.min(l.dx, l.dy), c.length = c.area = 0, d = 1 / 0);
                    c.length && (o(c, g, l, !0), c.length = c.area = 0), i.forEach(n)
                }
            }

            function e(n) {
                var r = n.children;
                if (r && r.length) {
                    var i, a = p(n),
                        s = r.slice(),
                        u = [];
                    for (t(s, a.dx * a.dy / n.value), u.area = 0; i = s.pop();) u.push(i), u.area += i.area, null != i.z && (o(u, i.z ? a.dx : a.dy, a, !s.length), u.length = u.area = 0);
                    r.forEach(e)
                }
            }

            function r(t, n) {
                for (var e, r = t.area, o = 0, i = 1 / 0, a = -1, s = t.length; ++a < s;)(e = t[a].area) && (e < i && (i = e), e > o && (o = e));
                return r *= r, n *= n, r ? Math.max(n * o * d / r, r / (n * i * d)) : 1 / 0
            }

            function o(t, n, e, r) {
                var o, i = -1,
                    a = t.length,
                    s = e.x,
                    l = e.y,
                    c = n ? u(t.area / n) : 0;
                if (n == e.dx) {
                    for ((r || c > e.dy) && (c = e.dy); ++i < a;) o = t[i], o.x = s, o.y = l, o.dy = c, s += o.dx = Math.min(e.x + e.dx - s, c ? u(o.area / c) : 0);
                    o.z = !0, o.dx += e.x + e.dx - s, e.y += c, e.dy -= c
                } else {
                    for ((r || c > e.dx) && (c = e.dx); ++i < a;) o = t[i], o.x = s, o.y = l, o.dx = c, l += o.dy = Math.min(e.y + e.dy - l, c ? u(o.area / c) : 0);
                    o.z = !1, o.dy += e.y + e.dy - l, e.x += c, e.dx -= c
                }
            }

            function i(r) {
                var o = a || s(r),
                    i = o[0];
                return i.x = i.y = 0, i.value ? (i.dx = l[0], i.dy = l[1]) : i.dx = i.dy = 0, a && s.revalue(i), t([i], i.dx * i.dy / i.value), (a ? e : n)(i), f && (a = o), o
            }
            var a, s = ha.layout.hierarchy(),
                u = Math.round,
                l = [1, 1],
                c = null,
                p = Yo,
                f = !1,
                h = "squarify",
                d = .5 * (1 + Math.sqrt(5));
            return i.size = function(t) {
                return arguments.length ? (l = t, i) : l
            }, i.padding = function(t) {
                function n(n) {
                    var e = t.call(i, n, n.depth);
                    return null == e ? Yo(n) : Vo(n, "number" == typeof e ? [e, e, e, e] : e)
                }

                function e(n) {
                    return Vo(n, t)
                }
                if (!arguments.length) return c;
                var r;
                return p = null == (c = t) ? Yo : "function" == (r = typeof t) ? n : "number" === r ? (t = [t, t, t, t], e) : e, i
            }, i.round = function(t) {
                return arguments.length ? (u = t ? Math.round : Number, i) : u != Number
            }, i.sticky = function(t) {
                return arguments.length ? (f = t, a = null, i) : f
            }, i.ratio = function(t) {
                return arguments.length ? (d = t, i) : d
            }, i.mode = function(t) {
                return arguments.length ? (h = t + "", i) : h
            }, lo(i, s)
        }, ha.random = {
            normal: function(t, n) {
                var e = arguments.length;
                return e < 2 && (n = 1), e < 1 && (t = 0),
                    function() {
                        var e, r, o;
                        do {
                            e = 2 * Math.random() - 1, r = 2 * Math.random() - 1, o = e * e + r * r
                        } while (!o || o > 1);
                        return t + n * e * Math.sqrt(-2 * Math.log(o) / o)
                    }
            },
            logNormal: function() {
                var t = ha.random.normal.apply(ha, arguments);
                return function() {
                    return Math.exp(t())
                }
            },
            bates: function(t) {
                var n = ha.random.irwinHall(t);
                return function() {
                    return n() / t
                }
            },
            irwinHall: function(t) {
                return function() {
                    for (var n = 0, e = 0; e < t; e++) n += Math.random();
                    return n
                }
            }
        }, ha.scale = {};
        var Mu = {
            floor: T,
            ceil: T
        };
        ha.scale.linear = function() {
            return ni([0, 1], [0, 1], Sr, !1)
        };
        var ku = {
            s: 1,
            g: 1,
            p: 1,
            r: 1,
            e: 1
        };
        ha.scale.log = function() {
            return li(ha.scale.linear().domain([0, 1]), 10, !0, [1, 10])
        };
        var Cu = ha.format(".0e"),
            Au = {
                floor: function(t) {
                    return -Math.ceil(-t)
                },
                ceil: function(t) {
                    return -Math.floor(-t)
                }
            };
        ha.scale.pow = function() {
            return ci(ha.scale.linear(), 1, [0, 1])
        }, ha.scale.sqrt = function() {
            return ha.scale.pow().exponent(.5)
        }, ha.scale.ordinal = function() {
            return fi([], {
                t: "range",
                a: [
                    []
                ]
            })
        }, ha.scale.category10 = function() {
            return ha.scale.ordinal().range(Pu)
        }, ha.scale.category20 = function() {
            return ha.scale.ordinal().range(Eu)
        }, ha.scale.category20b = function() {
            return ha.scale.ordinal().range(Nu)
        }, ha.scale.category20c = function() {
            return ha.scale.ordinal().range(Ou)
        };
        var Pu = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(St),
            Eu = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(St),
            Nu = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(St),
            Ou = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(St);
        ha.scale.quantile = function() {
            return hi([], [])
        }, ha.scale.quantize = function() {
            return di(0, 1, [0, 1])
        }, ha.scale.threshold = function() {
            return gi([.5], [0, 1])
        }, ha.scale.identity = function() {
            return vi([0, 1])
        }, ha.svg = {}, ha.svg.arc = function() {
            function t() {
                var t = Math.max(0, +e.apply(this, arguments)),
                    l = Math.max(0, +r.apply(this, arguments)),
                    c = a.apply(this, arguments) - Ga,
                    p = s.apply(this, arguments) - Ga,
                    f = Math.abs(p - c),
                    h = c > p ? 0 : 1;
                if (l < t && (d = l, l = t, t = d), f >= Wa) return n(l, h) + (t ? n(t, 1 - h) : "") + "Z";
                var d, g, v, y, m, _, b, w, x, T, S, M, k = 0,
                    C = 0,
                    A = [];
                if ((y = (+u.apply(this, arguments) || 0) / 2) && (v = i === $u ? Math.sqrt(t * t + l * l) : +i.apply(this, arguments), h || (C *= -1), l && (C = at(v / l * Math.sin(y))), t && (k = at(v / t * Math.sin(y)))), l) {
                    m = l * Math.cos(c + C), _ = l * Math.sin(c + C), b = l * Math.cos(p - C), w = l * Math.sin(p - C);
                    var P = Math.abs(p - c - 2 * C) <= Ha ? 0 : 1;
                    if (C && Ti(m, _, b, w) === h ^ P) {
                        var E = (c + p) / 2;
                        m = l * Math.cos(E), _ = l * Math.sin(E), b = w = null
                    }
                } else m = _ = 0;
                if (t) {
                    x = t * Math.cos(p - k), T = t * Math.sin(p - k), S = t * Math.cos(c + k), M = t * Math.sin(c + k);
                    var N = Math.abs(c - p + 2 * k) <= Ha ? 0 : 1;
                    if (k && Ti(x, T, S, M) === 1 - h ^ N) {
                        var O = (c + p) / 2;
                        x = t * Math.cos(O), T = t * Math.sin(O), S = M = null
                    }
                } else x = T = 0;
                if (f > Ua && (d = Math.min(Math.abs(l - t) / 2, +o.apply(this, arguments))) > .001) {
                    g = t < l ^ h ? 0 : 1;
                    var $ = d,
                        L = d;
                    if (f < Ha) {
                        var I = null == S ? [x, T] : null == b ? [m, _] : je([m, _], [S, M], [b, w], [x, T]),
                            R = m - I[0],
                            D = _ - I[1],
                            F = b - I[0],
                            j = w - I[1],
                            U = 1 / Math.sin(Math.acos((R * F + D * j) / (Math.sqrt(R * R + D * D) * Math.sqrt(F * F + j * j))) / 2),
                            z = Math.sqrt(I[0] * I[0] + I[1] * I[1]);
                        L = Math.min(d, (t - z) / (U - 1)), $ = Math.min(d, (l - z) / (U + 1))
                    }
                    if (null != b) {
                        var H = Si(null == S ? [x, T] : [S, M], [m, _], l, $, h),
                            B = Si([b, w], [x, T], l, $, h);
                        d === $ ? A.push("M", H[0], "A", $, ",", $, " 0 0,", g, " ", H[1], "A", l, ",", l, " 0 ", 1 - h ^ Ti(H[1][0], H[1][1], B[1][0], B[1][1]), ",", h, " ", B[1], "A", $, ",", $, " 0 0,", g, " ", B[0]) : A.push("M", H[0], "A", $, ",", $, " 0 1,", g, " ", B[0])
                    } else A.push("M", m, ",", _);
                    if (null != S) {
                        var W = Si([m, _], [S, M], t, -L, h),
                            G = Si([x, T], null == b ? [m, _] : [b, w], t, -L, h);
                        d === L ? A.push("L", G[0], "A", L, ",", L, " 0 0,", g, " ", G[1], "A", t, ",", t, " 0 ", h ^ Ti(G[1][0], G[1][1], W[1][0], W[1][1]), ",", 1 - h, " ", W[1], "A", L, ",", L, " 0 0,", g, " ", W[0]) : A.push("L", G[0], "A", L, ",", L, " 0 0,", g, " ", W[0])
                    } else A.push("L", x, ",", T)
                } else A.push("M", m, ",", _), null != b && A.push("A", l, ",", l, " 0 ", P, ",", h, " ", b, ",", w), A.push("L", x, ",", T), null != S && A.push("A", t, ",", t, " 0 ", N, ",", 1 - h, " ", S, ",", M);
                return A.push("Z"), A.join("")
            }

            function n(t, n) {
                return "M0," + t + "A" + t + "," + t + " 0 1," + n + " 0," + -t + "A" + t + "," + t + " 0 1," + n + " 0," + t
            }
            var e = mi,
                r = _i,
                o = yi,
                i = $u,
                a = bi,
                s = wi,
                u = xi;
            return t.innerRadius = function(n) {
                return arguments.length ? (e = Nt(n), t) : e
            }, t.outerRadius = function(n) {
                return arguments.length ? (r = Nt(n), t) : r
            }, t.cornerRadius = function(n) {
                return arguments.length ? (o = Nt(n), t) : o
            }, t.padRadius = function(n) {
                return arguments.length ? (i = n == $u ? $u : Nt(n), t) : i
            }, t.startAngle = function(n) {
                return arguments.length ? (a = Nt(n), t) : a
            }, t.endAngle = function(n) {
                return arguments.length ? (s = Nt(n), t) : s
            }, t.padAngle = function(n) {
                return arguments.length ? (u = Nt(n), t) : u
            }, t.centroid = function() {
                var t = (+e.apply(this, arguments) + +r.apply(this, arguments)) / 2,
                    n = (+a.apply(this, arguments) + +s.apply(this, arguments)) / 2 - Ga;
                return [Math.cos(n) * t, Math.sin(n) * t]
            }, t
        };
        var $u = "auto";
        ha.svg.line = function() {
            return Mi(T)
        };
        var Lu = ha.map({
            linear: ki,
            "linear-closed": Ci,
            step: Ai,
            "step-before": Pi,
            "step-after": Ei,
            basis: Ri,
            "basis-open": Di,
            "basis-closed": Fi,
            bundle: ji,
            cardinal: $i,
            "cardinal-open": Ni,
            "cardinal-closed": Oi,
            monotone: Gi
        });
        Lu.forEach(function(t, n) {
            n.key = t, n.closed = /-closed$/.test(t)
        });
        var Iu = [0, 2 / 3, 1 / 3, 0],
            Ru = [0, 1 / 3, 2 / 3, 0],
            Du = [0, 1 / 6, 2 / 3, 1 / 6];
        ha.svg.line.radial = function() {
            var t = Mi(qi);
            return t.radius = t.x, delete t.x, t.angle = t.y, delete t.y, t
        }, Pi.reverse = Ei, Ei.reverse = Pi, ha.svg.area = function() {
            return Yi(T)
        }, ha.svg.area.radial = function() {
            var t = Yi(qi);
            return t.radius = t.x, delete t.x, t.innerRadius = t.x0, delete t.x0, t.outerRadius = t.x1, delete t.x1, t.angle = t.y, delete t.y, t.startAngle = t.y0, delete t.y0, t.endAngle = t.y1, delete t.y1, t
        }, ha.svg.chord = function() {
            function t(t, s) {
                var u = n(this, i, t, s),
                    l = n(this, a, t, s);
                return "M" + u.p0 + r(u.r, u.p1, u.a1 - u.a0) + (e(u, l) ? o(u.r, u.p1, u.r, u.p0) : o(u.r, u.p1, l.r, l.p0) + r(l.r, l.p1, l.a1 - l.a0) + o(l.r, l.p1, u.r, u.p0)) + "Z"
            }

            function n(t, n, e, r) {
                var o = n.call(t, e, r),
                    i = s.call(t, o, r),
                    a = u.call(t, o, r) - Ga,
                    c = l.call(t, o, r) - Ga;
                return {
                    r: i,
                    a0: a,
                    a1: c,
                    p0: [i * Math.cos(a), i * Math.sin(a)],
                    p1: [i * Math.cos(c), i * Math.sin(c)]
                }
            }

            function e(t, n) {
                return t.a0 == n.a0 && t.a1 == n.a1
            }

            function r(t, n, e) {
                return "A" + t + "," + t + " 0 " + +(e > Ha) + ",1 " + n
            }

            function o(t, n, e, r) {
                return "Q 0,0 " + r
            }
            var i = Se,
                a = Me,
                s = Vi,
                u = bi,
                l = wi;
            return t.radius = function(n) {
                return arguments.length ? (s = Nt(n), t) : s
            }, t.source = function(n) {
                return arguments.length ? (i = Nt(n), t) : i
            }, t.target = function(n) {
                return arguments.length ? (a = Nt(n), t) : a
            }, t.startAngle = function(n) {
                return arguments.length ? (u = Nt(n), t) : u
            }, t.endAngle = function(n) {
                return arguments.length ? (l = Nt(n), t) : l
            }, t
        }, ha.svg.diagonal = function() {
            function t(t, o) {
                var i = n.call(this, t, o),
                    a = e.call(this, t, o),
                    s = (i.y + a.y) / 2,
                    u = [i, {
                        x: i.x,
                        y: s
                    }, {
                        x: a.x,
                        y: s
                    }, a];
                return u = u.map(r), "M" + u[0] + "C" + u[1] + " " + u[2] + " " + u[3]
            }
            var n = Se,
                e = Me,
                r = Ki;
            return t.source = function(e) {
                return arguments.length ? (n = Nt(e), t) : n
            }, t.target = function(n) {
                return arguments.length ? (e = Nt(n), t) : e
            }, t.projection = function(n) {
                return arguments.length ? (r = n, t) : r
            }, t
        }, ha.svg.diagonal.radial = function() {
            var t = ha.svg.diagonal(),
                n = Ki,
                e = t.projection;
            return t.projection = function(t) {
                return arguments.length ? e(Zi(n = t)) : n
            }, t
        }, ha.svg.symbol = function() {
            function t(t, r) {
                return (Fu.get(n.call(this, t, r)) || Qi)(e.call(this, t, r))
            }
            var n = Ji,
                e = Xi;
            return t.type = function(e) {
                return arguments.length ? (n = Nt(e), t) : n
            }, t.size = function(n) {
                return arguments.length ? (e = Nt(n), t) : e
            }, t
        };
        var Fu = ha.map({
            circle: Qi,
            cross: function(t) {
                var n = Math.sqrt(t / 5) / 2;
                return "M" + -3 * n + "," + -n + "H" + -n + "V" + -3 * n + "H" + n + "V" + -n + "H" + 3 * n + "V" + n + "H" + n + "V" + 3 * n + "H" + -n + "V" + n + "H" + -3 * n + "Z"
            },
            diamond: function(t) {
                var n = Math.sqrt(t / (2 * Uu)),
                    e = n * Uu;
                return "M0," + -n + "L" + e + ",0 0," + n + " " + -e + ",0Z"
            },
            square: function(t) {
                var n = Math.sqrt(t) / 2;
                return "M" + -n + "," + -n + "L" + n + "," + -n + " " + n + "," + n + " " + -n + "," + n + "Z"
            },
            "triangle-down": function(t) {
                var n = Math.sqrt(t / ju),
                    e = n * ju / 2;
                return "M0," + e + "L" + n + "," + -e + " " + -n + "," + -e + "Z"
            },
            "triangle-up": function(t) {
                var n = Math.sqrt(t / ju),
                    e = n * ju / 2;
                return "M0," + -e + "L" + n + "," + e + " " + -n + "," + e + "Z"
            }
        });
        ha.svg.symbolTypes = Fu.keys();
        var ju = Math.sqrt(3),
            Uu = Math.tan(30 * qa);
        Oa.transition = function(t) {
            for (var n, e, r = zu || ++Gu, o = oa(t), i = [], a = Hu || {
                    time: Date.now(),
                    ease: Nr,
                    delay: 0,
                    duration: 250
                }, s = -1, u = this.length; ++s < u;) {
                i.push(n = []);
                for (var l = this[s], c = -1, p = l.length; ++c < p;)(e = l[c]) && ia(e, c, o, r, a), n.push(e)
            }
            return na(i, o, r)
        }, Oa.interrupt = function(t) {
            return this.each(null == t ? Bu : ta(oa(t)))
        };
        var zu, Hu, Bu = ta(oa()),
            Wu = [],
            Gu = 0;
        Wu.call = Oa.call, Wu.empty = Oa.empty, Wu.node = Oa.node, Wu.size = Oa.size, ha.transition = function(t, n) {
            return t && t.transition ? zu ? t.transition(n) : t : ha.selection().transition(t)
        }, ha.transition.prototype = Wu, Wu.select = function(t) {
            var n, e, r, o = this.id,
                i = this.namespace,
                a = [];
            t = $(t);
            for (var s = -1, u = this.length; ++s < u;) {
                a.push(n = []);
                for (var l = this[s], c = -1, p = l.length; ++c < p;)(r = l[c]) && (e = t.call(r, r.__data__, c, s)) ? ("__data__" in r && (e.__data__ = r.__data__), ia(e, c, i, o, r[i][o]), n.push(e)) : n.push(null)
            }
            return na(a, i, o)
        }, Wu.selectAll = function(t) {
            var n, e, r, o, i, a = this.id,
                s = this.namespace,
                u = [];
            t = L(t);
            for (var l = -1, c = this.length; ++l < c;)
                for (var p = this[l], f = -1, h = p.length; ++f < h;)
                    if (r = p[f]) {
                        i = r[s][a], e = t.call(r, r.__data__, f, l), u.push(n = []);
                        for (var d = -1, g = e.length; ++d < g;)(o = e[d]) && ia(o, d, s, a, i), n.push(o)
                    }
            return na(u, s, a)
        }, Wu.filter = function(t) {
            var n, e, r, o = [];
            "function" != typeof t && (t = q(t));
            for (var i = 0, a = this.length; i < a; i++) {
                o.push(n = []);
                for (var e = this[i], s = 0, u = e.length; s < u; s++)(r = e[s]) && t.call(r, r.__data__, s, i) && n.push(r)
            }
            return na(o, this.namespace, this.id)
        }, Wu.tween = function(t, n) {
            var e = this.id,
                r = this.namespace;
            return arguments.length < 2 ? this.node()[r][e].tween.get(t) : V(this, null == n ? function(n) {
                n[r][e].tween.remove(t)
            } : function(o) {
                o[r][e].tween.set(t, n)
            })
        }, Wu.attr = function(t, n) {
            function e() {
                this.removeAttribute(s)
            }

            function r() {
                this.removeAttributeNS(s.space, s.local)
            }

            function o(t) {
                return null == t ? e : (t += "", function() {
                    var n, e = this.getAttribute(s);
                    return e !== t && (n = a(e, t), function(t) {
                        this.setAttribute(s, n(t))
                    })
                })
            }

            function i(t) {
                return null == t ? r : (t += "", function() {
                    var n, e = this.getAttributeNS(s.space, s.local);
                    return e !== t && (n = a(e, t), function(t) {
                        this.setAttributeNS(s.space, s.local, n(t))
                    })
                })
            }
            if (arguments.length < 2) {
                for (n in t) this.attr(n, t[n]);
                return this
            }
            var a = "transform" == t ? Jr : Sr,
                s = ha.ns.qualify(t);
            return ea(this, "attr." + t, n, s.local ? i : o)
        }, Wu.attrTween = function(t, n) {
            function e(t, e) {
                var r = n.call(this, t, e, this.getAttribute(o));
                return r && function(t) {
                    this.setAttribute(o, r(t))
                }
            }

            function r(t, e) {
                var r = n.call(this, t, e, this.getAttributeNS(o.space, o.local));
                return r && function(t) {
                    this.setAttributeNS(o.space, o.local, r(t))
                }
            }
            var o = ha.ns.qualify(t);
            return this.tween("attr." + t, o.local ? r : e)
        }, Wu.style = function(t, n, e) {
            function r() {
                this.style.removeProperty(t)
            }

            function o(n) {
                return null == n ? r : (n += "", function() {
                    var r, o = a(this).getComputedStyle(this, null).getPropertyValue(t);
                    return o !== n && (r = Sr(o, n), function(n) {
                        this.style.setProperty(t, r(n), e)
                    })
                })
            }
            var i = arguments.length;
            if (i < 3) {
                if ("string" != typeof t) {
                    i < 2 && (n = "");
                    for (e in t) this.style(e, t[e], n);
                    return this
                }
                e = ""
            }
            return ea(this, "style." + t, n, o)
        }, Wu.styleTween = function(t, n, e) {
            function r(r, o) {
                var i = n.call(this, r, o, a(this).getComputedStyle(this, null).getPropertyValue(t));
                return i && function(n) {
                    this.style.setProperty(t, i(n), e)
                }
            }
            return arguments.length < 3 && (e = ""), this.tween("style." + t, r)
        }, Wu.text = function(t) {
            return ea(this, "text", t, ra)
        }, Wu.remove = function() {
            var t = this.namespace;
            return this.each("end.transition", function() {
                var n;
                this[t].count < 2 && (n = this.parentNode) && n.removeChild(this)
            })
        }, Wu.ease = function(t) {
            var n = this.id,
                e = this.namespace;
            return arguments.length < 1 ? this.node()[e][n].ease : ("function" != typeof t && (t = ha.ease.apply(ha, arguments)), V(this, function(r) {
                r[e][n].ease = t
            }))
        }, Wu.delay = function(t) {
            var n = this.id,
                e = this.namespace;
            return arguments.length < 1 ? this.node()[e][n].delay : V(this, "function" == typeof t ? function(r, o, i) {
                r[e][n].delay = +t.call(r, r.__data__, o, i)
            } : (t = +t, function(r) {
                r[e][n].delay = t
            }))
        }, Wu.duration = function(t) {
            var n = this.id,
                e = this.namespace;
            return arguments.length < 1 ? this.node()[e][n].duration : V(this, "function" == typeof t ? function(r, o, i) {
                r[e][n].duration = Math.max(1, t.call(r, r.__data__, o, i))
            } : (t = Math.max(1, t), function(r) {
                r[e][n].duration = t
            }))
        }, Wu.each = function(t, n) {
            var e = this.id,
                r = this.namespace;
            if (arguments.length < 2) {
                var o = Hu,
                    i = zu;
                try {
                    zu = e, V(this, function(n, o, i) {
                        Hu = n[r][e], t.call(n, n.__data__, o, i)
                    })
                } finally {
                    Hu = o, zu = i
                }
            } else V(this, function(o) {
                var i = o[r][e];
                (i.event || (i.event = ha.dispatch("start", "end", "interrupt"))).on(t, n)
            });
            return this
        }, Wu.transition = function() {
            for (var t, n, e, r, o = this.id, i = ++Gu, a = this.namespace, s = [], u = 0, l = this.length; u < l; u++) {
                s.push(t = []);
                for (var n = this[u], c = 0, p = n.length; c < p; c++)(e = n[c]) && (r = e[a][o], ia(e, c, a, i, {
                    time: r.time,
                    ease: r.ease,
                    delay: r.delay + r.duration,
                    duration: r.duration
                })), t.push(e)
            }
            return na(s, a, i)
        }, ha.svg.axis = function() {
            function t(t) {
                t.each(function() {
                    var t, l = ha.select(this),
                        c = this.__chart__ || e,
                        p = this.__chart__ = e.copy(),
                        f = null == u ? p.ticks ? p.ticks.apply(p, s) : p.domain() : u,
                        h = null == n ? p.tickFormat ? p.tickFormat.apply(p, s) : T : n,
                        d = l.selectAll(".tick").data(f, p),
                        g = d.enter().insert("g", ".domain").attr("class", "tick").style("opacity", Ua),
                        v = ha.transition(d.exit()).style("opacity", Ua).remove(),
                        y = ha.transition(d.order()).style("opacity", 1),
                        m = Math.max(o, 0) + a,
                        _ = Zo(p),
                        b = l.selectAll(".domain").data([0]),
                        w = (b.enter().append("path").attr("class", "domain"), ha.transition(b));
                    g.append("line"), g.append("text");
                    var x, S, M, k, C = g.select("line"),
                        A = y.select("line"),
                        P = d.select("text").text(h),
                        E = g.select("text"),
                        N = y.select("text"),
                        O = "top" === r || "left" === r ? -1 : 1;
                    if ("bottom" === r || "top" === r ? (t = aa, x = "x", M = "y", S = "x2", k = "y2", P.attr("dy", O < 0 ? "0em" : ".71em").style("text-anchor", "middle"), w.attr("d", "M" + _[0] + "," + O * i + "V0H" + _[1] + "V" + O * i)) : (t = sa, x = "y", M = "x", S = "y2", k = "x2", P.attr("dy", ".32em").style("text-anchor", O < 0 ? "end" : "start"), w.attr("d", "M" + O * i + "," + _[0] + "H0V" + _[1] + "H" + O * i)), C.attr(k, O * o), E.attr(M, O * m), A.attr(S, 0).attr(k, O * o), N.attr(x, 0).attr(M, O * m), p.rangeBand) {
                        var $ = p,
                            L = $.rangeBand() / 2;
                        c = p = function(t) {
                            return $(t) + L
                        }
                    } else c.rangeBand ? c = p : v.call(t, p, c);
                    g.call(t, c, p), y.call(t, p, p)
                })
            }
            var n, e = ha.scale.linear(),
                r = qu,
                o = 6,
                i = 6,
                a = 3,
                s = [10],
                u = null;
            return t.scale = function(n) {
                return arguments.length ? (e = n, t) : e
            }, t.orient = function(n) {
                return arguments.length ? (r = n in Yu ? n + "" : qu, t) : r
            }, t.ticks = function() {
                return arguments.length ? (s = ga(arguments), t) : s
            }, t.tickValues = function(n) {
                return arguments.length ? (u = n, t) : u
            }, t.tickFormat = function(e) {
                return arguments.length ? (n = e, t) : n
            }, t.tickSize = function(n) {
                var e = arguments.length;
                return e ? (o = +n, i = +arguments[e - 1], t) : o
            }, t.innerTickSize = function(n) {
                return arguments.length ? (o = +n, t) : o
            }, t.outerTickSize = function(n) {
                return arguments.length ? (i = +n, t) : i
            }, t.tickPadding = function(n) {
                return arguments.length ? (a = +n, t) : a
            }, t.tickSubdivide = function() {
                return arguments.length && t
            }, t
        };
        var qu = "bottom",
            Yu = {
                top: 1,
                right: 1,
                bottom: 1,
                left: 1
            };
        ha.svg.brush = function() {
            function t(i) {
                i.each(function() {
                    var i = ha.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", o).on("touchstart.brush", o),
                        a = i.selectAll(".background").data([0]);
                    a.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair"), i.selectAll(".extent").data([0]).enter().append("rect").attr("class", "extent").style("cursor", "move");
                    var s = i.selectAll(".resize").data(g, T);
                    s.exit().remove(), s.enter().append("g").attr("class", function(t) {
                        return "resize " + t
                    }).style("cursor", function(t) {
                        return Vu[t]
                    }).append("rect").attr("x", function(t) {
                        return /[ew]$/.test(t) ? -3 : null
                    }).attr("y", function(t) {
                        return /^[ns]/.test(t) ? -3 : null
                    }).attr("width", 6).attr("height", 6).style("visibility", "hidden"), s.style("display", t.empty() ? "none" : null);
                    var u, p = ha.transition(i),
                        f = ha.transition(a);
                    l && (u = Zo(l), f.attr("x", u[0]).attr("width", u[1] - u[0]), e(p)), c && (u = Zo(c), f.attr("y", u[0]).attr("height", u[1] - u[0]), r(p)), n(p)
                })
            }

            function n(t) {
                t.selectAll(".resize").attr("transform", function(t) {
                    return "translate(" + p[+/e$/.test(t)] + "," + f[+/^s/.test(t)] + ")"
                })
            }

            function e(t) {
                t.select(".extent").attr("x", p[0]), t.selectAll(".extent,.n>rect,.s>rect").attr("width", p[1] - p[0])
            }

            function r(t) {
                t.select(".extent").attr("y", f[0]), t.selectAll(".extent,.e>rect,.w>rect").attr("height", f[1] - f[0])
            }

            function o() {
                function o() {
                    32 == ha.event.keyCode && (A || (_ = null, N[0] -= p[1], N[1] -= f[1], A = 2), P())
                }

                function g() {
                    32 == ha.event.keyCode && 2 == A && (N[0] += p[1], N[1] += f[1], A = 0, P())
                }

                function v() {
                    var t = ha.mouse(w),
                        o = !1;
                    b && (t[0] += b[0], t[1] += b[1]), A || (ha.event.altKey ? (_ || (_ = [(p[0] + p[1]) / 2, (f[0] + f[1]) / 2]), N[0] = p[+(t[0] < _[0])], N[1] = f[+(t[1] < _[1])]) : _ = null), k && y(t, l, 0) && (e(S), o = !0), C && y(t, c, 1) && (r(S), o = !0), o && (n(S), T({
                        type: "brush",
                        mode: A ? "move" : "resize"
                    }))
                }

                function y(t, n, e) {
                    var r, o, a = Zo(n),
                        u = a[0],
                        l = a[1],
                        c = N[e],
                        g = e ? f : p,
                        v = g[1] - g[0];
                    if (A && (u -= c, l -= v + c), r = (e ? d : h) ? Math.max(u, Math.min(l, t[e])) : t[e], A ? o = (r += c) + v : (_ && (c = Math.max(u, Math.min(l, 2 * _[e] - r))), c < r ? (o = r, r = c) : o = c), g[0] != r || g[1] != o) return e ? s = null : i = null, g[0] = r, g[1] = o, !0
                }

                function m() {
                    v(), S.style("pointer-events", "all").selectAll(".resize").style("display", t.empty() ? "none" : null), ha.select("body").style("cursor", null), O.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null), E(), T({
                        type: "brushend"
                    })
                }
                var _, b, w = this,
                    x = ha.select(ha.event.target),
                    T = u.of(w, arguments),
                    S = ha.select(w),
                    M = x.datum(),
                    k = !/^(n|s)$/.test(M) && l,
                    C = !/^(e|w)$/.test(M) && c,
                    A = x.classed("extent"),
                    E = tt(w),
                    N = ha.mouse(w),
                    O = ha.select(a(w)).on("keydown.brush", o).on("keyup.brush", g);
                if (ha.event.changedTouches ? O.on("touchmove.brush", v).on("touchend.brush", m) : O.on("mousemove.brush", v).on("mouseup.brush", m), S.interrupt().selectAll("*").interrupt(), A) N[0] = p[0] - N[0], N[1] = f[0] - N[1];
                else if (M) {
                    var $ = +/w$/.test(M),
                        L = +/^n/.test(M);
                    b = [p[1 - $] - N[0], f[1 - L] - N[1]], N[0] = p[$], N[1] = f[L]
                } else ha.event.altKey && (_ = N.slice());
                S.style("pointer-events", "none").selectAll(".resize").style("display", null), ha.select("body").style("cursor", x.style("cursor")), T({
                    type: "brushstart"
                }), v()
            }
            var i, s, u = N(t, "brushstart", "brush", "brushend"),
                l = null,
                c = null,
                p = [0, 0],
                f = [0, 0],
                h = !0,
                d = !0,
                g = Ku[0];
            return t.event = function(t) {
                t.each(function() {
                    var t = u.of(this, arguments),
                        n = {
                            x: p,
                            y: f,
                            i: i,
                            j: s
                        },
                        e = this.__chart__ || n;
                    this.__chart__ = n, zu ? ha.select(this).transition().each("start.brush", function() {
                        i = e.i, s = e.j, p = e.x, f = e.y, t({
                            type: "brushstart"
                        })
                    }).tween("brush:brush", function() {
                        var e = Mr(p, n.x),
                            r = Mr(f, n.y);
                        return i = s = null,
                            function(o) {
                                p = n.x = e(o), f = n.y = r(o), t({
                                    type: "brush",
                                    mode: "resize"
                                })
                            }
                    }).each("end.brush", function() {
                        i = n.i, s = n.j, t({
                            type: "brush",
                            mode: "resize"
                        }), t({
                            type: "brushend"
                        })
                    }) : (t({
                        type: "brushstart"
                    }), t({
                        type: "brush",
                        mode: "resize"
                    }), t({
                        type: "brushend"
                    }))
                })
            }, t.x = function(n) {
                return arguments.length ? (l = n, g = Ku[!l << 1 | !c], t) : l
            }, t.y = function(n) {
                return arguments.length ? (c = n, g = Ku[!l << 1 | !c], t) : c
            }, t.clamp = function(n) {
                return arguments.length ? (l && c ? (h = !!n[0], d = !!n[1]) : l ? h = !!n : c && (d = !!n), t) : l && c ? [h, d] : l ? h : c ? d : null
            }, t.extent = function(n) {
                var e, r, o, a, u;
                return arguments.length ? (l && (e = n[0], r = n[1], c && (e = e[0], r = r[0]), i = [e, r], l.invert && (e = l(e), r = l(r)), r < e && (u = e, e = r, r = u), e == p[0] && r == p[1] || (p = [e, r])), c && (o = n[0], a = n[1], l && (o = o[1], a = a[1]), s = [o, a], c.invert && (o = c(o), a = c(a)), a < o && (u = o, o = a, a = u), o == f[0] && a == f[1] || (f = [o, a])), t) : (l && (i ? (e = i[0], r = i[1]) : (e = p[0], r = p[1], l.invert && (e = l.invert(e), r = l.invert(r)), r < e && (u = e, e = r, r = u))), c && (s ? (o = s[0], a = s[1]) : (o = f[0], a = f[1], c.invert && (o = c.invert(o), a = c.invert(a)), a < o && (u = o, o = a, a = u))), l && c ? [
                    [e, o],
                    [r, a]
                ] : l ? [e, r] : c && [o, a])
            }, t.clear = function() {
                return t.empty() || (p = [0, 0], f = [0, 0], i = s = null), t
            }, t.empty = function() {
                return !!l && p[0] == p[1] || !!c && f[0] == f[1]
            }, ha.rebind(t, u, "on")
        };
        var Vu = {
                n: "ns-resize",
                e: "ew-resize",
                s: "ns-resize",
                w: "ew-resize",
                nw: "nwse-resize",
                ne: "nesw-resize",
                se: "nwse-resize",
                sw: "nesw-resize"
            },
            Ku = [
                ["n", "e", "s", "w", "nw", "ne", "se", "sw"],
                ["e", "w"],
                ["n", "s"],
                []
            ],
            Zu = gs.format = ws.timeFormat,
            Xu = Zu.utc,
            Ju = Xu("%Y-%m-%dT%H:%M:%S.%LZ");
        Zu.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? ua : Ju, ua.parse = function(t) {
            var n = new Date(t);
            return isNaN(n) ? null : n
        }, ua.toString = Ju.toString, gs.second = Gt(function(t) {
            return new vs(1e3 * Math.floor(t / 1e3))
        }, function(t, n) {
            t.setTime(t.getTime() + 1e3 * Math.floor(n))
        }, function(t) {
            return t.getSeconds()
        }), gs.seconds = gs.second.range, gs.seconds.utc = gs.second.utc.range, gs.minute = Gt(function(t) {
            return new vs(6e4 * Math.floor(t / 6e4))
        }, function(t, n) {
            t.setTime(t.getTime() + 6e4 * Math.floor(n))
        }, function(t) {
            return t.getMinutes()
        }), gs.minutes = gs.minute.range, gs.minutes.utc = gs.minute.utc.range, gs.hour = Gt(function(t) {
            var n = t.getTimezoneOffset() / 60;
            return new vs(36e5 * (Math.floor(t / 36e5 - n) + n))
        }, function(t, n) {
            t.setTime(t.getTime() + 36e5 * Math.floor(n))
        }, function(t) {
            return t.getHours()
        }), gs.hours = gs.hour.range, gs.hours.utc = gs.hour.utc.range, gs.month = Gt(function(t) {
            return t = gs.day(t), t.setDate(1), t
        }, function(t, n) {
            t.setMonth(t.getMonth() + n)
        }, function(t) {
            return t.getMonth()
        }), gs.months = gs.month.range, gs.months.utc = gs.month.utc.range;
        var Qu = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6],
            tl = [
                [gs.second, 1],
                [gs.second, 5],
                [gs.second, 15],
                [gs.second, 30],
                [gs.minute, 1],
                [gs.minute, 5],
                [gs.minute, 15],
                [gs.minute, 30],
                [gs.hour, 1],
                [gs.hour, 3],
                [gs.hour, 6],
                [gs.hour, 12],
                [gs.day, 1],
                [gs.day, 2],
                [gs.week, 1],
                [gs.month, 1],
                [gs.month, 3],
                [gs.year, 1]
            ],
            nl = Zu.multi([
                [".%L", function(t) {
                    return t.getMilliseconds()
                }],
                [":%S", function(t) {
                    return t.getSeconds()
                }],
                ["%I:%M", function(t) {
                    return t.getMinutes()
                }],
                ["%I %p", function(t) {
                    return t.getHours()
                }],
                ["%a %d", function(t) {
                    return t.getDay() && 1 != t.getDate()
                }],
                ["%b %d", function(t) {
                    return 1 != t.getDate()
                }],
                ["%B", function(t) {
                    return t.getMonth()
                }],
                ["%Y", In]
            ]),
            el = {
                range: function(t, n, e) {
                    return ha.range(Math.ceil(t / e) * e, +n, e).map(ca)
                },
                floor: T,
                ceil: T
            };
        tl.year = gs.year, gs.scale = function() {
            return la(ha.scale.linear(), tl, nl)
        };
        var rl = tl.map(function(t) {
                return [t[0].utc, t[1]]
            }),
            ol = Xu.multi([
                [".%L", function(t) {
                    return t.getUTCMilliseconds()
                }],
                [":%S", function(t) {
                    return t.getUTCSeconds()
                }],
                ["%I:%M", function(t) {
                    return t.getUTCMinutes()
                }],
                ["%I %p", function(t) {
                    return t.getUTCHours()
                }],
                ["%a %d", function(t) {
                    return t.getUTCDay() && 1 != t.getUTCDate()
                }],
                ["%b %d", function(t) {
                    return 1 != t.getUTCDate()
                }],
                ["%B", function(t) {
                    return t.getUTCMonth()
                }],
                ["%Y", In]
            ]);
        rl.year = gs.year.utc, gs.scale.utc = function() {
            return la(ha.scale.linear(), rl, ol)
        }, ha.text = Ot(function(t) {
            return t.responseText
        }), ha.json = function(t, n) {
            return $t(t, "application/json", pa, n)
        }, ha.html = function(t, n) {
            return $t(t, "text/html", fa, n)
        }, ha.xml = Ot(function(t) {
            return t.responseXML
        }), this.d3 = ha, r = ha, void 0 !== (o = "function" == typeof r ? r.call(n, e, n, t) : r) && (t.exports = o)
    }()
}, function(t, n, e) {
    ! function(t, e) {
        e(n)
    }(0, function(t) {
        "use strict";

        function n() {}

        function e(t) {
            if (!t) return n;
            var e, r, o = t.scale[0],
                i = t.scale[1],
                a = t.translate[0],
                s = t.translate[1];
            return function(t, n) {
                n || (e = r = 0), t[0] = (e += t[0]) * o + a, t[1] = (r += t[1]) * i + s
            }
        }

        function r(t) {
            if (!t) return n;
            var e, r, o = t.scale[0],
                i = t.scale[1],
                a = t.translate[0],
                s = t.translate[1];
            return function(t, n) {
                n || (e = r = 0);
                var u = Math.round((t[0] - a) / o),
                    l = Math.round((t[1] - s) / i);
                t[0] = u - e, t[1] = l - r, e = u, r = l
            }
        }

        function o(t, n) {
            for (var e, r = t.length, o = r - n; o < --r;) e = t[o], t[o++] = t[r], t[r] = e
        }

        function i(t, n) {
            for (var e = 0, r = t.length; e < r;) {
                var o = e + r >>> 1;
                t[o] < n ? e = o + 1 : r = o
            }
            return e
        }

        function a(t, n) {
            return "GeometryCollection" === n.type ? {
                type: "FeatureCollection",
                features: n.geometries.map(function(n) {
                    return s(t, n)
                })
            } : s(t, n)
        }

        function s(t, n) {
            var e = {
                type: "Feature",
                id: n.id,
                properties: n.properties || {},
                geometry: u(t, n)
            };
            return null == n.id && delete e.id, e
        }

        function u(t, n) {
            function r(t, n) {
                n.length && n.pop();
                for (var e, r = p[t < 0 ? ~t : t], i = 0, a = r.length; i < a; ++i) n.push(e = r[i].slice()), c(e, i);
                t < 0 && o(n, a)
            }

            function i(t) {
                return t = t.slice(), c(t, 0), t
            }

            function a(t) {
                for (var n = [], e = 0, o = t.length; e < o; ++e) r(t[e], n);
                return n.length < 2 && n.push(n[0].slice()), n
            }

            function s(t) {
                for (var n = a(t); n.length < 4;) n.push(n[0].slice());
                return n
            }

            function u(t) {
                return t.map(s)
            }

            function l(t) {
                var n = t.type;
                return "GeometryCollection" === n ? {
                    type: n,
                    geometries: t.geometries.map(l)
                } : n in f ? {
                    type: n,
                    coordinates: f[n](t)
                } : null
            }
            var c = e(t.transform),
                p = t.arcs,
                f = {
                    Point: function(t) {
                        return i(t.coordinates)
                    },
                    MultiPoint: function(t) {
                        return t.coordinates.map(i)
                    },
                    LineString: function(t) {
                        return a(t.arcs)
                    },
                    MultiLineString: function(t) {
                        return t.arcs.map(a)
                    },
                    Polygon: function(t) {
                        return u(t.arcs)
                    },
                    MultiPolygon: function(t) {
                        return t.arcs.map(u)
                    }
                };
            return l(n)
        }

        function l(t, n) {
            function e(n) {
                var e, r = t.arcs[n < 0 ? ~n : n],
                    o = r[0];
                return t.transform ? (e = [0, 0], r.forEach(function(t) {
                    e[0] += t[0], e[1] += t[1]
                })) : e = r[r.length - 1], n < 0 ? [e, o] : [o, e]
            }

            function r(t, n) {
                for (var e in t) {
                    var r = t[e];
                    delete n[r.start], delete r.start, delete r.end, r.forEach(function(t) {
                        o[t < 0 ? ~t : t] = 1
                    }), s.push(r)
                }
            }
            var o = {},
                i = {},
                a = {},
                s = [],
                u = -1;
            return n.forEach(function(e, r) {
                var o, i = t.arcs[e < 0 ? ~e : e];
                i.length < 3 && !i[1][0] && !i[1][1] && (o = n[++u], n[u] = e, n[r] = o)
            }), n.forEach(function(t) {
                var n, r, o = e(t),
                    s = o[0],
                    u = o[1];
                if (n = a[s])
                    if (delete a[n.end], n.push(t), n.end = u, r = i[u]) {
                        delete i[r.start];
                        var l = r === n ? n : n.concat(r);
                        i[l.start = n.start] = a[l.end = r.end] = l
                    } else i[n.start] = a[n.end] = n;
                else if (n = i[u])
                    if (delete i[n.start], n.unshift(t), n.start = s, r = a[s]) {
                        delete a[r.end];
                        var c = r === n ? n : r.concat(n);
                        i[c.start = r.start] = a[c.end = n.end] = c
                    } else i[n.start] = a[n.end] = n;
                else n = [t], i[n.start = s] = a[n.end = u] = n
            }), r(a, i), r(i, a), n.forEach(function(t) {
                o[t < 0 ? ~t : t] || s.push([t])
            }), s
        }

        function c(t) {
            return u(t, p.apply(this, arguments))
        }

        function p(t, n, e) {
            function r(t) {
                var n = t < 0 ? ~t : t;
                (c[n] || (c[n] = [])).push({
                    i: t,
                    g: u
                })
            }

            function o(t) {
                t.forEach(r)
            }

            function i(t) {
                t.forEach(o)
            }

            function a(t) {
                "GeometryCollection" === t.type ? t.geometries.forEach(a) : t.type in p && (u = t, p[t.type](t.arcs))
            }
            var s = [];
            if (arguments.length > 1) {
                var u, c = [],
                    p = {
                        LineString: o,
                        MultiLineString: i,
                        Polygon: i,
                        MultiPolygon: function(t) {
                            t.forEach(i)
                        }
                    };
                a(n), c.forEach(arguments.length < 3 ? function(t) {
                    s.push(t[0].i)
                } : function(t) {
                    e(t[0].g, t[t.length - 1].g) && s.push(t[0].i)
                })
            } else
                for (var f = 0, h = t.arcs.length; f < h; ++f) s.push(f);
            return {
                type: "MultiLineString",
                arcs: l(t, s)
            }
        }

        function f(t) {
            var n = t[0],
                e = t[1],
                r = t[2];
            return Math.abs((n[0] - r[0]) * (e[1] - n[1]) - (n[0] - e[0]) * (r[1] - n[1]))
        }

        function h(t) {
            for (var n, e = -1, r = t.length, o = t[r - 1], i = 0; ++e < r;) n = o, o = t[e], i += n[0] * o[1] - n[1] * o[0];
            return i / 2
        }

        function d(t) {
            return u(t, g.apply(this, arguments))
        }

        function g(t, n) {
            function e(t) {
                t.forEach(function(n) {
                    n.forEach(function(n) {
                        (o[n = n < 0 ? ~n : n] || (o[n] = [])).push(t)
                    })
                }), i.push(t)
            }

            function r(n) {
                return Math.abs(h(u(t, {
                    type: "Polygon",
                    arcs: [n]
                }).coordinates[0]))
            }
            var o = {},
                i = [],
                a = [];
            return n.forEach(function(t) {
                "Polygon" === t.type ? e(t.arcs) : "MultiPolygon" === t.type && t.arcs.forEach(e)
            }), i.forEach(function(t) {
                if (!t._) {
                    var n = [],
                        e = [t];
                    for (t._ = 1, a.push(n); t = e.pop();) n.push(t), t.forEach(function(t) {
                        t.forEach(function(t) {
                            o[t < 0 ? ~t : t].forEach(function(t) {
                                t._ || (t._ = 1, e.push(t))
                            })
                        })
                    })
                }
            }), i.forEach(function(t) {
                delete t._
            }), {
                type: "MultiPolygon",
                arcs: a.map(function(n) {
                    var e, i = [];
                    if (n.forEach(function(t) {
                            t.forEach(function(t) {
                                t.forEach(function(t) {
                                    o[t < 0 ? ~t : t].length < 2 && i.push(t)
                                })
                            })
                        }), i = l(t, i), (e = i.length) > 1)
                        for (var a, s, u = 1, c = r(i[0]); u < e; ++u)(a = r(i[u])) > c && (s = i[0], i[0] = i[u], i[u] = s, c = a);
                    return i
                })
            }
        }

        function v(t) {
            function n(t, n) {
                t.forEach(function(t) {
                    t < 0 && (t = ~t);
                    var e = o[t];
                    e ? e.push(n) : o[t] = [n]
                })
            }

            function e(t, e) {
                t.forEach(function(t) {
                    n(t, e)
                })
            }

            function r(t, n) {
                "GeometryCollection" === t.type ? t.geometries.forEach(function(t) {
                    r(t, n)
                }) : t.type in s && s[t.type](t.arcs, n)
            }
            var o = {},
                a = t.map(function() {
                    return []
                }),
                s = {
                    LineString: n,
                    MultiLineString: e,
                    Polygon: e,
                    MultiPolygon: function(t, n) {
                        t.forEach(function(t) {
                            e(t, n)
                        })
                    }
                };
            t.forEach(r);
            for (var u in o)
                for (var l = o[u], c = l.length, p = 0; p < c; ++p)
                    for (var f = p + 1; f < c; ++f) {
                        var h, d = l[p],
                            g = l[f];
                        (h = a[d])[u = i(h, g)] !== g && h.splice(u, 0, g), (h = a[g])[u = i(h, d)] !== d && h.splice(u, 0, d)
                    }
            return a
        }

        function y(t, n) {
            return t[1][2] - n[1][2]
        }

        function m() {
            function t(t, n) {
                for (; n > 0;) {
                    var e = (n + 1 >> 1) - 1,
                        o = r[e];
                    if (y(t, o) >= 0) break;
                    r[o._ = n] = o, r[t._ = n = e] = t
                }
            }

            function n(t, n) {
                for (;;) {
                    var e = n + 1 << 1,
                        i = e - 1,
                        a = n,
                        s = r[a];
                    if (i < o && y(r[i], s) < 0 && (s = r[a = i]), e < o && y(r[e], s) < 0 && (s = r[a = e]), a === n) break;
                    r[s._ = n] = s, r[t._ = n = a] = t
                }
            }
            var e = {},
                r = [],
                o = 0;
            return e.push = function(n) {
                return t(r[n._ = o] = n, o++), o
            }, e.pop = function() {
                if (!(o <= 0)) {
                    var t, e = r[0];
                    return --o > 0 && (t = r[o], n(r[t._ = 0] = t, 0)), e
                }
            }, e.remove = function(e) {
                var i, a = e._;
                if (r[a] === e) return a !== --o && (i = r[o], (y(i, e) < 0 ? t : n)(r[i._ = a] = i, a)), a
            }, e
        }

        function _(t, n) {
            function o(t) {
                s.remove(t), t[1][2] = n(t), s.push(t)
            }
            var i = e(t.transform),
                a = r(t.transform),
                s = m();
            return n || (n = f), t.arcs.forEach(function(t) {
                var e, r, u, l, c = [],
                    p = 0;
                for (r = 0, u = t.length; r < u; ++r) l = t[r], i(t[r] = [l[0], l[1], 1 / 0], r);
                for (r = 1, u = t.length - 1; r < u; ++r) e = t.slice(r - 1, r + 2), e[1][2] = n(e), c.push(e), s.push(e);
                for (r = 0, u = c.length; r < u; ++r) e = c[r], e.previous = c[r - 1], e.next = c[r + 1];
                for (; e = s.pop();) {
                    var f = e.previous,
                        h = e.next;
                    e[1][2] < p ? e[1][2] = p : p = e[1][2], f && (f.next = h, f[2] = e[2], o(f)), h && (h.previous = f, h[0] = e[0], o(h))
                }
                t.forEach(a)
            }), t
        }
        t.version = "1.6.27", t.mesh = c, t.meshArcs = p, t.merge = d, t.mergeArcs = g, t.feature = a, t.neighbors = v, t.presimplify = _, Object.defineProperty(t, "__esModule", {
            value: !0
        })
    })
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, n) {}function(t, n, e) {
    var r, o, i;
    ! function(a) {
        "use strict";
        o = [e(22)], r = a, void 0 !== (i = "function" == typeof r ? r.apply(n, o) : r) && (t.exports = i)
    }(function(t) {
        "use strict";
        var n = window.Slick || {};
        n = function() {
            function n(n, r) {
                var o, i = this;
                i.defaults = {
                    accessibility: !0,
                    adaptiveHeight: !1,
                    appendArrows: t(n),
                    appendDots: t(n),
                    arrows: !0,
                    asNavFor: null,
                    prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                    nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                    autoplay: !1,
                    autoplaySpeed: 3e3,
                    centerMode: !1,
                    centerPadding: "50px",
                    cssEase: "ease",
                    customPaging: function(n, e) {
                        return t('<button type="button" />').text(e + 1)
                    },
                    dots: !1,
                    dotsClass: "slick-dots",
                    draggable: !0,
                    easing: "linear",
                    edgeFriction: .35,
                    fade: !1,
                    focusOnSelect: !1,
                    focusOnChange: !1,
                    infinite: !0,
                    initialSlide: 0,
                    lazyLoad: "ondemand",
                    mobileFirst: !1,
                    pauseOnHover: !0,
                    pauseOnFocus: !0,
                    pauseOnDotsHover: !1,
                    respondTo: "window",
                    responsive: null,
                    rows: 1,
                    rtl: !1,
                    slide: "",
                    slidesPerRow: 1,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    speed: 500,
                    swipe: !0,
                    swipeToSlide: !1,
                    touchMove: !0,
                    touchThreshold: 5,
                    useCSS: !0,
                    useTransform: !0,
                    variableWidth: !1,
                    vertical: !1,
                    verticalSwiping: !1,
                    waitForAnimate: !0,
                    zIndex: 1e3
                }, i.initials = {
                    animating: !1,
                    dragging: !1,
                    autoPlayTimer: null,
                    currentDirection: 0,
                    currentLeft: null,
                    currentSlide: 0,
                    direction: 1,
                    $dots: null,
                    listWidth: null,
                    listHeight: null,
                    loadIndex: 0,
                    $nextArrow: null,
                    $prevArrow: null,
                    scrolling: !1,
                    slideCount: null,
                    slideWidth: null,
                    $slideTrack: null,
                    $slides: null,
                    sliding: !1,
                    slideOffset: 0,
                    swipeLeft: null,
                    swiping: !1,
                    $list: null,
                    touchObject: {},
                    transformsEnabled: !1,
                    unslicked: !1
                }, t.extend(i, i.initials), i.activeBreakpoint = null, i.animType = null, i.animProp = null, i.breakpoints = [], i.breakpointSettings = [], i.cssTransitions = !1, i.focussed = !1, i.interrupted = !1, i.hidden = "hidden", i.paused = !0, i.positionProp = null, i.respondTo = null, i.rowCount = 1, i.shouldClick = !0, i.$slider = t(n), i.$slidesCache = null, i.transformType = null, i.transitionType = null, i.visibilityChange = "visibilitychange", i.windowWidth = 0, i.windowTimer = null, o = t(n).data("slick") || {}, i.options = t.extend({}, i.defaults, r, o), i.currentSlide = i.options.initialSlide, i.originalSettings = i.options, void 0 !== document.mozHidden ? (i.hidden = "mozHidden", i.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (i.hidden = "webkitHidden", i.visibilityChange = "webkitvisibilitychange"), i.autoPlay = t.proxy(i.autoPlay, i), i.autoPlayClear = t.proxy(i.autoPlayClear, i), i.autoPlayIterator = t.proxy(i.autoPlayIterator, i), i.changeSlide = t.proxy(i.changeSlide, i), i.clickHandler = t.proxy(i.clickHandler, i), i.selectHandler = t.proxy(i.selectHandler, i), i.setPosition = t.proxy(i.setPosition, i), i.swipeHandler = t.proxy(i.swipeHandler, i), i.dragHandler = t.proxy(i.dragHandler, i), i.keyHandler = t.proxy(i.keyHandler, i), i.instanceUid = e++, i.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, i.registerBreakpoints(), i.init(!0)
            }
            var e = 0;
            return n
        }(), n.prototype.activateADA = function() {
            this.$slideTrack.find(".slick-active").attr({
                "aria-hidden": "false"
            }).find("a, input, button, select").attr({
                tabindex: "0"
            })
        }, n.prototype.addSlide = n.prototype.slickAdd = function(n, e, r) {
            var o = this;
            if ("boolean" == typeof e) r = e, e = null;
            else if (e < 0 || e >= o.slideCount) return !1;
            o.unload(), "number" == typeof e ? 0 === e && 0 === o.$slides.length ? t(n).appendTo(o.$slideTrack) : r ? t(n).insertBefore(o.$slides.eq(e)) : t(n).insertAfter(o.$slides.eq(e)) : !0 === r ? t(n).prependTo(o.$slideTrack) : t(n).appendTo(o.$slideTrack), o.$slides = o.$slideTrack.children(this.options.slide), o.$slideTrack.children(this.options.slide).detach(), o.$slideTrack.append(o.$slides), o.$slides.each(function(n, e) {
                t(e).attr("data-slick-index", n)
            }), o.$slidesCache = o.$slides, o.reinit()
        }, n.prototype.animateHeight = function() {
            var t = this;
            if (1 === t.options.slidesToShow && !0 === t.options.adaptiveHeight && !1 === t.options.vertical) {
                var n = t.$slides.eq(t.currentSlide).outerHeight(!0);
                t.$list.animate({
                    height: n
                }, t.options.speed)
            }
        }, n.prototype.animateSlide = function(n, e) {
            var r = {},
                o = this;
            o.animateHeight(), !0 === o.options.rtl && !1 === o.options.vertical && (n = -n), !1 === o.transformsEnabled ? !1 === o.options.vertical ? o.$slideTrack.animate({
                left: n
            }, o.options.speed, o.options.easing, e) : o.$slideTrack.animate({
                top: n
            }, o.options.speed, o.options.easing, e) : !1 === o.cssTransitions ? (!0 === o.options.rtl && (o.currentLeft = -o.currentLeft), t({
                animStart: o.currentLeft
            }).animate({
                animStart: n
            }, {
                duration: o.options.speed,
                easing: o.options.easing,
                step: function(t) {
                    t = Math.ceil(t), !1 === o.options.vertical ? (r[o.animType] = "translate(" + t + "px, 0px)", o.$slideTrack.css(r)) : (r[o.animType] = "translate(0px," + t + "px)", o.$slideTrack.css(r))
                },
                complete: function() {
                    e && e.call()
                }
            })) : (o.applyTransition(), n = Math.ceil(n), !1 === o.options.vertical ? r[o.animType] = "translate3d(" + n + "px, 0px, 0px)" : r[o.animType] = "translate3d(0px," + n + "px, 0px)", o.$slideTrack.css(r), e && setTimeout(function() {
                o.disableTransition(), e.call()
            }, o.options.speed))
        }, n.prototype.getNavTarget = function() {
            var n = this,
                e = n.options.asNavFor;
            return e && null !== e && (e = t(e).not(n.$slider)), e
        }, n.prototype.asNavFor = function(n) {
            var e = this,
                r = e.getNavTarget();
            null !== r && "object" == typeof r && r.each(function() {
                var e = t(this).slick("getSlick");
                e.unslicked || e.slideHandler(n, !0)
            })
        }, n.prototype.applyTransition = function(t) {
            var n = this,
                e = {};
            !1 === n.options.fade ? e[n.transitionType] = n.transformType + " " + n.options.speed + "ms " + n.options.cssEase : e[n.transitionType] = "opacity " + n.options.speed + "ms " + n.options.cssEase, !1 === n.options.fade ? n.$slideTrack.css(e) : n.$slides.eq(t).css(e)
        }, n.prototype.autoPlay = function() {
            var t = this;
            t.autoPlayClear(), t.slideCount > t.options.slidesToShow && (t.autoPlayTimer = setInterval(t.autoPlayIterator, t.options.autoplaySpeed))
        }, n.prototype.autoPlayClear = function() {
            var t = this;
            t.autoPlayTimer && clearInterval(t.autoPlayTimer)
        }, n.prototype.autoPlayIterator = function() {
            var t = this,
                n = t.currentSlide + t.options.slidesToScroll;
            t.paused || t.interrupted || t.focussed || (!1 === t.options.infinite && (1 === t.direction && t.currentSlide + 1 === t.slideCount - 1 ? t.direction = 0 : 0 === t.direction && (n = t.currentSlide - t.options.slidesToScroll, t.currentSlide - 1 == 0 && (t.direction = 1))), t.slideHandler(n))
        }, n.prototype.buildArrows = function() {
            var n = this;
            !0 === n.options.arrows && (n.$prevArrow = t(n.options.prevArrow).addClass("slick-arrow"), n.$nextArrow = t(n.options.nextArrow).addClass("slick-arrow"), n.slideCount > n.options.slidesToShow ? (n.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), n.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), n.htmlExpr.test(n.options.prevArrow) && n.$prevArrow.prependTo(n.options.appendArrows), n.htmlExpr.test(n.options.nextArrow) && n.$nextArrow.appendTo(n.options.appendArrows), !0 !== n.options.infinite && n.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : n.$prevArrow.add(n.$nextArrow).addClass("slick-hidden").attr({
                "aria-disabled": "true",
                tabindex: "-1"
            }))
        }, n.prototype.buildDots = function() {
            var n, e, r = this;
            if (!0 === r.options.dots && r.slideCount > r.options.slidesToShow) {
                for (r.$slider.addClass("slick-dotted"), e = t("<ul />").addClass(r.options.dotsClass), n = 0; n <= r.getDotCount(); n += 1) e.append(t("<li />").append(r.options.customPaging.call(this, r, n)));
                r.$dots = e.appendTo(r.options.appendDots), r.$dots.find("li").first().addClass("slick-active")
            }
        }, n.prototype.buildOut = function() {
            var n = this;
            n.$slides = n.$slider.children(n.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), n.slideCount = n.$slides.length, n.$slides.each(function(n, e) {
                t(e).attr("data-slick-index", n).data("originalStyling", t(e).attr("style") || "")
            }), n.$slider.addClass("slick-slider"), n.$slideTrack = 0 === n.slideCount ? t('<div class="slick-track"/>').appendTo(n.$slider) : n.$slides.wrapAll('<div class="slick-track"/>').parent(), n.$list = n.$slideTrack.wrap('<div class="slick-list"/>').parent(), n.$slideTrack.css("opacity", 0), !0 !== n.options.centerMode && !0 !== n.options.swipeToSlide || (n.options.slidesToScroll = 1), t("img[data-lazy]", n.$slider).not("[src]").addClass("slick-loading"), n.setupInfinite(), n.buildArrows(), n.buildDots(), n.updateDots(), n.setSlideClasses("number" == typeof n.currentSlide ? n.currentSlide : 0), !0 === n.options.draggable && n.$list.addClass("draggable")
        }, n.prototype.buildRows = function() {
            var t, n, e, r, o, i, a, s = this;
            if (r = document.createDocumentFragment(), i = s.$slider.children(), s.options.rows > 0) {
                for (a = s.options.slidesPerRow * s.options.rows, o = Math.ceil(i.length / a), t = 0; t < o; t++) {
                    var u = document.createElement("div");
                    for (n = 0; n < s.options.rows; n++) {
                        var l = document.createElement("div");
                        for (e = 0; e < s.options.slidesPerRow; e++) {
                            var c = t * a + (n * s.options.slidesPerRow + e);
                            i.get(c) && l.appendChild(i.get(c))
                        }
                        u.appendChild(l)
                    }
                    r.appendChild(u)
                }
                s.$slider.empty().append(r), s.$slider.children().children().children().css({
                    width: 100 / s.options.slidesPerRow + "%",
                    display: "inline-block"
                })
            }
        }, n.prototype.checkResponsive = function(n, e) {
            var r, o, i, a = this,
                s = !1,
                u = a.$slider.width(),
                l = window.innerWidth || t(window).width();
            if ("window" === a.respondTo ? i = l : "slider" === a.respondTo ? i = u : "min" === a.respondTo && (i = Math.min(l, u)), a.options.responsive && a.options.responsive.length && null !== a.options.responsive) {
                o = null;
                for (r in a.breakpoints) a.breakpoints.hasOwnProperty(r) && (!1 === a.originalSettings.mobileFirst ? i < a.breakpoints[r] && (o = a.breakpoints[r]) : i > a.breakpoints[r] && (o = a.breakpoints[r]));
                null !== o ? null !== a.activeBreakpoint ? (o !== a.activeBreakpoint || e) && (a.activeBreakpoint = o, "unslick" === a.breakpointSettings[o] ? a.unslick(o) : (a.options = t.extend({}, a.originalSettings, a.breakpointSettings[o]), !0 === n && (a.currentSlide = a.options.initialSlide), a.refresh(n)), s = o) : (a.activeBreakpoint = o, "unslick" === a.breakpointSettings[o] ? a.unslick(o) : (a.options = t.extend({}, a.originalSettings, a.breakpointSettings[o]), !0 === n && (a.currentSlide = a.options.initialSlide), a.refresh(n)), s = o) : null !== a.activeBreakpoint && (a.activeBreakpoint = null, a.options = a.originalSettings, !0 === n && (a.currentSlide = a.options.initialSlide), a.refresh(n), s = o), n || !1 === s || a.$slider.trigger("breakpoint", [a, s])
            }
        }, n.prototype.changeSlide = function(n, e) {
            var r, o, i, a = this,
                s = t(n.currentTarget);
            switch (s.is("a") && n.preventDefault(), s.is("li") || (s = s.closest("li")), i = a.slideCount % a.options.slidesToScroll != 0, r = i ? 0 : (a.slideCount - a.currentSlide) % a.options.slidesToScroll, n.data.message) {
                case "previous":
                    o = 0 === r ? a.options.slidesToScroll : a.options.slidesToShow - r, a.slideCount > a.options.slidesToShow && a.slideHandler(a.currentSlide - o, !1, e);
                    break;
                case "next":
                    o = 0 === r ? a.options.slidesToScroll : r, a.slideCount > a.options.slidesToShow && a.slideHandler(a.currentSlide + o, !1, e);
                    break;
                case "index":
                    var u = 0 === n.data.index ? 0 : n.data.index || s.index() * a.options.slidesToScroll;
                    a.slideHandler(a.checkNavigable(u), !1, e), s.children().trigger("focus");
                    break;
                default:
                    return
            }
        }, n.prototype.checkNavigable = function(t) {
            var n, e, r = this;
            if (n = r.getNavigableIndexes(), e = 0, t > n[n.length - 1]) t = n[n.length - 1];
            else
                for (var o in n) {
                    if (t < n[o]) {
                        t = e;
                        break
                    }
                    e = n[o]
                }
            return t
        }, n.prototype.cleanUpEvents = function() {
            var n = this;
            n.options.dots && null !== n.$dots && (t("li", n.$dots).off("click.slick", n.changeSlide).off("mouseenter.slick", t.proxy(n.interrupt, n, !0)).off("mouseleave.slick", t.proxy(n.interrupt, n, !1)), !0 === n.options.accessibility && n.$dots.off("keydown.slick", n.keyHandler)), n.$slider.off("focus.slick blur.slick"), !0 === n.options.arrows && n.slideCount > n.options.slidesToShow && (n.$prevArrow && n.$prevArrow.off("click.slick", n.changeSlide), n.$nextArrow && n.$nextArrow.off("click.slick", n.changeSlide), !0 === n.options.accessibility && (n.$prevArrow && n.$prevArrow.off("keydown.slick", n.keyHandler), n.$nextArrow && n.$nextArrow.off("keydown.slick", n.keyHandler))), n.$list.off("touchstart.slick mousedown.slick", n.swipeHandler), n.$list.off("touchmove.slick mousemove.slick", n.swipeHandler), n.$list.off("touchend.slick mouseup.slick", n.swipeHandler), n.$list.off("touchcancel.slick mouseleave.slick", n.swipeHandler), n.$list.off("click.slick", n.clickHandler), t(document).off(n.visibilityChange, n.visibility), n.cleanUpSlideEvents(), !0 === n.options.accessibility && n.$list.off("keydown.slick", n.keyHandler), !0 === n.options.focusOnSelect && t(n.$slideTrack).children().off("click.slick", n.selectHandler), t(window).off("orientationchange.slick.slick-" + n.instanceUid, n.orientationChange), t(window).off("resize.slick.slick-" + n.instanceUid, n.resize), t("[draggable!=true]", n.$slideTrack).off("dragstart", n.preventDefault), t(window).off("load.slick.slick-" + n.instanceUid, n.setPosition)
        }, n.prototype.cleanUpSlideEvents = function() {
            var n = this;
            n.$list.off("mouseenter.slick", t.proxy(n.interrupt, n, !0)), n.$list.off("mouseleave.slick", t.proxy(n.interrupt, n, !1))
        }, n.prototype.cleanUpRows = function() {
            var t, n = this;
            n.options.rows > 0 && (t = n.$slides.children().children(), t.removeAttr("style"), n.$slider.empty().append(t))
        }, n.prototype.clickHandler = function(t) {
            !1 === this.shouldClick && (t.stopImmediatePropagation(), t.stopPropagation(), t.preventDefault())
        }, n.prototype.destroy = function(n) {
            var e = this;
            e.autoPlayClear(), e.touchObject = {}, e.cleanUpEvents(), t(".slick-cloned", e.$slider).detach(), e.$dots && e.$dots.remove(), e.$prevArrow && e.$prevArrow.length && (e.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.remove()), e.$nextArrow && e.$nextArrow.length && (e.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.remove()), e.$slides && (e.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function() {
                t(this).attr("style", t(this).data("originalStyling"))
            }), e.$slideTrack.children(this.options.slide).detach(), e.$slideTrack.detach(), e.$list.detach(), e.$slider.append(e.$slides)), e.cleanUpRows(), e.$slider.removeClass("slick-slider"), e.$slider.removeClass("slick-initialized"), e.$slider.removeClass("slick-dotted"), e.unslicked = !0, n || e.$slider.trigger("destroy", [e])
        }, n.prototype.disableTransition = function(t) {
            var n = this,
                e = {};
            e[n.transitionType] = "", !1 === n.options.fade ? n.$slideTrack.css(e) : n.$slides.eq(t).css(e)
        }, n.prototype.fadeSlide = function(t, n) {
            var e = this;
            !1 === e.cssTransitions ? (e.$slides.eq(t).css({
                zIndex: e.options.zIndex
            }), e.$slides.eq(t).animate({
                opacity: 1
            }, e.options.speed, e.options.easing, n)) : (e.applyTransition(t), e.$slides.eq(t).css({
                opacity: 1,
                zIndex: e.options.zIndex
            }), n && setTimeout(function() {
                e.disableTransition(t), n.call()
            }, e.options.speed))
        }, n.prototype.fadeSlideOut = function(t) {
            var n = this;
            !1 === n.cssTransitions ? n.$slides.eq(t).animate({
                opacity: 0,
                zIndex: n.options.zIndex - 2
            }, n.options.speed, n.options.easing) : (n.applyTransition(t), n.$slides.eq(t).css({
                opacity: 0,
                zIndex: n.options.zIndex - 2
            }))
        }, n.prototype.filterSlides = n.prototype.slickFilter = function(t) {
            var n = this;
            null !== t && (n.$slidesCache = n.$slides, n.unload(), n.$slideTrack.children(this.options.slide).detach(), n.$slidesCache.filter(t).appendTo(n.$slideTrack), n.reinit())
        }, n.prototype.focusHandler = function() {
            var n = this;
            n.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function(e) {
                e.stopImmediatePropagation();
                var r = t(this);
                setTimeout(function() {
                    n.options.pauseOnFocus && (n.focussed = r.is(":focus"), n.autoPlay())
                }, 0)
            })
        }, n.prototype.getCurrent = n.prototype.slickCurrentSlide = function() {
            return this.currentSlide
        }, n.prototype.getDotCount = function() {
            var t = this,
                n = 0,
                e = 0,
                r = 0;
            if (!0 === t.options.infinite)
                if (t.slideCount <= t.options.slidesToShow) ++r;
                else
                    for (; n < t.slideCount;) ++r, n = e + t.options.slidesToScroll, e += t.options.slidesToScroll <= t.options.slidesToShow ? t.options.slidesToScroll : t.options.slidesToShow;
            else if (!0 === t.options.centerMode) r = t.slideCount;
            else if (t.options.asNavFor)
                for (; n < t.slideCount;) ++r, n = e + t.options.slidesToScroll, e += t.options.slidesToScroll <= t.options.slidesToShow ? t.options.slidesToScroll : t.options.slidesToShow;
            else r = 1 + Math.ceil((t.slideCount - t.options.slidesToShow) / t.options.slidesToScroll);
            return r - 1
        }, n.prototype.getLeft = function(t) {
            var n, e, r, o, i = this,
                a = 0;
            return i.slideOffset = 0, e = i.$slides.first().outerHeight(!0), !0 === i.options.infinite ? (i.slideCount > i.options.slidesToShow && (i.slideOffset = i.slideWidth * i.options.slidesToShow * -1, o = -1, !0 === i.options.vertical && !0 === i.options.centerMode && (2 === i.options.slidesToShow ? o = -1.5 : 1 === i.options.slidesToShow && (o = -2)), a = e * i.options.slidesToShow * o), i.slideCount % i.options.slidesToScroll != 0 && t + i.options.slidesToScroll > i.slideCount && i.slideCount > i.options.slidesToShow && (t > i.slideCount ? (i.slideOffset = (i.options.slidesToShow - (t - i.slideCount)) * i.slideWidth * -1, a = (i.options.slidesToShow - (t - i.slideCount)) * e * -1) : (i.slideOffset = i.slideCount % i.options.slidesToScroll * i.slideWidth * -1, a = i.slideCount % i.options.slidesToScroll * e * -1))) : t + i.options.slidesToShow > i.slideCount && (i.slideOffset = (t + i.options.slidesToShow - i.slideCount) * i.slideWidth, a = (t + i.options.slidesToShow - i.slideCount) * e), i.slideCount <= i.options.slidesToShow && (i.slideOffset = 0, a = 0), !0 === i.options.centerMode && i.slideCount <= i.options.slidesToShow ? i.slideOffset = i.slideWidth * Math.floor(i.options.slidesToShow) / 2 - i.slideWidth * i.slideCount / 2 : !0 === i.options.centerMode && !0 === i.options.infinite ? i.slideOffset += i.slideWidth * Math.floor(i.options.slidesToShow / 2) - i.slideWidth : !0 === i.options.centerMode && (i.slideOffset = 0, i.slideOffset += i.slideWidth * Math.floor(i.options.slidesToShow / 2)), n = !1 === i.options.vertical ? t * i.slideWidth * -1 + i.slideOffset : t * e * -1 + a, !0 === i.options.variableWidth && (r = i.slideCount <= i.options.slidesToShow || !1 === i.options.infinite ? i.$slideTrack.children(".slick-slide").eq(t) : i.$slideTrack.children(".slick-slide").eq(t + i.options.slidesToShow), n = !0 === i.options.rtl ? r[0] ? -1 * (i.$slideTrack.width() - r[0].offsetLeft - r.width()) : 0 : r[0] ? -1 * r[0].offsetLeft : 0, !0 === i.options.centerMode && (r = i.slideCount <= i.options.slidesToShow || !1 === i.options.infinite ? i.$slideTrack.children(".slick-slide").eq(t) : i.$slideTrack.children(".slick-slide").eq(t + i.options.slidesToShow + 1), n = !0 === i.options.rtl ? r[0] ? -1 * (i.$slideTrack.width() - r[0].offsetLeft - r.width()) : 0 : r[0] ? -1 * r[0].offsetLeft : 0, n += (i.$list.width() - r.outerWidth()) / 2)), n
        }, n.prototype.getOption = n.prototype.slickGetOption = function(t) {
            return this.options[t]
        }, n.prototype.getNavigableIndexes = function() {
            var t, n = this,
                e = 0,
                r = 0,
                o = [];
            for (!1 === n.options.infinite ? t = n.slideCount : (e = -1 * n.options.slidesToScroll, r = -1 * n.options.slidesToScroll, t = 2 * n.slideCount); e < t;) o.push(e), e = r + n.options.slidesToScroll, r += n.options.slidesToScroll <= n.options.slidesToShow ? n.options.slidesToScroll : n.options.slidesToShow;
            return o
        }, n.prototype.getSlick = function() {
            return this
        }, n.prototype.getSlideCount = function() {
            var n, e, r = this;
            return e = !0 === r.options.centerMode ? r.slideWidth * Math.floor(r.options.slidesToShow / 2) : 0, !0 === r.options.swipeToSlide ? (r.$slideTrack.find(".slick-slide").each(function(o, i) {
                if (i.offsetLeft - e + t(i).outerWidth() / 2 > -1 * r.swipeLeft) return n = i, !1
            }), Math.abs(t(n).attr("data-slick-index") - r.currentSlide) || 1) : r.options.slidesToScroll
        }, n.prototype.goTo = n.prototype.slickGoTo = function(t, n) {
            this.changeSlide({
                data: {
                    message: "index",
                    index: parseInt(t)
                }
            }, n)
        }, n.prototype.init = function(n) {
            var e = this;
            t(e.$slider).hasClass("slick-initialized") || (t(e.$slider).addClass("slick-initialized"), e.buildRows(), e.buildOut(), e.setProps(), e.startLoad(), e.loadSlider(), e.initializeEvents(), e.updateArrows(), e.updateDots(), e.checkResponsive(!0), e.focusHandler()), n && e.$slider.trigger("init", [e]), !0 === e.options.accessibility && e.initADA(), e.options.autoplay && (e.paused = !1, e.autoPlay())
        }, n.prototype.initADA = function() {
            var n = this,
                e = Math.ceil(n.slideCount / n.options.slidesToShow),
                r = n.getNavigableIndexes().filter(function(t) {
                    return t >= 0 && t < n.slideCount
                });
            n.$slides.add(n.$slideTrack.find(".slick-cloned")).attr({
                "aria-hidden": "true",
                tabindex: "-1"
            }).find("a, input, button, select").attr({
                tabindex: "-1"
            }), null !== n.$dots && (n.$slides.not(n.$slideTrack.find(".slick-cloned")).each(function(e) {
                var o = r.indexOf(e);
                if (t(this).attr({
                        role: "tabpanel",
                        id: "slick-slide" + n.instanceUid + e,
                        tabindex: -1
                    }), -1 !== o) {
                    var i = "slick-slide-control" + n.instanceUid + o;
                    t("#" + i).length && t(this).attr({
                        "aria-describedby": i
                    })
                }
            }), n.$dots.attr("role", "tablist").find("li").each(function(o) {
                var i = r[o];
                t(this).attr({
                    role: "presentation"
                }), t(this).find("button").first().attr({
                    role: "tab",
                    id: "slick-slide-control" + n.instanceUid + o,
                    "aria-controls": "slick-slide" + n.instanceUid + i,
                    "aria-label": o + 1 + " of " + e,
                    "aria-selected": null,
                    tabindex: "-1"
                })
            }).eq(n.currentSlide).find("button").attr({
                "aria-selected": "true",
                tabindex: "0"
            }).end());
            for (var o = n.currentSlide, i = o + n.options.slidesToShow; o < i; o++) n.options.focusOnChange ? n.$slides.eq(o).attr({
                tabindex: "0"
            }) : n.$slides.eq(o).removeAttr("tabindex");
            n.activateADA()
        }, n.prototype.initArrowEvents = function() {
            var t = this;
            !0 === t.options.arrows && t.slideCount > t.options.slidesToShow && (t.$prevArrow.off("click.slick").on("click.slick", {
                message: "previous"
            }, t.changeSlide), t.$nextArrow.off("click.slick").on("click.slick", {
                message: "next"
            }, t.changeSlide), !0 === t.options.accessibility && (t.$prevArrow.on("keydown.slick", t.keyHandler), t.$nextArrow.on("keydown.slick", t.keyHandler)))
        }, n.prototype.initDotEvents = function() {
            var n = this;
            !0 === n.options.dots && n.slideCount > n.options.slidesToShow && (t("li", n.$dots).on("click.slick", {
                message: "index"
            }, n.changeSlide), !0 === n.options.accessibility && n.$dots.on("keydown.slick", n.keyHandler)), !0 === n.options.dots && !0 === n.options.pauseOnDotsHover && n.slideCount > n.options.slidesToShow && t("li", n.$dots).on("mouseenter.slick", t.proxy(n.interrupt, n, !0)).on("mouseleave.slick", t.proxy(n.interrupt, n, !1))
        }, n.prototype.initSlideEvents = function() {
            var n = this;
            n.options.pauseOnHover && (n.$list.on("mouseenter.slick", t.proxy(n.interrupt, n, !0)), n.$list.on("mouseleave.slick", t.proxy(n.interrupt, n, !1)))
        }, n.prototype.initializeEvents = function() {
            var n = this;
            n.initArrowEvents(), n.initDotEvents(), n.initSlideEvents(), n.$list.on("touchstart.slick mousedown.slick", {
                action: "start"
            }, n.swipeHandler), n.$list.on("touchmove.slick mousemove.slick", {
                action: "move"
            }, n.swipeHandler), n.$list.on("touchend.slick mouseup.slick", {
                action: "end"
            }, n.swipeHandler), n.$list.on("touchcancel.slick mouseleave.slick", {
                action: "end"
            }, n.swipeHandler), n.$list.on("click.slick", n.clickHandler), t(document).on(n.visibilityChange, t.proxy(n.visibility, n)), !0 === n.options.accessibility && n.$list.on("keydown.slick", n.keyHandler), !0 === n.options.focusOnSelect && t(n.$slideTrack).children().on("click.slick", n.selectHandler), t(window).on("orientationchange.slick.slick-" + n.instanceUid, t.proxy(n.orientationChange, n)), t(window).on("resize.slick.slick-" + n.instanceUid, t.proxy(n.resize, n)), t("[draggable!=true]", n.$slideTrack).on("dragstart", n.preventDefault), t(window).on("load.slick.slick-" + n.instanceUid, n.setPosition), t(n.setPosition)
        }, n.prototype.initUI = function() {
            var t = this;
            !0 === t.options.arrows && t.slideCount > t.options.slidesToShow && (t.$prevArrow.show(), t.$nextArrow.show()), !0 === t.options.dots && t.slideCount > t.options.slidesToShow && t.$dots.show()
        }, n.prototype.keyHandler = function(t) {
            var n = this;
            t.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === t.keyCode && !0 === n.options.accessibility ? n.changeSlide({
                data: {
                    message: !0 === n.options.rtl ? "next" : "previous"
                }
            }) : 39 === t.keyCode && !0 === n.options.accessibility && n.changeSlide({
                data: {
                    message: !0 === n.options.rtl ? "previous" : "next"
                }
            }))
        }, n.prototype.lazyLoad = function() {
            function n(n) {
                t("img[data-lazy]", n).each(function() {
                    var n = t(this),
                        e = t(this).attr("data-lazy"),
                        r = t(this).attr("data-srcset"),
                        o = t(this).attr("data-sizes") || a.$slider.attr("data-sizes"),
                        i = document.createElement("img");
                    i.onload = function() {
                        n.animate({
                            opacity: 0
                        }, 100, function() {
                            r && (n.attr("srcset", r), o && n.attr("sizes", o)), n.attr("src", e).animate({
                                opacity: 1
                            }, 200, function() {
                                n.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")
                            }), a.$slider.trigger("lazyLoaded", [a, n, e])
                        })
                    }, i.onerror = function() {
                        n.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), a.$slider.trigger("lazyLoadError", [a, n, e])
                    }, i.src = e
                })
            }
            var e, r, o, i, a = this;
            if (!0 === a.options.centerMode ? !0 === a.options.infinite ? (o = a.currentSlide + (a.options.slidesToShow / 2 + 1), i = o + a.options.slidesToShow + 2) : (o = Math.max(0, a.currentSlide - (a.options.slidesToShow / 2 + 1)), i = a.options.slidesToShow / 2 + 1 + 2 + a.currentSlide) : (o = a.options.infinite ? a.options.slidesToShow + a.currentSlide : a.currentSlide, i = Math.ceil(o + a.options.slidesToShow), !0 === a.options.fade && (o > 0 && o--, i <= a.slideCount && i++)), e = a.$slider.find(".slick-slide").slice(o, i), "anticipated" === a.options.lazyLoad)
                for (var s = o - 1, u = i, l = a.$slider.find(".slick-slide"), c = 0; c < a.options.slidesToScroll; c++) s < 0 && (s = a.slideCount - 1), e = e.add(l.eq(s)), e = e.add(l.eq(u)), s--, u++;
            n(e), a.slideCount <= a.options.slidesToShow ? (r = a.$slider.find(".slick-slide"), n(r)) : a.currentSlide >= a.slideCount - a.options.slidesToShow ? (r = a.$slider.find(".slick-cloned").slice(0, a.options.slidesToShow), n(r)) : 0 === a.currentSlide && (r = a.$slider.find(".slick-cloned").slice(-1 * a.options.slidesToShow), n(r))
        }, n.prototype.loadSlider = function() {
            var t = this;
            t.setPosition(), t.$slideTrack.css({
                opacity: 1
            }), t.$slider.removeClass("slick-loading"), t.initUI(), "progressive" === t.options.lazyLoad && t.progressiveLazyLoad()
        }, n.prototype.next = n.prototype.slickNext = function() {
            this.changeSlide({
                data: {
                    message: "next"
                }
            })
        }, n.prototype.orientationChange = function() {
            var t = this;
            t.checkResponsive(), t.setPosition()
        }, n.prototype.pause = n.prototype.slickPause = function() {
            var t = this;
            t.autoPlayClear(), t.paused = !0
        }, n.prototype.play = n.prototype.slickPlay = function() {
            var t = this;
            t.autoPlay(), t.options.autoplay = !0, t.paused = !1, t.focussed = !1, t.interrupted = !1
        }, n.prototype.postSlide = function(n) {
            var e = this;
            if (!e.unslicked && (e.$slider.trigger("afterChange", [e, n]), e.animating = !1, e.slideCount > e.options.slidesToShow && e.setPosition(), e.swipeLeft = null, e.options.autoplay && e.autoPlay(), !0 === e.options.accessibility && (e.initADA(), e.options.focusOnChange))) {
                t(e.$slides.get(e.currentSlide)).attr("tabindex", 0).focus()
            }
        }, n.prototype.prev = n.prototype.slickPrev = function() {
            this.changeSlide({
                data: {
                    message: "previous"
                }
            })
        }, n.prototype.preventDefault = function(t) {
            t.preventDefault()
        }, n.prototype.progressiveLazyLoad = function(n) {
            n = n || 1;
            var e, r, o, i, a, s = this,
                u = t("img[data-lazy]", s.$slider);
            u.length ? (e = u.first(), r = e.attr("data-lazy"), o = e.attr("data-srcset"), i = e.attr("data-sizes") || s.$slider.attr("data-sizes"), a = document.createElement("img"), a.onload = function() {
                o && (e.attr("srcset", o), i && e.attr("sizes", i)), e.attr("src", r).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"), !0 === s.options.adaptiveHeight && s.setPosition(), s.$slider.trigger("lazyLoaded", [s, e, r]), s.progressiveLazyLoad()
            }, a.onerror = function() {
                n < 3 ? setTimeout(function() {
                    s.progressiveLazyLoad(n + 1)
                }, 500) : (e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), s.$slider.trigger("lazyLoadError", [s, e, r]), s.progressiveLazyLoad())
            }, a.src = r) : s.$slider.trigger("allImagesLoaded", [s])
        }, n.prototype.refresh = function(n) {
            var e, r, o = this;
            r = o.slideCount - o.options.slidesToShow, !o.options.infinite && o.currentSlide > r && (o.currentSlide = r), o.slideCount <= o.options.slidesToShow && (o.currentSlide = 0), e = o.currentSlide, o.destroy(!0), t.extend(o, o.initials, {
                currentSlide: e
            }), o.init(), n || o.changeSlide({
                data: {
                    message: "index",
                    index: e
                }
            }, !1)
        }, n.prototype.registerBreakpoints = function() {
            var n, e, r, o = this,
                i = o.options.responsive || null;
            if ("array" === t.type(i) && i.length) {
                o.respondTo = o.options.respondTo || "window";
                for (n in i)
                    if (r = o.breakpoints.length - 1, i.hasOwnProperty(n)) {
                        for (e = i[n].breakpoint; r >= 0;) o.breakpoints[r] && o.breakpoints[r] === e && o.breakpoints.splice(r, 1), r--;
                        o.breakpoints.push(e), o.breakpointSettings[e] = i[n].settings
                    }
                o.breakpoints.sort(function(t, n) {
                    return o.options.mobileFirst ? t - n : n - t
                })
            }
        }, n.prototype.reinit = function() {
            var n = this;
            n.$slides = n.$slideTrack.children(n.options.slide).addClass("slick-slide"), n.slideCount = n.$slides.length, n.currentSlide >= n.slideCount && 0 !== n.currentSlide && (n.currentSlide = n.currentSlide - n.options.slidesToScroll), n.slideCount <= n.options.slidesToShow && (n.currentSlide = 0), n.registerBreakpoints(), n.setProps(), n.setupInfinite(), n.buildArrows(), n.updateArrows(), n.initArrowEvents(), n.buildDots(), n.updateDots(), n.initDotEvents(), n.cleanUpSlideEvents(), n.initSlideEvents(), n.checkResponsive(!1, !0), !0 === n.options.focusOnSelect && t(n.$slideTrack).children().on("click.slick", n.selectHandler), n.setSlideClasses("number" == typeof n.currentSlide ? n.currentSlide : 0), n.setPosition(), n.focusHandler(), n.paused = !n.options.autoplay, n.autoPlay(), n.$slider.trigger("reInit", [n])
        }, n.prototype.resize = function() {
            var n = this;
            t(window).width() !== n.windowWidth && (clearTimeout(n.windowDelay), n.windowDelay = window.setTimeout(function() {
                n.windowWidth = t(window).width(), n.checkResponsive(), n.unslicked || n.setPosition()
            }, 50))
        }, n.prototype.removeSlide = n.prototype.slickRemove = function(t, n, e) {
            var r = this;
            if ("boolean" == typeof t ? (n = t, t = !0 === n ? 0 : r.slideCount - 1) : t = !0 === n ? --t : t, r.slideCount < 1 || t < 0 || t > r.slideCount - 1) return !1;
            r.unload(), !0 === e ? r.$slideTrack.children().remove() : r.$slideTrack.children(this.options.slide).eq(t).remove(), r.$slides = r.$slideTrack.children(this.options.slide), r.$slideTrack.children(this.options.slide).detach(), r.$slideTrack.append(r.$slides), r.$slidesCache = r.$slides, r.reinit()
        }, n.prototype.setCSS = function(t) {
            var n, e, r = this,
                o = {};
            !0 === r.options.rtl && (t = -t), n = "left" == r.positionProp ? Math.ceil(t) + "px" : "0px", e = "top" == r.positionProp ? Math.ceil(t) + "px" : "0px", o[r.positionProp] = t, !1 === r.transformsEnabled ? r.$slideTrack.css(o) : (o = {}, !1 === r.cssTransitions ? (o[r.animType] = "translate(" + n + ", " + e + ")", r.$slideTrack.css(o)) : (o[r.animType] = "translate3d(" + n + ", " + e + ", 0px)", r.$slideTrack.css(o)))
        }, n.prototype.setDimensions = function() {
            var t = this;
            !1 === t.options.vertical ? !0 === t.options.centerMode && t.$list.css({
                padding: "0px " + t.options.centerPadding
            }) : (t.$list.height(t.$slides.first().outerHeight(!0) * t.options.slidesToShow), !0 === t.options.centerMode && t.$list.css({
                padding: t.options.centerPadding + " 0px"
            })), t.listWidth = t.$list.width(), t.listHeight = t.$list.height(), !1 === t.options.vertical && !1 === t.options.variableWidth ? (t.slideWidth = Math.ceil(t.listWidth / t.options.slidesToShow), t.$slideTrack.width(Math.ceil(t.slideWidth * t.$slideTrack.children(".slick-slide").length))) : !0 === t.options.variableWidth ? t.$slideTrack.width(5e3 * t.slideCount) : (t.slideWidth = Math.ceil(t.listWidth), t.$slideTrack.height(Math.ceil(t.$slides.first().outerHeight(!0) * t.$slideTrack.children(".slick-slide").length)));
            var n = t.$slides.first().outerWidth(!0) - t.$slides.first().width();
            !1 === t.options.variableWidth && t.$slideTrack.children(".slick-slide").width(t.slideWidth - n)
        }, n.prototype.setFade = function() {
            var n, e = this;
            e.$slides.each(function(r, o) {
                n = e.slideWidth * r * -1, !0 === e.options.rtl ? t(o).css({
                    position: "relative",
                    right: n,
                    top: 0,
                    zIndex: e.options.zIndex - 2,
                    opacity: 0
                }) : t(o).css({
                    position: "relative",
                    left: n,
                    top: 0,
                    zIndex: e.options.zIndex - 2,
                    opacity: 0
                })
            }), e.$slides.eq(e.currentSlide).css({
                zIndex: e.options.zIndex - 1,
                opacity: 1
            })
        }, n.prototype.setHeight = function() {
            var t = this;
            if (1 === t.options.slidesToShow && !0 === t.options.adaptiveHeight && !1 === t.options.vertical) {
                var n = t.$slides.eq(t.currentSlide).outerHeight(!0);
                t.$list.css("height", n)
            }
        }, n.prototype.setOption = n.prototype.slickSetOption = function() {
            var n, e, r, o, i, a = this,
                s = !1;
            if ("object" === t.type(arguments[0]) ? (r = arguments[0], s = arguments[1], i = "multiple") : "string" === t.type(arguments[0]) && (r = arguments[0], o = arguments[1], s = arguments[2], "responsive" === arguments[0] && "array" === t.type(arguments[1]) ? i = "responsive" : void 0 !== arguments[1] && (i = "single")), "single" === i) a.options[r] = o;
            else if ("multiple" === i) t.each(r, function(t, n) {
                a.options[t] = n
            });
            else if ("responsive" === i)
                for (e in o)
                    if ("array" !== t.type(a.options.responsive)) a.options.responsive = [o[e]];
                    else {
                        for (n = a.options.responsive.length - 1; n >= 0;) a.options.responsive[n].breakpoint === o[e].breakpoint && a.options.responsive.splice(n, 1), n--;
                        a.options.responsive.push(o[e])
                    }
            s && (a.unload(), a.reinit())
        }, n.prototype.setPosition = function() {
            var t = this;
            t.setDimensions(), t.setHeight(), !1 === t.options.fade ? t.setCSS(t.getLeft(t.currentSlide)) : t.setFade(), t.$slider.trigger("setPosition", [t])
        }, n.prototype.setProps = function() {
            var t = this,
                n = document.body.style;
            t.positionProp = !0 === t.options.vertical ? "top" : "left", "top" === t.positionProp ? t.$slider.addClass("slick-vertical") : t.$slider.removeClass("slick-vertical"), void 0 === n.WebkitTransition && void 0 === n.MozTransition && void 0 === n.msTransition || !0 === t.options.useCSS && (t.cssTransitions = !0), t.options.fade && ("number" == typeof t.options.zIndex ? t.options.zIndex < 3 && (t.options.zIndex = 3) : t.options.zIndex = t.defaults.zIndex), void 0 !== n.OTransform && (t.animType = "OTransform", t.transformType = "-o-transform", t.transitionType = "OTransition", void 0 === n.perspectiveProperty && void 0 === n.webkitPerspective && (t.animType = !1)), void 0 !== n.MozTransform && (t.animType = "MozTransform", t.transformType = "-moz-transform", t.transitionType = "MozTransition", void 0 === n.perspectiveProperty && void 0 === n.MozPerspective && (t.animType = !1)), void 0 !== n.webkitTransform && (t.animType = "webkitTransform", t.transformType = "-webkit-transform", t.transitionType = "webkitTransition", void 0 === n.perspectiveProperty && void 0 === n.webkitPerspective && (t.animType = !1)), void 0 !== n.msTransform && (t.animType = "msTransform", t.transformType = "-ms-transform", t.transitionType = "msTransition", void 0 === n.msTransform && (t.animType = !1)), void 0 !== n.transform && !1 !== t.animType && (t.animType = "transform", t.transformType = "transform", t.transitionType = "transition"), t.transformsEnabled = t.options.useTransform && null !== t.animType && !1 !== t.animType
        }, n.prototype.setSlideClasses = function(t) {
            var n, e, r, o, i = this;
            if (e = i.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), i.$slides.eq(t).addClass("slick-current"), !0 === i.options.centerMode) {
                var a = i.options.slidesToShow % 2 == 0 ? 1 : 0;
                n = Math.floor(i.options.slidesToShow / 2), !0 === i.options.infinite && (t >= n && t <= i.slideCount - 1 - n ? i.$slides.slice(t - n + a, t + n + 1).addClass("slick-active").attr("aria-hidden", "false") : (r = i.options.slidesToShow + t, e.slice(r - n + 1 + a, r + n + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === t ? e.eq(e.length - 1 - i.options.slidesToShow).addClass("slick-center") : t === i.slideCount - 1 && e.eq(i.options.slidesToShow).addClass("slick-center")), i.$slides.eq(t).addClass("slick-center")
            } else t >= 0 && t <= i.slideCount - i.options.slidesToShow ? i.$slides.slice(t, t + i.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : e.length <= i.options.slidesToShow ? e.addClass("slick-active").attr("aria-hidden", "false") : (o = i.slideCount % i.options.slidesToShow, r = !0 === i.options.infinite ? i.options.slidesToShow + t : t, i.options.slidesToShow == i.options.slidesToScroll && i.slideCount - t < i.options.slidesToShow ? e.slice(r - (i.options.slidesToShow - o), r + o).addClass("slick-active").attr("aria-hidden", "false") : e.slice(r, r + i.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false"));
            "ondemand" !== i.options.lazyLoad && "anticipated" !== i.options.lazyLoad || i.lazyLoad()
        }, n.prototype.setupInfinite = function() {
            var n, e, r, o = this;
            if (!0 === o.options.fade && (o.options.centerMode = !1), !0 === o.options.infinite && !1 === o.options.fade && (e = null, o.slideCount > o.options.slidesToShow)) {
                for (r = !0 === o.options.centerMode ? o.options.slidesToShow + 1 : o.options.slidesToShow, n = o.slideCount; n > o.slideCount - r; n -= 1) e = n - 1, t(o.$slides[e]).clone(!0).attr("id", "").attr("data-slick-index", e - o.slideCount).prependTo(o.$slideTrack).addClass("slick-cloned");
                for (n = 0; n < r + o.slideCount; n += 1) e = n, t(o.$slides[e]).clone(!0).attr("id", "").attr("data-slick-index", e + o.slideCount).appendTo(o.$slideTrack).addClass("slick-cloned");
                o.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                    t(this).attr("id", "")
                })
            }
        }, n.prototype.interrupt = function(t) {
            var n = this;
            t || n.autoPlay(), n.interrupted = t
        }, n.prototype.selectHandler = function(n) {
            var e = this,
                r = t(n.target).is(".slick-slide") ? t(n.target) : t(n.target).parents(".slick-slide"),
                o = parseInt(r.attr("data-slick-index"));
            if (o || (o = 0), e.slideCount <= e.options.slidesToShow) return void e.slideHandler(o, !1, !0);
            e.slideHandler(o)
        }, n.prototype.slideHandler = function(t, n, e) {
            var r, o, i, a, s, u = null,
                l = this;
            if (n = n || !1, !(!0 === l.animating && !0 === l.options.waitForAnimate || !0 === l.options.fade && l.currentSlide === t)) {
                if (!1 === n && l.asNavFor(t), r = t, u = l.getLeft(r), a = l.getLeft(l.currentSlide), l.currentLeft = null === l.swipeLeft ? a : l.swipeLeft, !1 === l.options.infinite && !1 === l.options.centerMode && (t < 0 || t > l.getDotCount() * l.options.slidesToScroll)) return void(!1 === l.options.fade && (r = l.currentSlide, !0 !== e && l.slideCount > l.options.slidesToShow ? l.animateSlide(a, function() {
                    l.postSlide(r)
                }) : l.postSlide(r)));
                if (!1 === l.options.infinite && !0 === l.options.centerMode && (t < 0 || t > l.slideCount - l.options.slidesToScroll)) return void(!1 === l.options.fade && (r = l.currentSlide, !0 !== e && l.slideCount > l.options.slidesToShow ? l.animateSlide(a, function() {
                    l.postSlide(r)
                }) : l.postSlide(r)));
                if (l.options.autoplay && clearInterval(l.autoPlayTimer), o = r < 0 ? l.slideCount % l.options.slidesToScroll != 0 ? l.slideCount - l.slideCount % l.options.slidesToScroll : l.slideCount + r : r >= l.slideCount ? l.slideCount % l.options.slidesToScroll != 0 ? 0 : r - l.slideCount : r, l.animating = !0, l.$slider.trigger("beforeChange", [l, l.currentSlide, o]), i = l.currentSlide, l.currentSlide = o, l.setSlideClasses(l.currentSlide), l.options.asNavFor && (s = l.getNavTarget(), s = s.slick("getSlick"), s.slideCount <= s.options.slidesToShow && s.setSlideClasses(l.currentSlide)), l.updateDots(), l.updateArrows(), !0 === l.options.fade) return !0 !== e ? (l.fadeSlideOut(i), l.fadeSlide(o, function() {
                    l.postSlide(o)
                })) : l.postSlide(o), void l.animateHeight();
                !0 !== e && l.slideCount > l.options.slidesToShow ? l.animateSlide(u, function() {
                    l.postSlide(o)
                }) : l.postSlide(o)
            }
        }, n.prototype.startLoad = function() {
            var t = this;
            !0 === t.options.arrows && t.slideCount > t.options.slidesToShow && (t.$prevArrow.hide(), t.$nextArrow.hide()), !0 === t.options.dots && t.slideCount > t.options.slidesToShow && t.$dots.hide(), t.$slider.addClass("slick-loading")
        }, n.prototype.swipeDirection = function() {
            var t, n, e, r, o = this;
            return t = o.touchObject.startX - o.touchObject.curX, n = o.touchObject.startY - o.touchObject.curY, e = Math.atan2(n, t), r = Math.round(180 * e / Math.PI), r < 0 && (r = 360 - Math.abs(r)), r <= 45 && r >= 0 ? !1 === o.options.rtl ? "left" : "right" : r <= 360 && r >= 315 ? !1 === o.options.rtl ? "left" : "right" : r >= 135 && r <= 225 ? !1 === o.options.rtl ? "right" : "left" : !0 === o.options.verticalSwiping ? r >= 35 && r <= 135 ? "down" : "up" : "vertical"
        }, n.prototype.swipeEnd = function(t) {
            var n, e, r = this;
            if (r.dragging = !1, r.swiping = !1, r.scrolling) return r.scrolling = !1, !1;
            if (r.interrupted = !1, r.shouldClick = !(r.touchObject.swipeLength > 10), void 0 === r.touchObject.curX) return !1;
            if (!0 === r.touchObject.edgeHit && r.$slider.trigger("edge", [r, r.swipeDirection()]), r.touchObject.swipeLength >= r.touchObject.minSwipe) {
                switch (e = r.swipeDirection()) {
                    case "left":
                    case "down":
                        n = r.options.swipeToSlide ? r.checkNavigable(r.currentSlide + r.getSlideCount()) : r.currentSlide + r.getSlideCount(), r.currentDirection = 0;
                        break;
                    case "right":
                    case "up":
                        n = r.options.swipeToSlide ? r.checkNavigable(r.currentSlide - r.getSlideCount()) : r.currentSlide - r.getSlideCount(), r.currentDirection = 1
                }
                "vertical" != e && (r.slideHandler(n), r.touchObject = {}, r.$slider.trigger("swipe", [r, e]))
            } else r.touchObject.startX !== r.touchObject.curX && (r.slideHandler(r.currentSlide), r.touchObject = {})
        }, n.prototype.swipeHandler = function(t) {
            var n = this;
            if (!(!1 === n.options.swipe || "ontouchend" in document && !1 === n.options.swipe || !1 === n.options.draggable && -1 !== t.type.indexOf("mouse"))) switch (n.touchObject.fingerCount = t.originalEvent && void 0 !== t.originalEvent.touches ? t.originalEvent.touches.length : 1, n.touchObject.minSwipe = n.listWidth / n.options.touchThreshold, !0 === n.options.verticalSwiping && (n.touchObject.minSwipe = n.listHeight / n.options.touchThreshold), t.data.action) {
                case "start":
                    n.swipeStart(t);
                    break;
                case "move":
                    n.swipeMove(t);
                    break;
                case "end":
                    n.swipeEnd(t)
            }
        }, n.prototype.swipeMove = function(t) {
            var n, e, r, o, i, a, s = this;
            return i = void 0 !== t.originalEvent ? t.originalEvent.touches : null, !(!s.dragging || s.scrolling || i && 1 !== i.length) && (n = s.getLeft(s.currentSlide), s.touchObject.curX = void 0 !== i ? i[0].pageX : t.clientX, s.touchObject.curY = void 0 !== i ? i[0].pageY : t.clientY, s.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(s.touchObject.curX - s.touchObject.startX, 2))), a = Math.round(Math.sqrt(Math.pow(s.touchObject.curY - s.touchObject.startY, 2))), !s.options.verticalSwiping && !s.swiping && a > 4 ? (s.scrolling = !0, !1) : (!0 === s.options.verticalSwiping && (s.touchObject.swipeLength = a), e = s.swipeDirection(), void 0 !== t.originalEvent && s.touchObject.swipeLength > 4 && (s.swiping = !0, t.preventDefault()), o = (!1 === s.options.rtl ? 1 : -1) * (s.touchObject.curX > s.touchObject.startX ? 1 : -1), !0 === s.options.verticalSwiping && (o = s.touchObject.curY > s.touchObject.startY ? 1 : -1), r = s.touchObject.swipeLength, s.touchObject.edgeHit = !1, !1 === s.options.infinite && (0 === s.currentSlide && "right" === e || s.currentSlide >= s.getDotCount() && "left" === e) && (r = s.touchObject.swipeLength * s.options.edgeFriction, s.touchObject.edgeHit = !0), !1 === s.options.vertical ? s.swipeLeft = n + r * o : s.swipeLeft = n + r * (s.$list.height() / s.listWidth) * o, !0 === s.options.verticalSwiping && (s.swipeLeft = n + r * o), !0 !== s.options.fade && !1 !== s.options.touchMove && (!0 === s.animating ? (s.swipeLeft = null, !1) : void s.setCSS(s.swipeLeft))))
        }, n.prototype.swipeStart = function(t) {
            var n, e = this;
            if (e.interrupted = !0, 1 !== e.touchObject.fingerCount || e.slideCount <= e.options.slidesToShow) return e.touchObject = {}, !1;
            void 0 !== t.originalEvent && void 0 !== t.originalEvent.touches && (n = t.originalEvent.touches[0]), e.touchObject.startX = e.touchObject.curX = void 0 !== n ? n.pageX : t.clientX, e.touchObject.startY = e.touchObject.curY = void 0 !== n ? n.pageY : t.clientY, e.dragging = !0
        }, n.prototype.unfilterSlides = n.prototype.slickUnfilter = function() {
            var t = this;
            null !== t.$slidesCache && (t.unload(), t.$slideTrack.children(this.options.slide).detach(), t.$slidesCache.appendTo(t.$slideTrack), t.reinit())
        }, n.prototype.unload = function() {
            var n = this;
            t(".slick-cloned", n.$slider).remove(), n.$dots && n.$dots.remove(), n.$prevArrow && n.htmlExpr.test(n.options.prevArrow) && n.$prevArrow.remove(), n.$nextArrow && n.htmlExpr.test(n.options.nextArrow) && n.$nextArrow.remove(), n.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "")
        }, n.prototype.unslick = function(t) {
            var n = this;
            n.$slider.trigger("unslick", [n, t]), n.destroy()
        }, n.prototype.updateArrows = function() {
            var t = this;
            Math.floor(t.options.slidesToShow / 2), !0 === t.options.arrows && t.slideCount > t.options.slidesToShow && !t.options.infinite && (t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === t.currentSlide ? (t.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : t.currentSlide >= t.slideCount - t.options.slidesToShow && !1 === t.options.centerMode ? (t.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : t.currentSlide >= t.slideCount - 1 && !0 === t.options.centerMode && (t.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")))
        }, n.prototype.updateDots = function() {
            var t = this;
            null !== t.$dots && (t.$dots.find("li").removeClass("slick-active").end(), t.$dots.find("li").eq(Math.floor(t.currentSlide / t.options.slidesToScroll)).addClass("slick-active"))
        }, n.prototype.visibility = function() {
            var t = this;
            t.options.autoplay && (document[t.hidden] ? t.interrupted = !0 : t.interrupted = !1)
        }, t.fn.slick = function() {
            var t, e, r = this,
                o = arguments[0],
                i = Array.prototype.slice.call(arguments, 1),
                a = r.length;
            for (t = 0; t < a; t++)
                if ("object" == typeof o || void 0 === o ? r[t].slick = new n(r[t], o) : e = r[t].slick[o].apply(r[t].slick, i), void 0 !== e) return e;
            return r
        }
    })
}, , , , , , , , , , , , , , , , , , function(t, n, e) {
    e(416), t.exports = e(973)
}], [1563]);